{"ast":null,"code":"var _jsxFileName = \"/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Board.css';\nimport Hexagon from './Hexagon';\nimport Champion from './Champion';\nimport DualButton from './DualButton';\nimport Traits from './Traits';\nimport Augments from './Augments';\nimport ChampionDisplay from './ChampionDisplay';\nimport { puzzlesList, Puzzles } from './Puzzles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CIRCLE_DIAMETER = 50;\nconst ITERATION_CYCLE = 25;\nvar globalIteration = 0;\nconst adjacentHexagons = {\n  0: {\n    0: [[0, 1], [1, 0]],\n    1: [[0, 0], [1, 0], [1, 1], [1, 2], [0, 2]],\n    2: [[0, 1], [1, 2], [0, 3]],\n    3: [[0, 2], [1, 2], [1, 3], [1, 4], [0, 4]],\n    4: [[0, 3], [1, 4], [0, 5]],\n    5: [[0, 4], [1, 4], [1, 5], [1, 6], [0, 6]],\n    6: [[0, 5], [1, 6], [0, 7]],\n    7: [[0, 6], [1, 6], [1, 7]]\n  },\n  1: {\n    0: [[0, 0], [0, 1], [1, 1], [2, 0]],\n    1: [[1, 0], [0, 1], [1, 2], [2, 2], [2, 1], [2, 0]],\n    2: [[0, 1], [0, 2], [0, 3], [1, 3], [2, 2], [1, 1]],\n    3: [[1, 2], [0, 3], [1, 4], [2, 4], [2, 3], [2, 2]],\n    4: [[0, 3], [0, 4], [0, 5], [1, 5], [2, 4], [1, 3]],\n    5: [[1, 4], [0, 5], [1, 6], [2, 6], [2, 5], [2, 4]],\n    6: [[0, 5], [0, 6], [0, 7], [1, 7], [2, 6], [1, 5]],\n    7: [[1, 6], [0, 7], [2, 6], [2, 7]]\n  },\n  2: {\n    0: [[1, 0], [1, 1], [2, 1], [3, 0]],\n    1: [[2, 0], [1, 1], [2, 2], [3, 2], [3, 1], [3, 0]],\n    2: [[1, 1], [1, 2], [1, 3], [2, 3], [3, 2], [2, 1]],\n    3: [[2, 2], [1, 3], [2, 4], [3, 4], [3, 3], [3, 2]],\n    4: [[1, 3], [1, 4], [1, 5], [2, 5], [3, 4], [2, 3]],\n    5: [[2, 4], [1, 5], [2, 6], [3, 6], [3, 5], [3, 4]],\n    6: [[1, 5], [1, 6], [1, 7], [2, 7], [3, 6], [2, 5]],\n    7: [[2, 6], [1, 7], [3, 6], [3, 7]]\n  },\n  3: {\n    0: [[2, 0], [2, 1], [3, 1], [4, 0]],\n    1: [[3, 0], [2, 1], [3, 2], [4, 2], [4, 1], [4, 0]],\n    2: [[2, 1], [2, 2], [2, 3], [3, 3], [4, 2], [3, 1]],\n    3: [[3, 2], [2, 3], [3, 4], [4, 4], [4, 3], [4, 2]],\n    4: [[2, 3], [2, 4], [2, 5], [3, 5], [4, 4], [3, 3]],\n    5: [[3, 4], [2, 5], [3, 6], [4, 6], [4, 5], [4, 4]],\n    6: [[2, 5], [2, 6], [2, 7], [3, 7], [4, 6], [3, 5]],\n    7: [[3, 6], [2, 7], [4, 6], [4, 7]]\n  },\n  4: {\n    0: [[3, 0], [3, 1], [4, 1], [5, 0]],\n    1: [[4, 0], [3, 1], [4, 2], [5, 2], [5, 1], [5, 0]],\n    2: [[3, 1], [3, 2], [3, 3], [4, 3], [5, 2], [4, 1]],\n    3: [[4, 2], [3, 3], [4, 4], [5, 4], [5, 3], [5, 2]],\n    4: [[3, 3], [3, 4], [3, 5], [4, 5], [5, 4], [4, 3]],\n    5: [[4, 4], [3, 5], [4, 6], [5, 6], [5, 5], [5, 4]],\n    6: [[3, 5], [3, 6], [3, 7], [4, 7], [5, 6], [4, 5]],\n    7: [[4, 6], [3, 7], [5, 6], [5, 7]]\n  },\n  5: {\n    0: [[4, 0], [4, 1], [5, 1], [6, 0]],\n    1: [[5, 0], [4, 1], [5, 2], [6, 2], [6, 1], [6, 0]],\n    2: [[4, 1], [4, 2], [4, 3], [5, 3], [6, 2], [5, 1]],\n    3: [[5, 2], [4, 3], [5, 4], [6, 4], [6, 3], [6, 2]],\n    4: [[4, 3], [4, 4], [4, 5], [5, 5], [6, 4], [5, 3]],\n    5: [[5, 4], [4, 5], [5, 6], [6, 6], [6, 5], [6, 4]],\n    6: [[4, 5], [4, 6], [4, 7], [5, 7], [6, 6], [5, 5]],\n    7: [[5, 6], [4, 7], [6, 6], [6, 7]]\n  },\n  6: {\n    0: [[5, 0], [5, 1], [6, 1]],\n    1: [[6, 0], [5, 1], [6, 2]],\n    2: [[6, 1], [5, 1], [5, 2], [5, 3], [6, 3]],\n    3: [[6, 2], [5, 3], [6, 4]],\n    4: [[6, 3], [5, 3], [5, 4], [5, 5], [6, 5]],\n    5: [[6, 4], [5, 5], [6, 6]],\n    6: [[6, 5], [5, 5], [5, 6], [5, 7], [6, 7]],\n    7: [[6, 6], [5, 7]]\n  }\n};\nfunction getNeighbors(champion) {\n  const left = champion.hexagonPosition.left;\n  const top = champion.hexagonPosition.top;\n  if (adjacentHexagons[left] && adjacentHexagons[left][top]) {\n    return adjacentHexagons[left][top];\n  }\n  return [];\n}\nfunction isAdjacent(champion1, champion2) {\n  const hex1 = [champion1.hexagonPosition.left, champion1.hexagonPosition.top];\n  const hex2 = [champion2.hexagonPosition.left, champion2.hexagonPosition.top];\n  const neighbors = getNeighbors({\n    hexagonPosition: {\n      left: hex1[0],\n      top: hex1[1]\n    }\n  });\n  return neighbors.some(neighbor => neighbor[0] === hex2[0] && neighbor[1] === hex2[1]);\n}\nfunction findShortestPath(champions, start, end, attackRange) {\n  const visited = new Set();\n  const queue = [[start]];\n  while (queue.length > 0) {\n    const path = queue.shift();\n    const currentHexagon = path[path.length - 1];\n    if (currentHexagon[0] !== undefined && currentHexagon[0] !== null) {\n      // if (isAdjacent({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } }, end)) {\n      //   return path;\n      // }\n\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n        const neighbors = getNeighbors({\n          hexagonPosition: {\n            left: currentHexagon[0],\n            top: currentHexagon[1]\n          }\n        });\n        for (const neighbor of neighbors) {\n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n            // Check attack range\n            if (attackRange === 1) {\n              if (isAdjacent({\n                hexagonPosition: {\n                  left: currentHexagon[0],\n                  top: currentHexagon[1]\n                }\n              }, end)) {\n                return path;\n              }\n            }\n            if (attackRange === 2) {\n              if (isAdjacent({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              }, end)) {\n                return path;\n              }\n            } else if (attackRange === 3) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              if (neighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            } else if (attackRange === 4) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              if (neighborNeighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            } else if (attackRange === 5) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              const neighborNeighborNeighborNeighbors = [];\n              for (const n of neighborNeighborNeighbors) {\n                neighborNeighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              if (neighborNeighborNeighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            }\n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    } else {\n      // if (isAdjacent(currentHexagon, end)) {\n      //   return path;\n      // }\n\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n        const neighbors = getNeighbors(currentHexagon);\n        for (const neighbor of neighbors) {\n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n            // Check attack range\n            if (attackRange === 1) {\n              if (isAdjacent(currentHexagon, end)) {\n                return path;\n              }\n            }\n            if (attackRange === 2) {\n              if (isAdjacent({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              }, end)) {\n                return path;\n              }\n            } else if (attackRange === 3) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              if (neighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            } else if (attackRange === 4) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              if (neighborNeighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            } else if (attackRange === 5) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              const neighborNeighborNeighborNeighbors = [];\n              for (const n of neighborNeighborNeighbors) {\n                neighborNeighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              if (neighborNeighborNeighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            }\n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\nfunction findClosestEnemy(userChampion, enemyChampions) {\n  let closestEnemy = null;\n  let minDistance = Infinity;\n  for (const enemyChampion of enemyChampions) {\n    const distance = findShortestPath(enemyChampions, {\n      hexagonPosition: {\n        left: userChampion.hexagonPosition.left,\n        top: userChampion.hexagonPosition.top\n      }\n    }, {\n      hexagonPosition: {\n        left: enemyChampion.hexagonPosition.left,\n        top: enemyChampion.hexagonPosition.top\n      }\n    }, userChampion.attackRange);\n    if (distance && distance.length < minDistance) {\n      minDistance = distance.length;\n      closestEnemy = enemyChampion;\n    }\n  }\n  return closestEnemy;\n}\nfunction Board({\n  enemyChampionsList,\n  userChampionsList,\n  initialPuzzleNumber\n}) {\n  _s();\n  const [isDragging, setDragging] = useState(false);\n  const [enemyChampions, setEnemyChampions] = useState(enemyChampionsList);\n  const [userChampions, setUserChampions] = useState(userChampionsList);\n  const [draggedPlayer, setDraggedPlayer] = useState(null);\n  const [dragStartIndex, setDragStartIndex] = useState(null);\n  const [isCombatActive, setCombatActive] = useState(0);\n  const [selectedChampion, setSelectedChampion] = useState(userChampionsList[0]);\n  const [puzzleNumber, setPuzzleNumber] = useState(initialPuzzleNumber);\n  // const [combatIteration, setCombatIteration] = useState(0); // will implement later for overtime\n  console.log(userChampions);\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n  const handleNextPuzzleClick = e => {\n    e.preventDefault();\n    setCombatActive(0);\n    let newPuzzleNumber;\n    do {\n      newPuzzleNumber = getRandomInt(puzzlesList.length);\n    } while (newPuzzleNumber === puzzleNumber);\n    console.log('New Puzzle Number: ', puzzleNumber);\n    setPuzzleNumber(newPuzzleNumber);\n    const newChampions = Puzzles(newPuzzleNumber);\n    setEnemyChampions(newChampions[0]);\n    setUserChampions(newChampions[1]);\n  };\n  const startCombat = () => {\n    setCombatActive(1);\n  };\n  const endCombat = () => {\n    setCombatActive(2);\n    // console.log(\"combat ended\");\n  };\n  useEffect(() => {\n    if (isCombatActive === 1) {\n      const allChampions = userChampions.concat(enemyChampions);\n      // console.log('before champions', allChampions);\n\n      const updateChampionAtIndex = async index => {\n        const tempChampion = allChampions[index];\n        var allChampionsProjectileIteration = 0;\n        const allProjectiles = tempChampion.projectiles;\n        if (allProjectiles !== undefined & allProjectiles !== null & allProjectiles !== 0) {\n          for (const projectile of allProjectiles) {\n            if (projectile.iterations === 0) {\n              if (allChampions[index].health - projectile.damage <= 0) {\n                const newProjectiles = allChampions[index].projectiles.filter((_, index) => index !== allChampionsProjectileIteration);\n                allChampions[index] = {\n                  ...allChampions[index],\n                  alive: false,\n                  projectiles: newProjectiles\n                };\n                console.log(`${tempChampion.type} of ${tempChampion.team} took ${projectile.damage} damage and died.`);\n                break;\n              } else {\n                const newHealth = allChampions[index].health - projectile.damage;\n                // if (projectile.effect !== null & projectile.effect.length !== 0) {\n                //   for (const effect in projectile.effect) {\n                //     if (effect.type === 'shred') {\n\n                //     }\n                //   }\n                // }\n                console.log(`${tempChampion.type} of ${tempChampion.team} took ${projectile.damage} damage.`);\n                if (tempChampion.mana === null) {\n                  const newProjectiles = allChampions[index].projectiles.filter((_, index) => index !== allChampionsProjectileIteration);\n                  allChampions[index] = {\n                    ...allChampions[index],\n                    health: newHealth,\n                    projectiles: newProjectiles\n                  };\n                } else {\n                  const newCurrentMana = Math.min(allChampions[index].totalMana, allChampions[index].mana + projectile.mana);\n                  const newProjectiles = allChampions[index].projectiles.filter((_, index) => index !== allChampionsProjectileIteration);\n                  allChampions[index] = {\n                    ...allChampions[index],\n                    health: newHealth,\n                    mana: newCurrentMana,\n                    projectiles: newProjectiles\n                  };\n                }\n              }\n            } else {\n              var newProjectiles = allChampions[index].projectiles;\n              const newProjectileIterations = projectile.iterations - 1;\n              newProjectiles[allChampionsProjectileIteration] = {\n                ...projectile,\n                iterations: newProjectileIterations\n              };\n              allChampions[index] = {\n                ...allChampions[index],\n                projectiles: newProjectiles\n              };\n              allChampionsProjectileIteration += 1;\n            }\n          }\n        }\n        const champion = allChampions[index];\n        if (allChampions[index].alive) {\n          const isUserChampion = champion.team === 'user';\n          const closestEnemy = isUserChampion ? findClosestEnemy(champion, enemyChampions) : findClosestEnemy(champion, userChampions);\n          if (closestEnemy) {\n            const shortestPath = findShortestPath(allChampions, champion, closestEnemy, champion.attackRange);\n            // console.log('shortest path', shortestPath);\n\n            if (shortestPath && shortestPath.length > 1) {\n              const targetHexagon = shortestPath[1];\n              const targetPixelLeft = convertToPixels(targetHexagon[0], 'left', targetHexagon[1] % 2 === 1) - 25;\n              const targetPixelTop = convertToPixels(targetHexagon[1], 'top', targetHexagon[1] % 2 === 1) - 25;\n              if (champion.iterationsRemaining.move === 0) {\n                const newIterationsRemaining = {\n                  ...champion.iterationsRemaining,\n                  move: champion.movementSpeed\n                };\n                allChampions[index] = {\n                  ...champion,\n                  hexagonPosition: {\n                    left: targetHexagon[0],\n                    top: targetHexagon[1]\n                  },\n                  currentPosition: {\n                    left: targetPixelLeft,\n                    top: targetPixelTop\n                  },\n                  iterationsRemaining: newIterationsRemaining\n                };\n                console.log(`${champion.type} of ${champion.team} moved.`);\n              } else {\n                const newIterationsRemaining = {\n                  ...champion.iterationsRemaining,\n                  move: champion.iterationsRemaining.move - 1\n                };\n                allChampions[index] = {\n                  ...champion,\n                  iterationsRemaining: newIterationsRemaining\n                };\n              }\n\n              // console.log('updated champion', allChampions[index]);\n            } else {\n              if (champion.totalMana === 0 | champion.mana < champion.totalMana) {\n                if (champion.iterationsRemaining.attack === 0) {\n                  const postMitigationAttackDamage = (1 - closestEnemy.armor / (100 + closestEnemy.armor)) * champion.attackDamage;\n                  const manaIncrement = Math.min(42.5, 0.01 * champion.attackDamage + 0.07 * postMitigationAttackDamage);\n                  var newCurrentMana = Math.min(closestEnemy.totalMana, closestEnemy.mana + manaIncrement);\n                  const newProjectile = {\n                    damage: postMitigationAttackDamage,\n                    mana: newCurrentMana,\n                    iterations: champion.attackProjectileSpeed,\n                    effect: []\n                  };\n                  const newProjectileList = [...closestEnemy.projectiles, newProjectile];\n                  allChampions[closestEnemy.index] = {\n                    ...closestEnemy,\n                    projectiles: newProjectileList\n                  };\n                  newCurrentMana = Math.min(champion.totalMana, champion.mana + 10);\n                  const newIterationsRemaining = {\n                    ...champion.iterationsRemaining,\n                    attack: champion.attackSpeed\n                  };\n                  allChampions[index] = {\n                    ...champion,\n                    mana: newCurrentMana,\n                    iterationsRemaining: newIterationsRemaining\n                  };\n                  console.log(`${champion.type} of ${champion.team} fired an attack to ${closestEnemy.type}.`);\n                } else {\n                  const newIterationsRemaining = {\n                    ...champion.iterationsRemaining,\n                    attack: champion.iterationsRemaining.attack - 1\n                  };\n                  allChampions[index] = {\n                    ...champion,\n                    iterationsRemaining: newIterationsRemaining\n                  };\n                }\n              } else if (champion.mana >= champion.totalMana) {\n                if (champion.iterationsRemaining.ability === 0) {\n                  const postMitigationAbilityDamage = (1 - closestEnemy.magicResist / (100 + closestEnemy.magicResist)) * champion.abilityPower;\n                  const manaIncrement = Math.min(42.5, 0.01 * champion.attackDamage + 0.07 * postMitigationAbilityDamage);\n                  const newCurrentMana = Math.min(closestEnemy.totalMana, closestEnemy.mana + manaIncrement);\n                  const newProjectile = {\n                    damage: postMitigationAbilityDamage,\n                    mana: newCurrentMana,\n                    iterations: champion.abilityProjectileSpeed,\n                    effect: [{\n                      type: 'shred',\n                      iterations: 60,\n                      strength: 0.3\n                    }]\n                  };\n                  const newProjectileList = [...closestEnemy.projectiles, newProjectile];\n                  allChampions[closestEnemy.index] = {\n                    ...closestEnemy,\n                    projectiles: newProjectileList\n                  };\n                  const newIterationsRemaining = {\n                    ...champion.iterationsRemaining,\n                    ability: champion.abilityCastTime\n                  };\n                  allChampions[index] = {\n                    ...champion,\n                    mana: 0,\n                    iterationsRemaining: newIterationsRemaining\n                  };\n                  console.log(`${champion.type} of ${champion.team} fired an ability to ${closestEnemy.type}.`);\n                } else {\n                  const newIterationsRemaining = {\n                    ...champion.iterationsRemaining,\n                    ability: champion.iterationsRemaining.ability - 1\n                  };\n                  allChampions[index] = {\n                    ...champion,\n                    iterationsRemaining: newIterationsRemaining\n                  };\n                }\n              }\n            }\n          }\n        }\n      };\n      const updateChampionsSequentially = async startTime => {\n        for (let index = 0; index < allChampions.length; index++) {\n          await updateChampionAtIndex(index);\n        }\n        console.log('after champions', allChampions);\n        const aliveChampions = allChampions.filter(x => x.alive);\n        const updatedUserChampions = [];\n        const updatedEnemyChampions = [];\n        var iteration = 0;\n        aliveChampions.forEach(champion => {\n          if (champion.team === 'user') {\n            champion = {\n              ...champion,\n              index: iteration\n            };\n            updatedUserChampions.push(champion);\n          } else {\n            champion = {\n              ...champion,\n              index: iteration\n            };\n            updatedEnemyChampions.push(champion);\n          }\n          iteration += 1;\n        });\n        const endTime = new Date();\n        const timeDifference = endTime - startTime;\n        const waitTime = ITERATION_CYCLE - timeDifference;\n        if (waitTime >= 0) {\n          await new Promise(resolve => setTimeout(resolve, waitTime));\n          console.log(`${globalIteration} Complete w/ ${waitTime + timeDifference} ms.`);\n        } else {\n          console.log('ERROR! ITERATION CYCLE TIME NOT LONG ENOUGH!');\n        }\n        setUserChampions(updatedUserChampions);\n        setEnemyChampions(updatedEnemyChampions);\n        if (updatedUserChampions.length === 0) {\n          endCombat();\n        } else if (updatedEnemyChampions.length === 0) {\n          endCombat();\n        }\n      };\n      const startTime = new Date();\n      updateChampionsSequentially(startTime);\n      globalIteration += 1;\n    }\n  }, [userChampions, isCombatActive, enemyChampions]);\n  const areChampionsOverlapping = (champion1, champion2) => {\n    const dx = champion1.currentPosition.left - champion2.currentPosition.left;\n    const dy = champion1.currentPosition.top - champion2.currentPosition.top;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < CIRCLE_DIAMETER;\n  };\n  const handleCircleDragStart = (event, player, index) => {\n    if (player === 'enemy') {\n      event.preventDefault(); // prevent dragging for enemy circles\n      return;\n    }\n    event.dataTransfer.setData('text/plain', 'champion');\n    setDragging(true);\n    setDraggedPlayer(player);\n    setDragStartIndex(index);\n  };\n  const handleCircleDragEnd = () => {\n    setDragging(false);\n    setDraggedPlayer(null);\n    setDragStartIndex(null);\n  };\n  const handleDragOver = event => {\n    event.dataTransfer.effectAllowed = 'none';\n    event.preventDefault();\n  };\n  const convertToPixels = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return 459.75 + 32.7 + (coordinate + 1) * 2.95 + coordinate * 62.4 + 62.4 / 2;\n      }\n      return 459.75 + (coordinate + 1) * 2.95 + coordinate * 62.4 + 62.4 / 2;\n    }\n    if (leftOrTop === 'top') {\n      return coordinate * 20.3 + coordinate * 36 + 36 + 173.11;\n    }\n  };\n  const convertToHexagons = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return Math.floor((coordinate - 32.7 - 459.75 - 2.95 - 31.2) / (2.95 + 62.4));\n      }\n      return Math.floor((coordinate - 2.95 - 31.2 - 459.75) / (2.95 + 62.4));\n    }\n    if (leftOrTop === 'top') {\n      return Math.floor((coordinate - 36 - 173.11) / (20.3 + 36));\n    }\n  };\n  const handleDrop = (event, hexagonCoordinates, player) => {\n    event.preventDefault();\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive !== 0) {\n      event.preventDefault();\n      return;\n    }\n    if (player === 'user' && dragStartIndex !== null) {\n      const hexagonCenterX = convertToPixels(hexagonCoordinates.left, 'left', hexagonCoordinates.top % 2 === 1);\n      const hexagonCenterY = convertToPixels(hexagonCoordinates.top, 'top', hexagonCoordinates.top % 2 === 1);\n      const targetHexagon = {\n        currentPosition: {\n          left: hexagonCenterX - CIRCLE_DIAMETER / 2,\n          top: hexagonCenterY - CIRCLE_DIAMETER / 2\n        }\n      };\n      const overlappingIndex = userChampions.findIndex((champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetHexagon));\n      if (overlappingIndex !== -1) {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex],\n            hexagonPosition: {\n              left: prevUserChampions[dragStartIndex].hexagonPosition.left,\n              top: prevUserChampions[dragStartIndex].hexagonPosition.top\n            },\n            currentPosition: {\n              left: prevUserChampions[dragStartIndex].currentPosition.left,\n              top: prevUserChampions[dragStartIndex].currentPosition.top\n            }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: hexagonCoordinates.left,\n              top: hexagonCoordinates.top\n            },\n            currentPosition: {\n              left: targetHexagon.currentPosition.left,\n              top: targetHexagon.currentPosition.top\n            }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: hexagonCoordinates.left,\n              top: hexagonCoordinates.top\n            },\n            currentPosition: {\n              left: targetHexagon.currentPosition.left,\n              top: targetHexagon.currentPosition.top\n            },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n  const handleCircleDrop = (event, circleCoordinates, index) => {\n    event.preventDefault();\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive !== 0) {\n      event.preventDefault();\n      return;\n    }\n    if (circleCoordinates.top >= 230 && dragStartIndex !== null) {\n      const targetChampion = {\n        currentPosition: {\n          left: circleCoordinates.left,\n          top: circleCoordinates.top\n        }\n      };\n      const overlappingIndex = userChampions.findIndex((champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetChampion));\n      if (overlappingIndex !== -1) {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex],\n            hexagonPosition: {\n              left: prevUserChampions[dragStartIndex].hexagonPosition.left,\n              top: prevUserChampions[dragStartIndex].hexagonPosition.top\n            },\n            currentPosition: {\n              left: prevUserChampions[dragStartIndex].currentPosition.left,\n              top: prevUserChampions[dragStartIndex].currentPosition.top\n            }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: prevUserChampions[index].hexagonPosition.left,\n              top: prevUserChampions[index].hexagonPosition.top\n            },\n            currentPosition: {\n              left: targetChampion.currentPosition.left,\n              top: targetChampion.currentPosition.top\n            }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: prevUserChampions[index].hexagonPosition.left,\n              top: prevUserChampions[index].hexagonPosition.top\n            },\n            currentPosition: {\n              left: targetChampion.currentPosition.left,\n              top: targetChampion.currentPosition.top\n            },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      width: '100vw',\n      backgroundColor: '#13293D',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '10%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: '100%',\n        height: '85%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section left-section\",\n        children: [/*#__PURE__*/_jsxDEV(DualButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Traits, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Augments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section center-section\",\n        children: [isCombatActive === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: [userChampions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-message win\",\n            children: \"You Win!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 17\n          }, this), enemyChampions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-message lose\",\n            children: \"You Lose!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hex-row\",\n          children: [enemyChampions.map((champion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `circle-overlay ${isDragging && draggedPlayer === 'enemy' ? 'dragging' : ''}`,\n            style: {\n              left: champion.currentPosition.left + 'px',\n              top: champion.currentPosition.top + 'px'\n            },\n            draggable: true,\n            onDragStart: e => handleCircleDragStart(e, 'enemy', index),\n            onDragEnd: handleCircleDragEnd,\n            onDragOver: e => handleDragOver(e),\n            onDrop: e => handleCircleDrop(e, {\n              left: champion.currentPosition.left,\n              top: champion.currentPosition.top\n            }, index),\n            onClick: () => setSelectedChampion(champion),\n            children: /*#__PURE__*/_jsxDEV(Champion, {\n              team: 'enemy',\n              index: champion.index,\n              hexagonPosition: champion.hexagonPosition,\n              currentPosition: champion.currentPosition,\n              image: champion.image,\n              type: champion.type,\n              starLevel: champion.starLevel,\n              headliner: champion.headliner,\n              items: champion.items,\n              alive: champion.alive,\n              attackRange: champion.attackRange,\n              health: champion.health,\n              attackDamage: champion.attackDamage,\n              totalMana: champion.totalMana,\n              mana: champion.mana,\n              abilityPower: champion.abilityPower,\n              armor: champion.armor,\n              magicResist: champion.magicResist,\n              castingAttack: champion.castingAttack,\n              castingAbility: champion.castingAbility,\n              projectiles: champion.projectiles,\n              abilityCastTime: champion.abilityCastTime,\n              movementSpeed: champion.movementSpeed,\n              iterationsRemaining: champion.iterationsRemaining,\n              attackProjectileSpeed: champion.attackProjectileSpeed,\n              abilityProjectileSpeed: champion.abilityProjectileSpeed\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 0,\n              top: 0,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 0,\n              top: 0,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 1,\n              top: 0,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 1,\n              top: 0,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 2,\n              top: 0,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 2,\n              top: 0,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 3,\n              top: 0,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 3,\n              top: 0,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 4,\n              top: 0,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 4,\n              top: 0,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 5,\n              top: 0,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 5,\n              top: 0,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 6,\n              top: 0,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 6,\n              top: 0,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hex-row even\",\n          children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 0,\n              top: 1,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 0,\n              top: 1,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 1,\n              top: 1,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 1,\n              top: 1,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 2,\n              top: 1,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 2,\n              top: 1,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 3,\n              top: 1,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 3,\n              top: 1,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 4,\n              top: 1,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 4,\n              top: 1,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 5,\n              top: 1,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 5,\n              top: 1,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 6,\n              top: 1,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 6,\n              top: 1,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hex-row\",\n          children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 0,\n              top: 2,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 0,\n              top: 2,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 1,\n              top: 2,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 1,\n              top: 2,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 2,\n              top: 2,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 2,\n              top: 2,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 3,\n              top: 2,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 3,\n              top: 2,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 4,\n              top: 2,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 4,\n              top: 2,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 5,\n              top: 2,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 5,\n              top: 2,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 6,\n              top: 2,\n              even: 0\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 6,\n              top: 2,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hex-row even\",\n          children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 0,\n              top: 3,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 0,\n              top: 3,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 1,\n              top: 3,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 1,\n              top: 3,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 2,\n              top: 3,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 2,\n              top: 3,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 3,\n              top: 3,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 3,\n              top: 3,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 4,\n              top: 3,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 4,\n              top: 3,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 5,\n              top: 3,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 5,\n              top: 3,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"enemy\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 6,\n              top: 3,\n              even: 32.7\n            }, 'enemy'),\n            hexagonCoordinates: {\n              left: 6,\n              top: 3,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hex-row\",\n          children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 0,\n              top: 4,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 0,\n              top: 4,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 1,\n              top: 4,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 1,\n              top: 4,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 2,\n              top: 4,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 2,\n              top: 4,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 3,\n              top: 4,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 3,\n              top: 4,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 4,\n              top: 4,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 4,\n              top: 4,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 5,\n              top: 4,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 5,\n              top: 4,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 6,\n              top: 4,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 6,\n              top: 4,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hex-row even\",\n          children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 0,\n              top: 5,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 0,\n              top: 5,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 1,\n              top: 5,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 1,\n              top: 5,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 2,\n              top: 5,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 2,\n              top: 5,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 3,\n              top: 5,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 3,\n              top: 5,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 4,\n              top: 5,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 4,\n              top: 5,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 5,\n              top: 5,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 5,\n              top: 5,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 6,\n              top: 5,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 6,\n              top: 5,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hex-row\",\n          children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 0,\n              top: 6,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 0,\n              top: 6,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 1,\n              top: 6,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 1,\n              top: 6,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 2,\n              top: 6,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 2,\n              top: 6,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 3,\n              top: 6,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 3,\n              top: 6,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 4,\n              top: 6,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 4,\n              top: 6,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 5,\n              top: 6,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 5,\n              top: 6,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 6,\n              top: 6,\n              even: 0\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 6,\n              top: 6,\n              even: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hex-row even\",\n          children: [userChampions.map((champion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `circle-overlay ${isDragging && draggedPlayer === 'user' ? 'dragging' : ''}`,\n            style: {\n              left: champion.currentPosition.left + 'px',\n              top: champion.currentPosition.top + 'px'\n            },\n            draggable: true,\n            onDragStart: e => handleCircleDragStart(e, 'user', index),\n            onDragEnd: handleCircleDragEnd,\n            onDragOver: e => handleDragOver(e),\n            onDrop: e => handleCircleDrop(e, {\n              left: champion.currentPosition.left,\n              top: champion.currentPosition.top\n            }, index),\n            onClick: () => setSelectedChampion(champion),\n            children: /*#__PURE__*/_jsxDEV(Champion, {\n              team: 'user',\n              index: champion.index,\n              hexagonPosition: champion.hexagonPosition,\n              currentPosition: champion.currentPosition,\n              image: champion.image,\n              type: champion.type,\n              starLevel: champion.starLevel,\n              headliner: champion.headliner,\n              items: champion.items,\n              alive: champion.alive,\n              attackRange: champion.attackRange,\n              health: champion.health,\n              attackDamage: champion.attackDamage,\n              totalMana: champion.totalMana,\n              mana: champion.mana,\n              abilityPower: champion.abilityPower,\n              armor: champion.armor,\n              magicResist: champion.magicResist,\n              castingAttack: champion.castingAttack,\n              castingAbility: champion.castingAbility,\n              projectiles: champion.projectiles,\n              abilityCastTime: champion.abilityCastTime,\n              movementSpeed: champion.movementSpeed,\n              iterationsRemaining: champion.iterationsRemaining,\n              attackProjectileSpeed: champion.attackProjectileSpeed,\n              abilityProjectileSpeed: champion.abilityProjectileSpeed\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 0,\n              top: 7,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 0,\n              top: 7,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 1,\n              top: 7,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 1,\n              top: 7,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 2,\n              top: 7,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 2,\n              top: 7,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 3,\n              top: 7,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 3,\n              top: 7,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 4,\n              top: 7,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 4,\n              top: 7,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 5,\n              top: 7,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 5,\n              top: 7,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n            player: \"user\",\n            onDragOver: handleDragOver,\n            onDrop: e => handleDrop(e, {\n              left: 6,\n              top: 7,\n              even: 32.7\n            }, 'user'),\n            hexagonCoordinates: {\n              left: 6,\n              top: 7,\n              even: 32.7\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section right-section\",\n        children: [/*#__PURE__*/_jsxDEV(ChampionDisplay, {\n          champion: selectedChampion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            width: '225px',\n            height: '50px',\n            marginBottom: '10px'\n          },\n          children: [isCombatActive !== 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              flex: '1',\n              padding: '10px',\n              borderRadius: '15px',\n              backgroundColor: '#4CAF50',\n              color: '#ffffff',\n              fontSize: '16px',\n              fontWeight: 'bold'\n            },\n            disabled: isCombatActive !== 0,\n            onClick: startCombat,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 15\n          }, this), isCombatActive === 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              flex: '1',\n              padding: '10px',\n              borderRadius: '15px',\n              backgroundColor: '#4CAF50',\n              color: '#ffffff',\n              fontSize: '16px',\n              fontWeight: 'bold'\n            },\n            disabled: isCombatActive === 1,\n            onClick: handleNextPuzzleClick,\n            children: \"Next Puzzle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 643,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"D6fcc/eWexy2qlFloLB1xXYVENY=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Hexagon","Champion","DualButton","Traits","Augments","ChampionDisplay","puzzlesList","Puzzles","jsxDEV","_jsxDEV","CIRCLE_DIAMETER","ITERATION_CYCLE","globalIteration","adjacentHexagons","getNeighbors","champion","left","hexagonPosition","top","isAdjacent","champion1","champion2","hex1","hex2","neighbors","some","neighbor","findShortestPath","champions","start","end","attackRange","visited","Set","queue","length","path","shift","currentHexagon","undefined","has","toString","add","neighborStr","isChampionOccupied","c","neighborNeighbors","n","neighborNeighborNeighbors","push","neighborNeighborNeighborNeighbors","newPath","findClosestEnemy","userChampion","enemyChampions","closestEnemy","minDistance","Infinity","enemyChampion","distance","Board","enemyChampionsList","userChampionsList","initialPuzzleNumber","_s","isDragging","setDragging","setEnemyChampions","userChampions","setUserChampions","draggedPlayer","setDraggedPlayer","dragStartIndex","setDragStartIndex","isCombatActive","setCombatActive","selectedChampion","setSelectedChampion","puzzleNumber","setPuzzleNumber","console","log","getRandomInt","max","Math","floor","random","handleNextPuzzleClick","e","preventDefault","newPuzzleNumber","newChampions","startCombat","endCombat","allChampions","concat","updateChampionAtIndex","index","tempChampion","allChampionsProjectileIteration","allProjectiles","projectiles","projectile","iterations","health","damage","newProjectiles","filter","_","alive","type","team","newHealth","mana","newCurrentMana","min","totalMana","newProjectileIterations","isUserChampion","shortestPath","targetHexagon","targetPixelLeft","convertToPixels","targetPixelTop","iterationsRemaining","move","newIterationsRemaining","movementSpeed","currentPosition","attack","postMitigationAttackDamage","armor","attackDamage","manaIncrement","newProjectile","attackProjectileSpeed","effect","newProjectileList","attackSpeed","ability","postMitigationAbilityDamage","magicResist","abilityPower","abilityProjectileSpeed","strength","abilityCastTime","updateChampionsSequentially","startTime","aliveChampions","x","updatedUserChampions","updatedEnemyChampions","iteration","forEach","endTime","Date","timeDifference","waitTime","Promise","resolve","setTimeout","areChampionsOverlapping","dx","dy","sqrt","handleCircleDragStart","event","player","dataTransfer","setData","handleCircleDragEnd","handleDragOver","effectAllowed","coordinate","leftOrTop","even","convertToHexagons","handleDrop","hexagonCoordinates","hexagonCenterX","hexagonCenterY","overlappingIndex","findIndex","prevUserChampions","image","handleCircleDrop","circleCoordinates","targetChampion","style","display","flexDirection","height","width","backgroundColor","alignItems","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","flex","map","draggable","onDragStart","onDragEnd","onDragOver","onDrop","onClick","starLevel","headliner","items","castingAttack","castingAbility","marginBottom","padding","borderRadius","color","fontSize","fontWeight","disabled","_c","$RefreshReg$"],"sources":["/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Board.css';\nimport Hexagon from './Hexagon';\nimport Champion from './Champion';\nimport DualButton from './DualButton';\nimport Traits from './Traits';\nimport Augments from './Augments';\nimport ChampionDisplay from './ChampionDisplay';\nimport { puzzlesList, Puzzles } from './Puzzles';\n\nconst CIRCLE_DIAMETER = 50;\nconst ITERATION_CYCLE = 25;\nvar globalIteration = 0;\n\nconst adjacentHexagons = {\n  0: { \n    0: [[0, 1], [1, 0]],\n    1: [[0, 0], [1, 0], [1, 1], [1, 2], [0, 2]],\n    2: [[0, 1], [1, 2], [0, 3]],\n    3: [[0, 2], [1, 2], [1, 3], [1, 4], [0, 4]],\n    4: [[0, 3], [1, 4], [0, 5]],\n    5: [[0, 4], [1, 4], [1, 5], [1, 6], [0, 6]],\n    6: [[0, 5], [1, 6], [0, 7]],\n    7: [[0, 6], [1, 6], [1, 7]],\n  },\n  1: { \n    0: [[0, 0], [0, 1], [1, 1], [2, 0]],\n    1: [[1, 0], [0, 1], [1, 2], [2, 2], [2, 1], [2, 0]],\n    2: [[0, 1], [0, 2], [0, 3], [1, 3], [2, 2], [1, 1]],\n    3: [[1, 2], [0, 3], [1, 4], [2, 4], [2, 3], [2, 2]],\n    4: [[0, 3], [0, 4], [0, 5], [1, 5], [2, 4], [1, 3]],\n    5: [[1, 4], [0, 5], [1, 6], [2, 6], [2, 5], [2, 4]],\n    6: [[0, 5], [0, 6], [0, 7], [1, 7], [2, 6], [1, 5]],\n    7: [[1, 6], [0, 7], [2, 6], [2, 7]],\n  },\n  2: { \n    0: [[1, 0], [1, 1], [2, 1], [3, 0]],\n    1: [[2, 0], [1, 1], [2, 2], [3, 2], [3, 1], [3, 0]],\n    2: [[1, 1], [1, 2], [1, 3], [2, 3], [3, 2], [2, 1]],\n    3: [[2, 2], [1, 3], [2, 4], [3, 4], [3, 3], [3, 2]],\n    4: [[1, 3], [1, 4], [1, 5], [2, 5], [3, 4], [2, 3]],\n    5: [[2, 4], [1, 5], [2, 6], [3, 6], [3, 5], [3, 4]],\n    6: [[1, 5], [1, 6], [1, 7], [2, 7], [3, 6], [2, 5]],\n    7: [[2, 6], [1, 7], [3, 6], [3, 7]],\n  },\n  3: { \n    0: [[2, 0], [2, 1], [3, 1], [4, 0]],\n    1: [[3, 0], [2, 1], [3, 2], [4, 2], [4, 1], [4, 0]],\n    2: [[2, 1], [2, 2], [2, 3], [3, 3], [4, 2], [3, 1]],\n    3: [[3, 2], [2, 3], [3, 4], [4, 4], [4, 3], [4, 2]],\n    4: [[2, 3], [2, 4], [2, 5], [3, 5], [4, 4], [3, 3]],\n    5: [[3, 4], [2, 5], [3, 6], [4, 6], [4, 5], [4, 4]],\n    6: [[2, 5], [2, 6], [2, 7], [3, 7], [4, 6], [3, 5]],\n    7: [[3, 6], [2, 7], [4, 6], [4, 7]],\n  },\n  4: { \n    0: [[3, 0], [3, 1], [4, 1], [5, 0]],\n    1: [[4, 0], [3, 1], [4, 2], [5, 2], [5, 1], [5, 0]],\n    2: [[3, 1], [3, 2], [3, 3], [4, 3], [5, 2], [4, 1]],\n    3: [[4, 2], [3, 3], [4, 4], [5, 4], [5, 3], [5, 2]],\n    4: [[3, 3], [3, 4], [3, 5], [4, 5], [5, 4], [4, 3]],\n    5: [[4, 4], [3, 5], [4, 6], [5, 6], [5, 5], [5, 4]],\n    6: [[3, 5], [3, 6], [3, 7], [4, 7], [5, 6], [4, 5]],\n    7: [[4, 6], [3, 7], [5, 6], [5, 7]],\n  },\n  5: { \n    0: [[4, 0], [4, 1], [5, 1], [6, 0]],\n    1: [[5, 0], [4, 1], [5, 2], [6, 2], [6, 1], [6, 0]],\n    2: [[4, 1], [4, 2], [4, 3], [5, 3], [6, 2], [5, 1]],\n    3: [[5, 2], [4, 3], [5, 4], [6, 4], [6, 3], [6, 2]],\n    4: [[4, 3], [4, 4], [4, 5], [5, 5], [6, 4], [5, 3]],\n    5: [[5, 4], [4, 5], [5, 6], [6, 6], [6, 5], [6, 4]],\n    6: [[4, 5], [4, 6], [4, 7], [5, 7], [6, 6], [5, 5]],\n    7: [[5, 6], [4, 7], [6, 6], [6, 7]],\n  },\n  6: { \n    0: [[5, 0], [5, 1], [6, 1]],\n    1: [[6, 0], [5, 1], [6, 2]],\n    2: [[6, 1], [5, 1], [5, 2], [5, 3], [6, 3]],\n    3: [[6, 2], [5, 3], [6, 4]],\n    4: [[6, 3], [5, 3], [5, 4], [5, 5], [6, 5]],\n    5: [[6, 4], [5, 5], [6, 6]],\n    6: [[6, 5], [5, 5], [5, 6], [5, 7], [6, 7]],\n    7: [[6, 6], [5, 7]],\n  },\n}\n\nfunction getNeighbors(champion) {\n  const left = champion.hexagonPosition.left;\n  const top = champion.hexagonPosition.top;\n  if (adjacentHexagons[left] && adjacentHexagons[left][top]) {\n    return adjacentHexagons[left][top];\n  }\n\n  return [];\n}\n\nfunction isAdjacent(champion1, champion2) {\n  const hex1 = [champion1.hexagonPosition.left, champion1.hexagonPosition.top];\n  const hex2 = [champion2.hexagonPosition.left, champion2.hexagonPosition.top];\n  const neighbors = getNeighbors({ hexagonPosition: { left: hex1[0], top: hex1[1] } });\n  \n  return neighbors.some(neighbor => neighbor[0] === hex2[0] && neighbor[1] === hex2[1]);\n}\n\nfunction findShortestPath(champions, start, end, attackRange) {\n  const visited = new Set();\n  const queue = [[start]];\n  \n  while (queue.length > 0) {\n    const path = queue.shift();\n    const currentHexagon = path[path.length - 1];\n\n    if (currentHexagon[0] !== undefined && currentHexagon[0] !== null) {\n      // if (isAdjacent({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } }, end)) {\n      //   return path;\n      // }\n\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n  \n        const neighbors = getNeighbors({hexagonPosition: {left: currentHexagon[0], top: currentHexagon[1]}});\n        \n        for (const neighbor of neighbors) {\n  \n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n  \n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n          \n            // Check attack range\n            if (attackRange === 1) {\n              if (isAdjacent({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } }, end)) {\n                return path;\n              }\n            }\n            if (attackRange === 2) {\n              if (isAdjacent({hexagonPosition: {left: neighbor[0], top: neighbor[1]}}, end)) {\n                return path;\n              }\n            } else if (attackRange === 3) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              if (neighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path; \n              }\n            } else if (attackRange === 4) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}})); \n              }\n              if (neighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            } else if (attackRange === 5) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              const neighborNeighborNeighborNeighbors = [];\n              for (const n of neighborNeighborNeighbors) {\n                neighborNeighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              if (neighborNeighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            }\n  \n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    } else {\n      // if (isAdjacent(currentHexagon, end)) {\n      //   return path;\n      // }\n\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n  \n        const neighbors = getNeighbors(currentHexagon);\n        \n        for (const neighbor of neighbors) {\n  \n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n  \n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n          \n            // Check attack range\n            if (attackRange === 1) {\n              if (isAdjacent(currentHexagon, end)) {\n                return path;\n              }\n            }\n            if (attackRange === 2) {\n              if (isAdjacent({hexagonPosition: {left: neighbor[0], top: neighbor[1]}}, end)) {\n                return path;\n              }\n            } else if (attackRange === 3) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              if (neighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path; \n              }\n            } else if (attackRange === 4) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}})); \n              }\n              if (neighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            } else if (attackRange === 5) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              const neighborNeighborNeighborNeighbors = [];\n              for (const n of neighborNeighborNeighbors) {\n                neighborNeighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              if (neighborNeighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            }\n  \n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n\nfunction findClosestEnemy(userChampion, enemyChampions) {\n  let closestEnemy = null;\n  let minDistance = Infinity;\n\n  for (const enemyChampion of enemyChampions) {\n    const distance = findShortestPath(\n      enemyChampions,\n      { hexagonPosition: { left: userChampion.hexagonPosition.left, top: userChampion.hexagonPosition.top } },\n      { hexagonPosition: { left: enemyChampion.hexagonPosition.left, top: enemyChampion.hexagonPosition.top } },\n      userChampion.attackRange\n    );\n    if (distance && distance.length < minDistance) {\n      minDistance = distance.length;\n      closestEnemy = enemyChampion;\n    }\n  }\n\n  return closestEnemy;\n}\n\nfunction Board({ enemyChampionsList, userChampionsList, initialPuzzleNumber }) {\n  const [isDragging, setDragging] = useState(false);\n  const [enemyChampions, setEnemyChampions] = useState(enemyChampionsList);\n  const [userChampions, setUserChampions] = useState(userChampionsList);\n  const [draggedPlayer, setDraggedPlayer] = useState(null);\n  const [dragStartIndex, setDragStartIndex] = useState(null);\n  const [isCombatActive, setCombatActive] = useState(0);\n  const [selectedChampion, setSelectedChampion] = useState(userChampionsList[0]);\n  const [puzzleNumber, setPuzzleNumber] = useState(initialPuzzleNumber);\n  // const [combatIteration, setCombatIteration] = useState(0); // will implement later for overtime\n  console.log(userChampions);\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const handleNextPuzzleClick = (e) => {\n    e.preventDefault();\n    setCombatActive(0);\n    let newPuzzleNumber;\n\n    do {\n      newPuzzleNumber = getRandomInt(puzzlesList.length);\n    } while (newPuzzleNumber === puzzleNumber);\n\n    console.log('New Puzzle Number: ', puzzleNumber);\n\n    setPuzzleNumber(newPuzzleNumber);\n    const newChampions = Puzzles(newPuzzleNumber);\n    setEnemyChampions(newChampions[0]);\n    setUserChampions(newChampions[1]);\n  };\n\n  const startCombat = () => {\n    setCombatActive(1);\n  }\n\n  const endCombat = () => {\n    setCombatActive(2);\n    // console.log(\"combat ended\");\n  }\n\n  useEffect(() => {\n    if (isCombatActive === 1) {\n      const allChampions = userChampions.concat(enemyChampions);\n      // console.log('before champions', allChampions);\n  \n      const updateChampionAtIndex = async (index) => {\n        const tempChampion = allChampions[index];\n        \n        var allChampionsProjectileIteration = 0;\n        const allProjectiles = tempChampion.projectiles;\n        if (allProjectiles !== undefined & allProjectiles !== null & allProjectiles !== 0) {\n          for (const projectile of allProjectiles) {\n            if (projectile.iterations === 0) {\n              if ((allChampions[index].health - projectile.damage) <= 0) {\n                const newProjectiles = allChampions[index].projectiles.filter((_, index) => index !== allChampionsProjectileIteration);\n                allChampions[index] = { ...allChampions[index], alive: false, projectiles: newProjectiles };\n                console.log(`${tempChampion.type} of ${tempChampion.team} took ${projectile.damage} damage and died.`);\n                break;\n              } else {\n                const newHealth = allChampions[index].health - projectile.damage;\n                // if (projectile.effect !== null & projectile.effect.length !== 0) {\n                //   for (const effect in projectile.effect) {\n                //     if (effect.type === 'shred') {\n                      \n                //     }\n                //   }\n                // }\n                console.log(`${tempChampion.type} of ${tempChampion.team} took ${projectile.damage} damage.`);\n                if (tempChampion.mana === null) {\n                  const newProjectiles = allChampions[index].projectiles.filter((_, index) => index !== allChampionsProjectileIteration);\n                  allChampions[index] = { ...allChampions[index], health: newHealth, projectiles: newProjectiles };\n                } else {\n                  const newCurrentMana = Math.min(allChampions[index].totalMana, allChampions[index].mana + projectile.mana);\n                  const newProjectiles = allChampions[index].projectiles.filter((_, index) => index !== allChampionsProjectileIteration);\n                  allChampions[index] = { ...allChampions[index], health: newHealth, mana: newCurrentMana, projectiles: newProjectiles };\n                } \n              }\n            } else {\n              var newProjectiles = allChampions[index].projectiles;\n              const newProjectileIterations = projectile.iterations - 1;\n              newProjectiles[allChampionsProjectileIteration] = { ...projectile, iterations: newProjectileIterations }\n              allChampions[index] = { ...allChampions[index], projectiles: newProjectiles };\n              allChampionsProjectileIteration += 1;\n            }\n          }\n        }\n        const champion = allChampions[index];\n\n        if (allChampions[index].alive) {\n          const isUserChampion = champion.team === 'user';\n          const closestEnemy = isUserChampion ? findClosestEnemy(champion, enemyChampions) : findClosestEnemy(champion, userChampions);\n    \n          if (closestEnemy) {\n            const shortestPath = findShortestPath(allChampions, champion, closestEnemy, champion.attackRange);\n            // console.log('shortest path', shortestPath);\n    \n            if (shortestPath && shortestPath.length > 1) {\n              const targetHexagon = shortestPath[1];\n              const targetPixelLeft = convertToPixels(targetHexagon[0], 'left', targetHexagon[1] % 2 === 1) - 25;\n              const targetPixelTop = convertToPixels(targetHexagon[1], 'top', targetHexagon[1] % 2 === 1) - 25;\n    \n              if (champion.iterationsRemaining.move === 0) {\n                const newIterationsRemaining = { ...champion.iterationsRemaining, move: champion.movementSpeed };\n                allChampions[index] = {\n                  ...champion,\n                  hexagonPosition: { left: targetHexagon[0], top: targetHexagon[1] },\n                  currentPosition: { left: targetPixelLeft, top: targetPixelTop },\n                  iterationsRemaining: newIterationsRemaining, \n                };\n                console.log(`${champion.type} of ${champion.team} moved.`);\n              } else {\n                const newIterationsRemaining = { ...champion.iterationsRemaining, move: champion.iterationsRemaining.move - 1 };\n                allChampions[index] = {\n                  ...champion,\n                  iterationsRemaining: newIterationsRemaining, \n                };\n              }\n    \n              // console.log('updated champion', allChampions[index]);\n            } else {\n              if (champion.totalMana === 0 | champion.mana < champion.totalMana) {\n                if (champion.iterationsRemaining.attack === 0) {\n                  const postMitigationAttackDamage = (1 - (closestEnemy.armor / (100 + closestEnemy.armor))) * champion.attackDamage;\n                  const manaIncrement = Math.min(42.5, (0.01 * champion.attackDamage) + (0.07 * postMitigationAttackDamage))\n                  var newCurrentMana = Math.min(closestEnemy.totalMana, closestEnemy.mana + manaIncrement)\n                  const newProjectile = { damage: postMitigationAttackDamage, mana: newCurrentMana, iterations: champion.attackProjectileSpeed, effect: [] }\n                  const newProjectileList = [...closestEnemy.projectiles, newProjectile];\n                  allChampions[closestEnemy.index] = { ...closestEnemy, projectiles: newProjectileList };\n\n                  newCurrentMana = Math.min(champion.totalMana, champion.mana + 10);\n                  const newIterationsRemaining = { ...champion.iterationsRemaining, attack: champion.attackSpeed };\n                  allChampions[index] = { ...champion, mana: newCurrentMana, iterationsRemaining: newIterationsRemaining };\n                  console.log(`${champion.type} of ${champion.team} fired an attack to ${closestEnemy.type}.`);\n                } else {\n                  const newIterationsRemaining = { ...champion.iterationsRemaining, attack: champion.iterationsRemaining.attack - 1 };\n                  allChampions[index] = {\n                    ...champion,\n                    iterationsRemaining: newIterationsRemaining, \n                  };\n                }\n              } else if (champion.mana >= champion.totalMana) {\n                if (champion.iterationsRemaining.ability === 0) {\n                  const postMitigationAbilityDamage = (1 - (closestEnemy.magicResist / (100 + closestEnemy.magicResist))) * champion.abilityPower;\n                  const manaIncrement = Math.min(42.5, (0.01 * champion.attackDamage) + (0.07 * postMitigationAbilityDamage))\n                  const newCurrentMana = Math.min(closestEnemy.totalMana, closestEnemy.mana + manaIncrement)\n                  const newProjectile = { damage: postMitigationAbilityDamage, mana: newCurrentMana, iterations: champion.abilityProjectileSpeed, effect: [{ type: 'shred', iterations: 60, strength: 0.3 }] }\n                  const newProjectileList = [...closestEnemy.projectiles, newProjectile];\n                  allChampions[closestEnemy.index] = { ...closestEnemy, projectiles: newProjectileList };\n\n                  const newIterationsRemaining = { ...champion.iterationsRemaining, ability: champion.abilityCastTime };\n                  allChampions[index] = { ...champion, mana: 0, iterationsRemaining: newIterationsRemaining };\n                  console.log(`${champion.type} of ${champion.team} fired an ability to ${closestEnemy.type}.`);\n                } else {  \n                  const newIterationsRemaining = { ...champion.iterationsRemaining, ability: champion.iterationsRemaining.ability - 1 };\n                  allChampions[index] = {\n                    ...champion,\n                    iterationsRemaining: newIterationsRemaining, \n                  };\n                }\n              }\n            }\n          }\n        }\n      };\n  \n      const updateChampionsSequentially = async (startTime) => {\n        for (let index = 0; index < allChampions.length; index++) {\n          await updateChampionAtIndex(index);\n        }\n        console.log('after champions', allChampions);\n\n        const aliveChampions = allChampions.filter(x => x.alive); \n\n        const updatedUserChampions = [];\n        const updatedEnemyChampions = [];\n        var iteration = 0;\n\n        aliveChampions.forEach(champion => {\n          if (champion.team === 'user') {\n            champion = {\n              ...champion, index: iteration\n            };\n            updatedUserChampions.push(champion);\n          } else {\n            champion = {\n              ...champion, index: iteration\n            };\n            updatedEnemyChampions.push(champion);\n          }\n          iteration += 1;\n        });\n        \n        const endTime = new Date();\n        const timeDifference = endTime - startTime;\n        const waitTime = ITERATION_CYCLE - timeDifference;\n        if (waitTime >= 0) {\n          await new Promise(resolve => setTimeout(resolve, waitTime));    \n          console.log(`${globalIteration} Complete w/ ${waitTime + timeDifference} ms.`);\n        } else {\n          console.log('ERROR! ITERATION CYCLE TIME NOT LONG ENOUGH!');\n        }\n\n        setUserChampions(updatedUserChampions);\n        setEnemyChampions(updatedEnemyChampions);\n\n        if (updatedUserChampions.length === 0) {\n          endCombat();\n        } else if (updatedEnemyChampions.length === 0) {\n          endCombat();\n        }\n      };\n      \n      const startTime = new Date();\n      updateChampionsSequentially(startTime);\n      globalIteration += 1;\n    }\n  }, [userChampions, isCombatActive, enemyChampions]);\n\n  const areChampionsOverlapping = (champion1, champion2) => {\n    const dx = champion1.currentPosition.left - champion2.currentPosition.left;\n    const dy = champion1.currentPosition.top - champion2.currentPosition.top;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < CIRCLE_DIAMETER; \n  };\n\n  const handleCircleDragStart = (event, player, index) => {\n    if (player === 'enemy') {\n      event.preventDefault(); // prevent dragging for enemy circles\n      return;\n    }\n\n    event.dataTransfer.setData('text/plain', 'champion'); \n    setDragging(true);\n    setDraggedPlayer(player);\n    setDragStartIndex(index);\n  };\n\n  const handleCircleDragEnd = () => {\n    setDragging(false);\n    setDraggedPlayer(null);\n    setDragStartIndex(null);\n  };\n\n  const handleDragOver = (event) => {\n    event.dataTransfer.effectAllowed = 'none';\n    event.preventDefault();\n  };\n\n  const convertToPixels = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return 459.75 + 32.7 + ((coordinate + 1) * 2.95) + (coordinate * 62.4) + 62.4 / 2;\n      }\n      return 459.75 + ((coordinate + 1) * 2.95) + (coordinate * 62.4) + 62.4 / 2;\n    }\n    if (leftOrTop === 'top') {\n      return (coordinate * 20.3) + (coordinate * 36) + 36 + 173.11;\n    }\n  }\n\n  const convertToHexagons = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return Math.floor((coordinate - 32.7 - 459.75 - 2.95 - 31.2) / (2.95 + 62.4));\n      }\n      return Math.floor((coordinate - 2.95 - 31.2 - 459.75) / (2.95 + 62.4));\n    }\n    if (leftOrTop === 'top') {\n      return Math.floor((coordinate - 36 - 173.11) / (20.3 + 36));\n    }\n  }\n\n  const handleDrop = (event, hexagonCoordinates, player) => {\n    event.preventDefault();\n\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive !== 0) {\n      event.preventDefault();\n      return;\n    }\n    if (player === 'user' && dragStartIndex !== null) {\n      const hexagonCenterX = convertToPixels(hexagonCoordinates.left, 'left', hexagonCoordinates.top % 2 === 1);\n      const hexagonCenterY = convertToPixels(hexagonCoordinates.top, 'top', hexagonCoordinates.top % 2 === 1);\n\n      const targetHexagon = {\n        currentPosition: {\n          left: hexagonCenterX - (CIRCLE_DIAMETER / 2),\n          top: hexagonCenterY - (CIRCLE_DIAMETER / 2)\n        }\n      };\n\n      const overlappingIndex = userChampions.findIndex(\n        (champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetHexagon)\n      );\n\n      if (overlappingIndex !== -1) {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex], \n            hexagonPosition: { left: prevUserChampions[dragStartIndex].hexagonPosition.left, top: prevUserChampions[dragStartIndex].hexagonPosition.top },\n            currentPosition: { left: prevUserChampions[dragStartIndex].currentPosition.left, top: prevUserChampions[dragStartIndex].currentPosition.top }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: hexagonCoordinates.left, top: hexagonCoordinates.top },\n            currentPosition: { left: targetHexagon.currentPosition.left, top: targetHexagon.currentPosition.top }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: hexagonCoordinates.left, top: hexagonCoordinates.top },\n            currentPosition: { left: targetHexagon.currentPosition.left, top: targetHexagon.currentPosition.top },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n\n  const handleCircleDrop = (event, circleCoordinates, index) => {\n    event.preventDefault();\n\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive !== 0) {\n      event.preventDefault();\n      return;\n    }\n    if (circleCoordinates.top >= 230 && dragStartIndex !== null) {\n      const targetChampion = {\n        currentPosition: {\n          left: circleCoordinates.left,\n          top: circleCoordinates.top\n        }\n      };\n\n      const overlappingIndex = userChampions.findIndex(\n        (champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetChampion)\n      );\n\n      if (overlappingIndex !== -1) {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex], \n            hexagonPosition: { left: prevUserChampions[dragStartIndex].hexagonPosition.left, top: prevUserChampions[dragStartIndex].hexagonPosition.top },\n            currentPosition: { left: prevUserChampions[dragStartIndex].currentPosition.left, top: prevUserChampions[dragStartIndex].currentPosition.top }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: prevUserChampions[index].hexagonPosition.left, top: prevUserChampions[index].hexagonPosition.top },\n            currentPosition: { left: targetChampion.currentPosition.left, top: targetChampion.currentPosition.top }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: prevUserChampions[index].hexagonPosition.left, top: prevUserChampions[index].hexagonPosition.top },\n            currentPosition: { left: targetChampion.currentPosition.left, top: targetChampion.currentPosition.top },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', height: '100vh', width: '100vw', backgroundColor: '#13293D', alignItems: 'center', justifyContent: 'center' }}>\n      <div style={{ height: '10%' }} />\n      <div style={{ display: 'flex', flexDirection: 'row', width: '100%', height: '85%' }}>\n        <div className='section left-section'>\n          <DualButton />\n          <div style={{ flex: 1, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n            <Traits />\n          </div>\n          <Augments />\n        </div>\n        <div className='section center-section'>\n          {isCombatActive === 2 && (\n            <div className=\"overlay\">\n              {userChampions.length > 0 && (\n                <div className=\"result-message win\">\n                  You Win!\n                </div>\n              )}\n              {enemyChampions.length > 0 && (\n                <div className=\"result-message lose\">\n                  You Lose!\n                </div>\n              )}\n            </div>\n          )}\n          <div className='hex-row'>\n            {enemyChampions.map((champion, index) => (\n              <div\n                key={index}\n                className={`circle-overlay ${isDragging && draggedPlayer === 'enemy' ? 'dragging' : ''}`}\n                style={{ left: champion.currentPosition.left + 'px', top: champion.currentPosition.top + 'px' }}\n                draggable\n                onDragStart={(e) => handleCircleDragStart(e, 'enemy', index)}\n                onDragEnd={handleCircleDragEnd}\n                onDragOver={(e) => handleDragOver(e)}\n                onDrop={(e) => handleCircleDrop(e, { left: champion.currentPosition.left, top: champion.currentPosition.top }, index)}\n                onClick={() => setSelectedChampion(champion)}\n              >\n                <Champion\n                  key={index}\n                  team={'enemy'}\n                  index={champion.index}\n                  hexagonPosition={champion.hexagonPosition}\n                  currentPosition={champion.currentPosition}\n                  image={champion.image}\n                  type={champion.type}\n                  starLevel={champion.starLevel}\n                  headliner={champion.headliner}\n                  items={champion.items}\n                  alive={champion.alive}\n                  attackRange={champion.attackRange}\n                  health={champion.health}\n                  attackDamage={champion.attackDamage}\n                  totalMana={champion.totalMana}\n                  mana={champion.mana}\n                  abilityPower={champion.abilityPower}\n                  armor={champion.armor}\n                  magicResist={champion.magicResist}\n                  castingAttack={champion.castingAttack}\n                  castingAbility={champion.castingAbility}\n                  projectiles={champion.projectiles}\n                  abilityCastTime={champion.abilityCastTime}\n                  movementSpeed={champion.movementSpeed}\n                  iterationsRemaining={champion.iterationsRemaining}\n                  attackProjectileSpeed={champion.attackProjectileSpeed}\n                  abilityProjectileSpeed={champion.abilityProjectileSpeed}\n                ></Champion>\n              </div>\n            ))}\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 0, even: 0 }}/>\n          </div>\n          <div className='hex-row even'>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 1, even: 32.7 }}/>\n          </div>\n          <div className='hex-row'> \n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 2, even: 0 }}/>\n          </div>\n          <div className='hex-row even'>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 3, even: 32.7 }}/>\n          </div>\n          <div className='hex-row'>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 0, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 1, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 2, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 3, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 4, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 5, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 6, top: 4, even: 0 }}/>\n          </div>\n          <div className='hex-row even'>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 0, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 1, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 2, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 3, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 4, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 5, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 6, top: 5, even: 32.7 }}/>\n          </div>\n          <div className='hex-row'>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 0, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 1, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 2, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 3, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 4, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 5, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 6, top: 6, even: 0 }}/>\n          </div>\n          <div className='hex-row even'>\n            {userChampions.map((champion, index) => (\n              <div\n                key={index}\n                className={`circle-overlay ${isDragging && draggedPlayer === 'user' ? 'dragging' : ''}`}\n                style={{ left: champion.currentPosition.left + 'px', top: champion.currentPosition.top + 'px' }}\n                draggable\n                onDragStart={(e) => handleCircleDragStart(e, 'user', index)}\n                onDragEnd={handleCircleDragEnd}\n                onDragOver={(e) => handleDragOver(e)}\n                onDrop={(e) => handleCircleDrop(e, { left: champion.currentPosition.left, top: champion.currentPosition.top }, index)}\n                onClick={() => setSelectedChampion(champion)}\n              >\n                <Champion\n                  key={index}\n                  team={'user'}\n                  index={champion.index}\n                  hexagonPosition={champion.hexagonPosition}\n                  currentPosition={champion.currentPosition}\n                  image={champion.image}\n                  type={champion.type}\n                  starLevel={champion.starLevel}\n                  headliner={champion.headliner}\n                  items={champion.items}\n                  alive={champion.alive}\n                  attackRange={champion.attackRange}\n                  health={champion.health}\n                  attackDamage={champion.attackDamage}\n                  totalMana={champion.totalMana}\n                  mana={champion.mana}\n                  abilityPower={champion.abilityPower}\n                  armor={champion.armor}\n                  magicResist={champion.magicResist}\n                  castingAttack={champion.castingAttack}\n                  castingAbility={champion.castingAbility}\n                  projectiles={champion.projectiles}\n                  abilityCastTime={champion.abilityCastTime}\n                  movementSpeed={champion.movementSpeed}\n                  iterationsRemaining={champion.iterationsRemaining}\n                  attackProjectileSpeed={champion.attackProjectileSpeed}\n                  abilityProjectileSpeed={champion.abilityProjectileSpeed}\n                ></Champion>\n              </div>\n            ))}\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 0, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 1, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 2, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 3, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 4, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 5, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 6, top: 7, even: 32.7 }}/>\n          </div>\n        </div>\n        <div className='section right-section'>\n          <ChampionDisplay champion={selectedChampion} />\n          <div style={{ display: 'flex', width: '225px', height: '50px', marginBottom: '10px' }}>\n            {isCombatActive !== 2 && (\n              <button\n                style={{\n                  flex: '1',\n                  padding: '10px',\n                  borderRadius: '15px',\n                  backgroundColor: '#4CAF50',  \n                  color: '#ffffff',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                }}\n                disabled={isCombatActive !== 0}\n                onClick={startCombat}\n              >\n                Submit\n              </button>\n            )}\n            {isCombatActive === 2 && (\n              <button\n                style={{\n                  flex: '1',\n                  padding: '10px',\n                  borderRadius: '15px',\n                  backgroundColor: '#4CAF50',  \n                  color: '#ffffff',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                }}\n                disabled={isCombatActive === 1}\n                onClick={handleNextPuzzleClick}\n              >\n                Next Puzzle\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,WAAW,EAAEC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,eAAe,GAAG,EAAE;AAC1B,MAAMC,eAAe,GAAG,EAAE;AAC1B,IAAIC,eAAe,GAAG,CAAC;AAEvB,MAAMC,gBAAgB,GAAG;EACvB,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}