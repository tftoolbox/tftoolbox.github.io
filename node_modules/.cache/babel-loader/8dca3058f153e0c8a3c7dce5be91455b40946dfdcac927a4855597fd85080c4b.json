{"ast":null,"code":"var _jsxFileName = \"/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Champion.js\";\nimport React from 'react';\nimport './Champion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Champion({\n  key,\n  team,\n  index,\n  hexagonPosition,\n  currentPosition,\n  image,\n  type,\n  starLevel,\n  headliner,\n  items,\n  alive,\n  attackRange,\n  health,\n  originalHealth,\n  attackDamage,\n  totalMana,\n  mana,\n  abilityPower,\n  armor,\n  magicResist\n}) {\n  const healthTextStyle = {\n    color: team === 'enemy' ? 'red' : 'lightgreen',\n    fontSize: '12px'\n  };\n  const manaTextStyle = {\n    color: 'lightblue',\n    fontSize: '12px'\n  };\n  const starStyle = {\n    color: 'yellow',\n    fontSize: '16px'\n  };\n  const renderStars = () => {\n    const stars = [];\n    for (let i = 0; i < starLevel; i++) {\n      stars.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        style: starStyle,\n        children: \"\\u2605\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }, this));\n    }\n    return stars;\n  };\n  const roundedHealth = Math.ceil(health);\n  const roundedMana = Math.ceil(mana);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"champion\",\n    style: {\n      left: 0 + 'px',\n      top: 0 + 'px',\n      backgroundImage: `url(${image})`,\n      backgroundSize: 'cover'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        marginTop: '10px',\n        marginBottom: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1',\n            backgroundColor: '#ccc',\n            height: '20px',\n            marginRight: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: 'green',\n              height: '100%',\n              width: `calc(${health / originalHealth * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#ffffff',\n            width: '70px',\n            textAlign: 'start',\n            fontSize: '14px'\n          },\n          children: [Math.round(health), \"/\", Math.round(originalHealth)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), totalMana > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#ffffff',\n            width: '70px',\n            textAlign: 'start',\n            fontSize: '14px'\n          },\n          children: [Math.round(mana), \"/\", Math.round(totalMana)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star-overlay\",\n      children: renderStars()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = Champion;\nexport default Champion;\nvar _c;\n$RefreshReg$(_c, \"Champion\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Champion","key","team","index","hexagonPosition","currentPosition","image","type","starLevel","headliner","items","alive","attackRange","health","originalHealth","attackDamage","totalMana","mana","abilityPower","armor","magicResist","healthTextStyle","color","fontSize","manaTextStyle","starStyle","renderStars","stars","i","push","style","children","fileName","_jsxFileName","lineNumber","columnNumber","roundedHealth","Math","ceil","roundedMana","className","left","top","backgroundImage","backgroundSize","paddingLeft","paddingRight","marginTop","marginBottom","display","alignItems","flex","backgroundColor","height","marginRight","width","textAlign","round","_c","$RefreshReg$"],"sources":["/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Champion.js"],"sourcesContent":["import React from 'react';\nimport './Champion.css'; \n\nfunction Champion({ key, team, index, hexagonPosition, currentPosition, image, type, starLevel, headliner, items, alive, attackRange, health, originalHealth, attackDamage, totalMana, mana, abilityPower, armor, magicResist }) {\n  const healthTextStyle = {\n    color: team === 'enemy' ? 'red' : 'lightgreen',\n    fontSize: '12px', \n  };\n\n  const manaTextStyle = {\n    color: 'lightblue',\n    fontSize: '12px',\n  };\n\n  const starStyle = {\n    color: 'yellow',\n    fontSize: '16px',  \n  };\n\n  const renderStars = () => {\n    const stars = [];\n    for (let i = 0; i < starLevel; i++) {\n      stars.push(<span key={i} style={starStyle}>â˜…</span>);\n    }\n    return stars;\n  };\n\n  const roundedHealth = Math.ceil(health);\n  const roundedMana = Math.ceil(mana);\n\n  return (\n    <div\n      className={\"champion\"}\n      style={{ \n        left: 0 + 'px', \n        top: 0 + 'px', \n        backgroundImage: `url(${image})`,\n        backgroundSize: 'cover', \n      }}\n    >\n      <div style={{ paddingLeft: '10px', paddingRight: '10px', marginTop: '10px', marginBottom: '15px' }}>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: '1', backgroundColor: '#ccc', height: '20px', marginRight: '5px' }}>\n            <div style={{ backgroundColor: 'green', height: '100%', width: `calc(${(health / originalHealth) * 100}%` }}></div>\n          </div>\n          <span style={{ color: '#ffffff', width: '70px', textAlign: 'start', fontSize: '14px' }}>{Math.round(health)}/{Math.round(originalHealth)}</span>\n        </div>\n        {totalMana > 0 && (\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <span style={{ color: '#ffffff', width: '70px', textAlign: 'start', fontSize: '14px' }}>{Math.round(mana)}/{Math.round(totalMana)}</span>\n          </div>\n        )}\n      </div>\n      <div className=\"star-overlay\">\n        {renderStars()}\n      </div>\n    </div>\n  );\n}\n\nexport default Champion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}