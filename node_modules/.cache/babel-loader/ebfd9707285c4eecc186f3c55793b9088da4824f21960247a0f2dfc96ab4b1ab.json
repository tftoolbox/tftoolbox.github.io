{"ast":null,"code":"var _jsxFileName = \"/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Board.css';\nimport Hexagon from './Hexagon';\nimport Champion from './Champion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CIRCLE_DIAMETER = 50;\nconst ITERATION_CYCLE = 25;\nvar globalIteration = 0;\nconst adjacentHexagons = {\n  0: {\n    0: [[0, 1], [1, 0]],\n    1: [[0, 0], [1, 0], [1, 1], [1, 2], [0, 2]],\n    2: [[0, 1], [1, 2], [0, 3]],\n    3: [[0, 2], [1, 2], [1, 3], [1, 4], [0, 4]],\n    4: [[0, 3], [1, 4], [0, 5]],\n    5: [[0, 4], [1, 4], [1, 5], [1, 6], [0, 6]],\n    6: [[0, 5], [1, 6], [0, 7]],\n    7: [[0, 6], [1, 6], [1, 7]]\n  },\n  1: {\n    0: [[0, 0], [0, 1], [1, 1], [2, 0]],\n    1: [[1, 0], [0, 1], [1, 2], [2, 2], [2, 1], [2, 0]],\n    2: [[0, 1], [0, 2], [0, 3], [1, 3], [2, 2], [1, 1]],\n    3: [[1, 2], [0, 3], [1, 4], [2, 4], [2, 3], [2, 2]],\n    4: [[0, 3], [0, 4], [0, 5], [1, 5], [2, 4], [1, 3]],\n    5: [[1, 4], [0, 5], [1, 6], [2, 6], [2, 5], [2, 4]],\n    6: [[0, 5], [0, 6], [0, 7], [1, 7], [2, 6], [1, 5]],\n    7: [[1, 6], [0, 7], [2, 6], [2, 7]]\n  },\n  2: {\n    0: [[1, 0], [1, 1], [2, 1], [3, 0]],\n    1: [[2, 0], [1, 1], [2, 2], [3, 2], [3, 1], [3, 0]],\n    2: [[1, 1], [1, 2], [1, 3], [2, 3], [3, 2], [2, 1]],\n    3: [[2, 2], [1, 3], [2, 4], [3, 4], [3, 3], [3, 2]],\n    4: [[1, 3], [1, 4], [1, 5], [2, 5], [3, 4], [2, 3]],\n    5: [[2, 4], [1, 5], [2, 6], [3, 6], [3, 5], [3, 4]],\n    6: [[1, 5], [1, 6], [1, 7], [2, 7], [3, 6], [2, 5]],\n    7: [[2, 6], [1, 7], [3, 6], [3, 7]]\n  },\n  3: {\n    0: [[2, 0], [2, 1], [3, 1], [4, 0]],\n    1: [[3, 0], [2, 1], [3, 2], [4, 2], [4, 1], [4, 0]],\n    2: [[2, 1], [2, 2], [2, 3], [3, 3], [4, 2], [3, 1]],\n    3: [[3, 2], [2, 3], [3, 4], [4, 4], [4, 3], [4, 2]],\n    4: [[2, 3], [2, 4], [2, 5], [3, 5], [4, 4], [3, 3]],\n    5: [[3, 4], [2, 5], [3, 6], [4, 6], [4, 5], [4, 4]],\n    6: [[2, 5], [2, 6], [2, 7], [3, 7], [4, 6], [3, 5]],\n    7: [[3, 6], [2, 7], [4, 6], [4, 7]]\n  },\n  4: {\n    0: [[3, 0], [3, 1], [4, 1], [5, 0]],\n    1: [[4, 0], [3, 1], [4, 2], [5, 2], [5, 1], [5, 0]],\n    2: [[3, 1], [3, 2], [3, 3], [4, 3], [5, 2], [4, 1]],\n    3: [[4, 2], [3, 3], [4, 4], [5, 4], [5, 3], [5, 2]],\n    4: [[3, 3], [3, 4], [3, 5], [4, 5], [5, 4], [4, 3]],\n    5: [[4, 4], [3, 5], [4, 6], [5, 6], [5, 5], [5, 4]],\n    6: [[3, 5], [3, 6], [3, 7], [4, 7], [5, 6], [4, 5]],\n    7: [[4, 6], [3, 7], [5, 6], [5, 7]]\n  },\n  5: {\n    0: [[4, 0], [4, 1], [5, 1], [6, 0]],\n    1: [[5, 0], [4, 1], [5, 2], [6, 2], [6, 1], [6, 0]],\n    2: [[4, 1], [4, 2], [4, 3], [5, 3], [6, 2], [5, 1]],\n    3: [[5, 2], [4, 3], [5, 4], [6, 4], [6, 3], [6, 2]],\n    4: [[4, 3], [4, 4], [4, 5], [5, 5], [6, 4], [5, 3]],\n    5: [[5, 4], [4, 5], [5, 6], [6, 6], [6, 5], [6, 4]],\n    6: [[4, 5], [4, 6], [4, 7], [5, 7], [6, 6], [5, 5]],\n    7: [[5, 6], [4, 7], [6, 6], [6, 7]]\n  },\n  6: {\n    0: [[5, 0], [5, 1], [6, 1]],\n    1: [[6, 0], [5, 1], [6, 2]],\n    2: [[6, 1], [5, 1], [5, 2], [5, 3], [6, 3]],\n    3: [[6, 2], [5, 3], [6, 4]],\n    4: [[6, 3], [5, 3], [5, 4], [5, 5], [6, 5]],\n    5: [[6, 4], [5, 5], [6, 6]],\n    6: [[6, 5], [5, 5], [5, 6], [5, 7], [6, 7]],\n    7: [[6, 6], [5, 7]]\n  }\n};\nfunction getNeighbors(champion) {\n  const left = champion.hexagonPosition.left;\n  const top = champion.hexagonPosition.top;\n  if (adjacentHexagons[left] && adjacentHexagons[left][top]) {\n    return adjacentHexagons[left][top];\n  }\n  return [];\n}\nfunction isAdjacent(champion1, champion2) {\n  const hex1 = [champion1.hexagonPosition.left, champion1.hexagonPosition.top];\n  const hex2 = [champion2.hexagonPosition.left, champion2.hexagonPosition.top];\n  const neighbors = getNeighbors({\n    hexagonPosition: {\n      left: hex1[0],\n      top: hex1[1]\n    }\n  });\n  return neighbors.some(neighbor => neighbor[0] === hex2[0] && neighbor[1] === hex2[1]);\n}\nfunction findShortestPath(champions, start, end, attackRange) {\n  const visited = new Set();\n  const queue = [[start]];\n  while (queue.length > 0) {\n    const path = queue.shift();\n    const currentHexagon = path[path.length - 1];\n    if (currentHexagon[0] !== undefined && currentHexagon[0] !== null) {\n      // if (isAdjacent({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } }, end)) {\n      //   return path;\n      // }\n\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n        const neighbors = getNeighbors({\n          hexagonPosition: {\n            left: currentHexagon[0],\n            top: currentHexagon[1]\n          }\n        });\n        for (const neighbor of neighbors) {\n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n            // Check attack range\n            if (attackRange === 1) {\n              if (isAdjacent({\n                hexagonPosition: {\n                  left: currentHexagon[0],\n                  top: currentHexagon[1]\n                }\n              }, end)) {\n                return path;\n              }\n            }\n            if (attackRange === 2) {\n              if (isAdjacent({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              }, end)) {\n                return path;\n              }\n            } else if (attackRange === 3) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              if (neighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            } else if (attackRange === 4) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              if (neighborNeighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            } else if (attackRange === 5) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              const neighborNeighborNeighborNeighbors = [];\n              for (const n of neighborNeighborNeighbors) {\n                neighborNeighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              if (neighborNeighborNeighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            }\n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    } else {\n      // if (isAdjacent(currentHexagon, end)) {\n      //   return path;\n      // }\n\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n        const neighbors = getNeighbors(currentHexagon);\n        for (const neighbor of neighbors) {\n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n            // Check attack range\n            if (attackRange === 1) {\n              if (isAdjacent(currentHexagon, end)) {\n                return path;\n              }\n            }\n            if (attackRange === 2) {\n              if (isAdjacent({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              }, end)) {\n                return path;\n              }\n            } else if (attackRange === 3) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              if (neighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            } else if (attackRange === 4) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              if (neighborNeighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            } else if (attackRange === 5) {\n              const neighborNeighbors = getNeighbors({\n                hexagonPosition: {\n                  left: neighbor[0],\n                  top: neighbor[1]\n                }\n              });\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              const neighborNeighborNeighborNeighbors = [];\n              for (const n of neighborNeighborNeighbors) {\n                neighborNeighborNeighborNeighbors.push(...getNeighbors({\n                  hexagonPosition: {\n                    left: n[0],\n                    top: n[1]\n                  }\n                }));\n              }\n              if (neighborNeighborNeighborNeighbors.some(n => isAdjacent({\n                hexagonPosition: {\n                  left: n[0],\n                  top: n[1]\n                }\n              }, end))) {\n                return path;\n              }\n            }\n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\nfunction findClosestEnemy(userChampion, enemyChampions) {\n  let closestEnemy = null;\n  let minDistance = Infinity;\n  for (const enemyChampion of enemyChampions) {\n    const distance = findShortestPath(enemyChampions, {\n      hexagonPosition: {\n        left: userChampion.hexagonPosition.left,\n        top: userChampion.hexagonPosition.top\n      }\n    }, {\n      hexagonPosition: {\n        left: enemyChampion.hexagonPosition.left,\n        top: enemyChampion.hexagonPosition.top\n      }\n    }, userChampion.attackRange);\n    if (distance && distance.length < minDistance) {\n      minDistance = distance.length;\n      closestEnemy = enemyChampion;\n    }\n  }\n  return closestEnemy;\n}\nfunction Board({\n  enemyChampionsList,\n  userChampionsList\n}) {\n  _s();\n  const [isDragging, setDragging] = useState(false);\n  const [enemyChampions, setEnemyChampions] = useState(enemyChampionsList);\n  const [userChampions, setUserChampions] = useState(userChampionsList);\n  const [draggedPlayer, setDraggedPlayer] = useState(null);\n  const [dragStartIndex, setDragStartIndex] = useState(null);\n  const [isCombatActive, setCombatActive] = useState(0);\n  // const [combatIteration, setCombatIteration] = useState(0); // will implement later for overtime\n\n  const startCombat = () => {\n    setCombatActive(1);\n  };\n  const endCombat = () => {\n    setCombatActive(2);\n    // console.log(\"combat ended\");\n  };\n  useEffect(() => {\n    if (isCombatActive === 1) {\n      const allChampions = userChampions.concat(enemyChampions);\n      // console.log('before champions', allChampions);\n\n      const updateChampionAtIndex = async index => {\n        const champion = allChampions[index];\n        var projectileIteration = 0;\n        if (champion.projectiles !== undefined & champion.projectiles !== null & champion.projectiles.length !== 0) {\n          for (const projectile of champion.projectiles) {\n            if (projectile.iterations === 0) {\n              if (champion.health - projectile.damage <= 0) {\n                allChampions[index] = {\n                  ...champion,\n                  alive: false,\n                  projectiles: []\n                };\n                break;\n              } else {\n                console.log('projectile going to do damage');\n                const newHealth = champion.health - projectile.damage;\n                if (champion.mana === null) {\n                  const newProjectiles = champion.projectiles.splice(projectileIteration, 1);\n                  allChampions[index] = {\n                    ...champion,\n                    health: newHealth,\n                    projectiles: newProjectiles\n                  };\n                } else {\n                  const newCurrentMana = Math.min(champion.totalMana, champion.mana + projectile.mana);\n                  const newProjectiles = champion.projectiles.splice(projectileIteration, 1);\n                  allChampions[index] = {\n                    ...champion,\n                    health: newHealth,\n                    mana: newCurrentMana,\n                    projectiles: newProjectiles\n                  };\n                }\n              }\n            } else {\n              var newProjectiles = champion.projectiles;\n              const newProjectileIterations = projectile.iterations - 1;\n              newProjectiles[projectileIteration] = {\n                ...projectile,\n                iterations: newProjectileIterations\n              };\n              allChampions[index] = {\n                ...champion,\n                projectiles: newProjectiles\n              };\n            }\n            projectileIteration += 1;\n          }\n        }\n        if (allChampions[index].alive) {\n          const isUserChampion = champion.team === 'user';\n          const closestEnemy = isUserChampion ? findClosestEnemy(champion, enemyChampions) : findClosestEnemy(champion, userChampions);\n          if (closestEnemy) {\n            const shortestPath = findShortestPath(allChampions, champion, closestEnemy, champion.attackRange);\n            // console.log('shortest path', shortestPath);\n\n            if (shortestPath && shortestPath.length > 1) {\n              const targetHexagon = shortestPath[1];\n              const targetPixelLeft = convertToPixels(targetHexagon[0], 'left', targetHexagon[1] % 2 === 1) - 25;\n              const targetPixelTop = convertToPixels(targetHexagon[1], 'top', targetHexagon[1] % 2 === 1) - 25;\n              if (champion.iterationsRemaining.move === 0) {\n                const newIterationsRemaining = {\n                  ...champion.iterationsRemaining,\n                  move: champion.movementSpeed\n                };\n                allChampions[index] = {\n                  ...champion,\n                  hexagonPosition: {\n                    left: targetHexagon[0],\n                    top: targetHexagon[1]\n                  },\n                  currentPosition: {\n                    left: targetPixelLeft,\n                    top: targetPixelTop\n                  },\n                  iterationsRemaining: newIterationsRemaining\n                };\n              } else {\n                const newIterationsRemaining = {\n                  ...champion.iterationsRemaining,\n                  move: champion.iterationsRemaining.move - 1\n                };\n                allChampions[index] = {\n                  ...champion,\n                  iterationsRemaining: newIterationsRemaining\n                };\n              }\n\n              // console.log('updated champion', allChampions[index]);\n            } else {\n              if (champion.totalMana === null | champion.mana < champion.totalMana) {\n                if (champion.iterationsRemaining.attack === 0) {\n                  const postMitigationAttackDamage = (1 - closestEnemy.armor / (100 + closestEnemy.armor)) * champion.attackDamage;\n                  const manaIncrement = Math.min(42.5, 0.01 * champion.attackDamage + 0.07 * postMitigationAttackDamage);\n                  var newCurrentMana = Math.min(closestEnemy.totalMana, closestEnemy.mana + manaIncrement);\n                  const newProjectile = {\n                    damage: postMitigationAttackDamage,\n                    mana: newCurrentMana,\n                    iterations: champion.attackProjectileSpeed\n                  };\n                  const newProjectileList = [...closestEnemy.projectiles, newProjectile];\n                  allChampions[closestEnemy.index] = {\n                    ...closestEnemy,\n                    projectiles: newProjectileList\n                  };\n                  newCurrentMana = Math.min(champion.totalMana, champion.mana + 10);\n                  const newIterationsRemaining = {\n                    ...champion.iterationsRemaining,\n                    attack: champion.attackSpeed\n                  };\n                  allChampions[index] = {\n                    ...champion,\n                    mana: newCurrentMana,\n                    iterationsRemaining: newIterationsRemaining\n                  };\n                } else {\n                  const newIterationsRemaining = {\n                    ...champion.iterationsRemaining,\n                    attack: champion.iterationsRemaining.attack - 1\n                  };\n                  allChampions[index] = {\n                    ...champion,\n                    iterationsRemaining: newIterationsRemaining\n                  };\n                }\n              } else if (champion.mana >= champion.totalMana) {\n                if (champion.iterationsRemaining.ability === 0) {\n                  const postMitigationAbilityDamage = (1 - closestEnemy.magicResist / (100 + closestEnemy.magicResist)) * champion.abilityPower;\n                  const manaIncrement = Math.min(42.5, 0.01 * champion.attackDamage + 0.07 * postMitigationAbilityDamage);\n                  const newCurrentMana = Math.min(closestEnemy.totalMana, closestEnemy.mana + manaIncrement);\n                  const newProjectile = {\n                    damage: postMitigationAbilityDamage,\n                    mana: newCurrentMana,\n                    iterations: champion.abilityProjectileSpeed\n                  };\n                  const newProjectileList = [...closestEnemy.projectiles, newProjectile];\n                  allChampions[closestEnemy.index] = {\n                    ...closestEnemy,\n                    projectiles: newProjectileList\n                  };\n                  const newIterationsRemaining = {\n                    ...champion.iterationsRemaining,\n                    ability: champion.abilityCastTime\n                  };\n                  allChampions[index] = {\n                    ...champion,\n                    mana: 0,\n                    iterationsRemaining: newIterationsRemaining\n                  };\n                } else {\n                  const newIterationsRemaining = {\n                    ...champion.iterationsRemaining,\n                    ability: champion.iterationsRemaining.ability - 1\n                  };\n                  allChampions[index] = {\n                    ...champion,\n                    iterationsRemaining: newIterationsRemaining\n                  };\n                }\n              }\n            }\n          }\n        }\n      };\n      const updateChampionsSequentially = async startTime => {\n        for (let index = 0; index < allChampions.length; index++) {\n          await updateChampionAtIndex(index);\n        }\n        // console.log('after champions', allChampions);\n\n        const aliveChampions = allChampions.filter(x => x.alive);\n        const updatedUserChampions = [];\n        const updatedEnemyChampions = [];\n        var iteration = 0;\n        aliveChampions.forEach(champion => {\n          if (champion.team === 'user') {\n            champion = {\n              ...champion,\n              index: iteration\n            };\n            updatedUserChampions.push(champion);\n          } else {\n            champion = {\n              ...champion,\n              index: iteration\n            };\n            updatedEnemyChampions.push(champion);\n          }\n          iteration += 1;\n        });\n        const endTime = new Date();\n        const timeDifference = endTime - startTime;\n        const waitTime = ITERATION_CYCLE - timeDifference;\n        if (waitTime >= 0) {\n          await new Promise(resolve => setTimeout(resolve, waitTime));\n          // console.log(`${globalIteration} Complete w/ ${waitTime + timeDifference} ms.`);\n        } else {\n          console.log('ERROR! ITERATION CYCLE TIME NOT LONG ENOUGH!');\n        }\n        setUserChampions(updatedUserChampions);\n        setEnemyChampions(updatedEnemyChampions);\n        if (updatedUserChampions.length === 0) {\n          endCombat();\n        } else if (updatedEnemyChampions.length === 0) {\n          endCombat();\n        }\n      };\n      const startTime = new Date();\n      updateChampionsSequentially(startTime);\n      globalIteration += 1;\n    }\n  }, [userChampions, isCombatActive, enemyChampions]);\n  const areChampionsOverlapping = (champion1, champion2) => {\n    const dx = champion1.currentPosition.left - champion2.currentPosition.left;\n    const dy = champion1.currentPosition.top - champion2.currentPosition.top;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < CIRCLE_DIAMETER;\n  };\n  const handleCircleDragStart = (event, player, index) => {\n    if (player === 'enemy') {\n      event.preventDefault(); // prevent dragging for enemy circles\n      return;\n    }\n    event.dataTransfer.setData('text/plain', 'champion');\n    setDragging(true);\n    setDraggedPlayer(player);\n    setDragStartIndex(index);\n  };\n  const handleCircleDragEnd = () => {\n    setDragging(false);\n    setDraggedPlayer(null);\n    setDragStartIndex(null);\n  };\n  const handleDragOver = event => {\n    event.dataTransfer.effectAllowed = 'none';\n    event.preventDefault();\n  };\n  const convertToPixels = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return 32.7 + (coordinate + 1) * 2.95 + coordinate * 62.4 + 62.4 / 2;\n      }\n      return (coordinate + 1) * 2.95 + coordinate * 62.4 + 62.4 / 2;\n    }\n    if (leftOrTop === 'top') {\n      return coordinate * 20.3 + coordinate * 36 + 36;\n    }\n  };\n  const convertToHexagons = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return Math.floor((coordinate - 32.7 - 2.95 - 31.2) / (2.95 + 62.4));\n      }\n      return Math.floor((coordinate - 2.95 - 31.2) / (2.95 + 62.4));\n    }\n    if (leftOrTop === 'top') {\n      return Math.floor((coordinate - 36) / (20.3 + 36));\n    }\n  };\n  const handleDrop = (event, hexagonCoordinates, player) => {\n    event.preventDefault();\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive !== 0) {\n      event.preventDefault();\n      return;\n    }\n    if (player === 'user' && dragStartIndex !== null) {\n      const hexagonCenterX = convertToPixels(hexagonCoordinates.left, 'left', hexagonCoordinates.top % 2 === 1);\n      const hexagonCenterY = convertToPixels(hexagonCoordinates.top, 'top', hexagonCoordinates.top % 2 === 1);\n      const targetHexagon = {\n        currentPosition: {\n          left: hexagonCenterX - CIRCLE_DIAMETER / 2,\n          top: hexagonCenterY - CIRCLE_DIAMETER / 2\n        }\n      };\n      const overlappingIndex = userChampions.findIndex((champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetHexagon));\n      if (overlappingIndex !== -1) {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex],\n            hexagonPosition: {\n              left: prevUserChampions[dragStartIndex].hexagonPosition.left,\n              top: prevUserChampions[dragStartIndex].hexagonPosition.top\n            },\n            currentPosition: {\n              left: prevUserChampions[dragStartIndex].currentPosition.left,\n              top: prevUserChampions[dragStartIndex].currentPosition.top\n            }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: hexagonCoordinates.left,\n              top: hexagonCoordinates.top\n            },\n            currentPosition: {\n              left: targetHexagon.currentPosition.left,\n              top: targetHexagon.currentPosition.top\n            }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: hexagonCoordinates.left,\n              top: hexagonCoordinates.top\n            },\n            currentPosition: {\n              left: targetHexagon.currentPosition.left,\n              top: targetHexagon.currentPosition.top\n            },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n  const handleCircleDrop = (event, circleCoordinates, index) => {\n    event.preventDefault();\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive !== 0) {\n      event.preventDefault();\n      return;\n    }\n    if (circleCoordinates.top >= 230 && dragStartIndex !== null) {\n      const targetChampion = {\n        currentPosition: {\n          left: circleCoordinates.left,\n          top: circleCoordinates.top\n        }\n      };\n      const overlappingIndex = userChampions.findIndex((champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetChampion));\n      if (overlappingIndex !== -1) {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex],\n            hexagonPosition: {\n              left: prevUserChampions[dragStartIndex].hexagonPosition.left,\n              top: prevUserChampions[dragStartIndex].hexagonPosition.top\n            },\n            currentPosition: {\n              left: prevUserChampions[dragStartIndex].currentPosition.left,\n              top: prevUserChampions[dragStartIndex].currentPosition.top\n            }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: prevUserChampions[index].hexagonPosition.left,\n              top: prevUserChampions[index].hexagonPosition.top\n            },\n            currentPosition: {\n              left: targetChampion.currentPosition.left,\n              top: targetChampion.currentPosition.top\n            }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: prevUserChampions[index].hexagonPosition.left,\n              top: prevUserChampions[index].hexagonPosition.top\n            },\n            currentPosition: {\n              left: targetChampion.currentPosition.left,\n              top: targetChampion.currentPosition.top\n            },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row\",\n      children: [enemyChampions.map((champion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `circle-overlay ${isDragging && draggedPlayer === 'enemy' ? 'dragging' : ''}`,\n        style: {\n          left: champion.currentPosition.left + 'px',\n          top: champion.currentPosition.top + 'px'\n        },\n        draggable: true,\n        onDragStart: e => handleCircleDragStart(e, 'enemy', index),\n        onDragEnd: handleCircleDragEnd,\n        onDragOver: e => handleDragOver(e),\n        onDrop: e => handleCircleDrop(e, {\n          left: champion.currentPosition.left,\n          top: champion.currentPosition.top\n        }, index),\n        children: /*#__PURE__*/_jsxDEV(Champion, {\n          team: 'enemy',\n          index: champion.index,\n          hexagonPosition: champion.hexagonPosition,\n          currentPosition: champion.currentPosition,\n          image: champion.image,\n          type: champion.type,\n          starLevel: champion.starLevel,\n          headliner: champion.headliner,\n          items: champion.items,\n          alive: champion.alive,\n          attackRange: champion.attackRange,\n          health: champion.health,\n          attackDamage: champion.attackDamage,\n          totalMana: champion.totalMana,\n          mana: champion.mana,\n          abilityPower: champion.abilityPower,\n          armor: champion.armor,\n          magicResist: champion.magicResist,\n          castingAttack: champion.castingAttack,\n          castingAbility: champion.castingAbility,\n          projectiles: champion.projectiles,\n          abilityCastTime: champion.abilityCastTime,\n          movementSpeed: champion.movementSpeed,\n          iterationsRemaining: champion.iterationsRemaining,\n          attackProjectileSpeed: champion.attackProjectileSpeed,\n          abilityProjectileSpeed: champion.abilityProjectileSpeed\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row even\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row even\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row even\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row even\",\n      children: [userChampions.map((champion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `circle-overlay ${isDragging && draggedPlayer === 'user' ? 'dragging' : ''}`,\n        style: {\n          left: champion.currentPosition.left + 'px',\n          top: champion.currentPosition.top + 'px'\n        },\n        draggable: true,\n        onDragStart: e => handleCircleDragStart(e, 'user', index),\n        onDragEnd: handleCircleDragEnd,\n        onDragOver: e => handleDragOver(e),\n        onDrop: e => handleCircleDrop(e, {\n          left: champion.currentPosition.left,\n          top: champion.currentPosition.top\n        }, index),\n        children: /*#__PURE__*/_jsxDEV(Champion, {\n          team: 'user',\n          index: champion.index,\n          hexagonPosition: champion.hexagonPosition,\n          currentPosition: champion.currentPosition,\n          image: champion.image,\n          type: champion.type,\n          starLevel: champion.starLevel,\n          headliner: champion.headliner,\n          items: champion.items,\n          alive: champion.alive,\n          attackRange: champion.attackRange,\n          health: champion.health,\n          attackDamage: champion.attackDamage,\n          totalMana: champion.totalMana,\n          mana: champion.mana,\n          abilityPower: champion.abilityPower,\n          armor: champion.armor,\n          magicResist: champion.magicResist,\n          castingAttack: champion.castingAttack,\n          castingAbility: champion.castingAbility,\n          projectiles: champion.projectiles,\n          abilityCastTime: champion.abilityCastTime,\n          movementSpeed: champion.movementSpeed,\n          iterationsRemaining: champion.iterationsRemaining,\n          attackProjectileSpeed: champion.attackProjectileSpeed,\n          abilityProjectileSpeed: champion.abilityProjectileSpeed\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCombat,\n      children: \"Start Combat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 599,\n    columnNumber: 7\n  }, this);\n}\n_s(Board, \"vflY4vycpawHT+nu9AAUhD/C9Lg=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Hexagon","Champion","jsxDEV","_jsxDEV","CIRCLE_DIAMETER","ITERATION_CYCLE","globalIteration","adjacentHexagons","getNeighbors","champion","left","hexagonPosition","top","isAdjacent","champion1","champion2","hex1","hex2","neighbors","some","neighbor","findShortestPath","champions","start","end","attackRange","visited","Set","queue","length","path","shift","currentHexagon","undefined","has","toString","add","neighborStr","isChampionOccupied","c","neighborNeighbors","n","neighborNeighborNeighbors","push","neighborNeighborNeighborNeighbors","newPath","findClosestEnemy","userChampion","enemyChampions","closestEnemy","minDistance","Infinity","enemyChampion","distance","Board","enemyChampionsList","userChampionsList","_s","isDragging","setDragging","setEnemyChampions","userChampions","setUserChampions","draggedPlayer","setDraggedPlayer","dragStartIndex","setDragStartIndex","isCombatActive","setCombatActive","startCombat","endCombat","allChampions","concat","updateChampionAtIndex","index","projectileIteration","projectiles","projectile","iterations","health","damage","alive","console","log","newHealth","mana","newProjectiles","splice","newCurrentMana","Math","min","totalMana","newProjectileIterations","isUserChampion","team","shortestPath","targetHexagon","targetPixelLeft","convertToPixels","targetPixelTop","iterationsRemaining","move","newIterationsRemaining","movementSpeed","currentPosition","attack","postMitigationAttackDamage","armor","attackDamage","manaIncrement","newProjectile","attackProjectileSpeed","newProjectileList","attackSpeed","ability","postMitigationAbilityDamage","magicResist","abilityPower","abilityProjectileSpeed","abilityCastTime","updateChampionsSequentially","startTime","aliveChampions","filter","x","updatedUserChampions","updatedEnemyChampions","iteration","forEach","endTime","Date","timeDifference","waitTime","Promise","resolve","setTimeout","areChampionsOverlapping","dx","dy","sqrt","handleCircleDragStart","event","player","preventDefault","dataTransfer","setData","handleCircleDragEnd","handleDragOver","effectAllowed","coordinate","leftOrTop","even","convertToHexagons","floor","handleDrop","hexagonCoordinates","hexagonCenterX","hexagonCenterY","overlappingIndex","findIndex","prevUserChampions","image","handleCircleDrop","circleCoordinates","targetChampion","children","className","map","style","draggable","onDragStart","e","onDragEnd","onDragOver","onDrop","type","starLevel","headliner","items","castingAttack","castingAbility","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Board.css';\nimport Hexagon from './Hexagon';\nimport Champion from './Champion';\n\nconst CIRCLE_DIAMETER = 50;\nconst ITERATION_CYCLE = 25;\nvar globalIteration = 0;\n\nconst adjacentHexagons = {\n  0: { \n    0: [[0, 1], [1, 0]],\n    1: [[0, 0], [1, 0], [1, 1], [1, 2], [0, 2]],\n    2: [[0, 1], [1, 2], [0, 3]],\n    3: [[0, 2], [1, 2], [1, 3], [1, 4], [0, 4]],\n    4: [[0, 3], [1, 4], [0, 5]],\n    5: [[0, 4], [1, 4], [1, 5], [1, 6], [0, 6]],\n    6: [[0, 5], [1, 6], [0, 7]],\n    7: [[0, 6], [1, 6], [1, 7]],\n  },\n  1: { \n    0: [[0, 0], [0, 1], [1, 1], [2, 0]],\n    1: [[1, 0], [0, 1], [1, 2], [2, 2], [2, 1], [2, 0]],\n    2: [[0, 1], [0, 2], [0, 3], [1, 3], [2, 2], [1, 1]],\n    3: [[1, 2], [0, 3], [1, 4], [2, 4], [2, 3], [2, 2]],\n    4: [[0, 3], [0, 4], [0, 5], [1, 5], [2, 4], [1, 3]],\n    5: [[1, 4], [0, 5], [1, 6], [2, 6], [2, 5], [2, 4]],\n    6: [[0, 5], [0, 6], [0, 7], [1, 7], [2, 6], [1, 5]],\n    7: [[1, 6], [0, 7], [2, 6], [2, 7]],\n  },\n  2: { \n    0: [[1, 0], [1, 1], [2, 1], [3, 0]],\n    1: [[2, 0], [1, 1], [2, 2], [3, 2], [3, 1], [3, 0]],\n    2: [[1, 1], [1, 2], [1, 3], [2, 3], [3, 2], [2, 1]],\n    3: [[2, 2], [1, 3], [2, 4], [3, 4], [3, 3], [3, 2]],\n    4: [[1, 3], [1, 4], [1, 5], [2, 5], [3, 4], [2, 3]],\n    5: [[2, 4], [1, 5], [2, 6], [3, 6], [3, 5], [3, 4]],\n    6: [[1, 5], [1, 6], [1, 7], [2, 7], [3, 6], [2, 5]],\n    7: [[2, 6], [1, 7], [3, 6], [3, 7]],\n  },\n  3: { \n    0: [[2, 0], [2, 1], [3, 1], [4, 0]],\n    1: [[3, 0], [2, 1], [3, 2], [4, 2], [4, 1], [4, 0]],\n    2: [[2, 1], [2, 2], [2, 3], [3, 3], [4, 2], [3, 1]],\n    3: [[3, 2], [2, 3], [3, 4], [4, 4], [4, 3], [4, 2]],\n    4: [[2, 3], [2, 4], [2, 5], [3, 5], [4, 4], [3, 3]],\n    5: [[3, 4], [2, 5], [3, 6], [4, 6], [4, 5], [4, 4]],\n    6: [[2, 5], [2, 6], [2, 7], [3, 7], [4, 6], [3, 5]],\n    7: [[3, 6], [2, 7], [4, 6], [4, 7]],\n  },\n  4: { \n    0: [[3, 0], [3, 1], [4, 1], [5, 0]],\n    1: [[4, 0], [3, 1], [4, 2], [5, 2], [5, 1], [5, 0]],\n    2: [[3, 1], [3, 2], [3, 3], [4, 3], [5, 2], [4, 1]],\n    3: [[4, 2], [3, 3], [4, 4], [5, 4], [5, 3], [5, 2]],\n    4: [[3, 3], [3, 4], [3, 5], [4, 5], [5, 4], [4, 3]],\n    5: [[4, 4], [3, 5], [4, 6], [5, 6], [5, 5], [5, 4]],\n    6: [[3, 5], [3, 6], [3, 7], [4, 7], [5, 6], [4, 5]],\n    7: [[4, 6], [3, 7], [5, 6], [5, 7]],\n  },\n  5: { \n    0: [[4, 0], [4, 1], [5, 1], [6, 0]],\n    1: [[5, 0], [4, 1], [5, 2], [6, 2], [6, 1], [6, 0]],\n    2: [[4, 1], [4, 2], [4, 3], [5, 3], [6, 2], [5, 1]],\n    3: [[5, 2], [4, 3], [5, 4], [6, 4], [6, 3], [6, 2]],\n    4: [[4, 3], [4, 4], [4, 5], [5, 5], [6, 4], [5, 3]],\n    5: [[5, 4], [4, 5], [5, 6], [6, 6], [6, 5], [6, 4]],\n    6: [[4, 5], [4, 6], [4, 7], [5, 7], [6, 6], [5, 5]],\n    7: [[5, 6], [4, 7], [6, 6], [6, 7]],\n  },\n  6: { \n    0: [[5, 0], [5, 1], [6, 1]],\n    1: [[6, 0], [5, 1], [6, 2]],\n    2: [[6, 1], [5, 1], [5, 2], [5, 3], [6, 3]],\n    3: [[6, 2], [5, 3], [6, 4]],\n    4: [[6, 3], [5, 3], [5, 4], [5, 5], [6, 5]],\n    5: [[6, 4], [5, 5], [6, 6]],\n    6: [[6, 5], [5, 5], [5, 6], [5, 7], [6, 7]],\n    7: [[6, 6], [5, 7]],\n  },\n}\n\nfunction getNeighbors(champion) {\n  const left = champion.hexagonPosition.left;\n  const top = champion.hexagonPosition.top;\n  if (adjacentHexagons[left] && adjacentHexagons[left][top]) {\n    return adjacentHexagons[left][top];\n  }\n\n  return [];\n}\n\nfunction isAdjacent(champion1, champion2) {\n  const hex1 = [champion1.hexagonPosition.left, champion1.hexagonPosition.top];\n  const hex2 = [champion2.hexagonPosition.left, champion2.hexagonPosition.top];\n  const neighbors = getNeighbors({ hexagonPosition: { left: hex1[0], top: hex1[1] } });\n  \n  return neighbors.some(neighbor => neighbor[0] === hex2[0] && neighbor[1] === hex2[1]);\n}\n\nfunction findShortestPath(champions, start, end, attackRange) {\n  const visited = new Set();\n  const queue = [[start]];\n  \n  while (queue.length > 0) {\n    const path = queue.shift();\n    const currentHexagon = path[path.length - 1];\n\n    if (currentHexagon[0] !== undefined && currentHexagon[0] !== null) {\n      // if (isAdjacent({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } }, end)) {\n      //   return path;\n      // }\n\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n  \n        const neighbors = getNeighbors({hexagonPosition: {left: currentHexagon[0], top: currentHexagon[1]}});\n        \n        for (const neighbor of neighbors) {\n  \n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n  \n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n          \n            // Check attack range\n            if (attackRange === 1) {\n              if (isAdjacent({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } }, end)) {\n                return path;\n              }\n            }\n            if (attackRange === 2) {\n              if (isAdjacent({hexagonPosition: {left: neighbor[0], top: neighbor[1]}}, end)) {\n                return path;\n              }\n            } else if (attackRange === 3) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              if (neighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path; \n              }\n            } else if (attackRange === 4) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}})); \n              }\n              if (neighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            } else if (attackRange === 5) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              const neighborNeighborNeighborNeighbors = [];\n              for (const n of neighborNeighborNeighbors) {\n                neighborNeighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              if (neighborNeighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            }\n  \n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    } else {\n      // if (isAdjacent(currentHexagon, end)) {\n      //   return path;\n      // }\n\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n  \n        const neighbors = getNeighbors(currentHexagon);\n        \n        for (const neighbor of neighbors) {\n  \n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n  \n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n          \n            // Check attack range\n            if (attackRange === 1) {\n              if (isAdjacent(currentHexagon, end)) {\n                return path;\n              }\n            }\n            if (attackRange === 2) {\n              if (isAdjacent({hexagonPosition: {left: neighbor[0], top: neighbor[1]}}, end)) {\n                return path;\n              }\n            } else if (attackRange === 3) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              if (neighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path; \n              }\n            } else if (attackRange === 4) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}})); \n              }\n              if (neighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            } else if (attackRange === 5) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              const neighborNeighborNeighborNeighbors = [];\n              for (const n of neighborNeighborNeighbors) {\n                neighborNeighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              if (neighborNeighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            }\n  \n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n\nfunction findClosestEnemy(userChampion, enemyChampions) {\n  let closestEnemy = null;\n  let minDistance = Infinity;\n\n  for (const enemyChampion of enemyChampions) {\n    const distance = findShortestPath(\n      enemyChampions,\n      { hexagonPosition: { left: userChampion.hexagonPosition.left, top: userChampion.hexagonPosition.top } },\n      { hexagonPosition: { left: enemyChampion.hexagonPosition.left, top: enemyChampion.hexagonPosition.top } },\n      userChampion.attackRange\n    );\n    if (distance && distance.length < minDistance) {\n      minDistance = distance.length;\n      closestEnemy = enemyChampion;\n    }\n  }\n\n  return closestEnemy;\n}\n\nfunction Board({ enemyChampionsList, userChampionsList }) {\n  const [isDragging, setDragging] = useState(false);\n  const [enemyChampions, setEnemyChampions] = useState(enemyChampionsList);\n  const [userChampions, setUserChampions] = useState(userChampionsList);\n  const [draggedPlayer, setDraggedPlayer] = useState(null);\n  const [dragStartIndex, setDragStartIndex] = useState(null);\n  const [isCombatActive, setCombatActive] = useState(0);\n  // const [combatIteration, setCombatIteration] = useState(0); // will implement later for overtime\n\n  const startCombat = () => {\n    setCombatActive(1);\n  }\n\n  const endCombat = () => {\n    setCombatActive(2);\n    // console.log(\"combat ended\");\n  }\n\n  useEffect(() => {\n    if (isCombatActive === 1) {\n      const allChampions = userChampions.concat(enemyChampions);\n      // console.log('before champions', allChampions);\n  \n      const updateChampionAtIndex = async (index) => {\n        const champion = allChampions[index];\n        var projectileIteration = 0;\n        if (champion.projectiles !== undefined & champion.projectiles !== null & champion.projectiles.length !== 0) {\n          for (const projectile of champion.projectiles) {\n            if (projectile.iterations === 0) {\n              if ((champion.health - projectile.damage) <= 0) {\n                allChampions[index] = { ...champion, alive: false, projectiles: [] };\n                break;\n              } else {\n                console.log('projectile going to do damage');\n                const newHealth = champion.health - projectile.damage;\n                if (champion.mana === null) {\n                  const newProjectiles = champion.projectiles.splice(projectileIteration, 1);\n                  allChampions[index] = { ...champion, health: newHealth, projectiles: newProjectiles };\n                } else {\n                  const newCurrentMana = Math.min(champion.totalMana, champion.mana + projectile.mana);\n                  const newProjectiles = champion.projectiles.splice(projectileIteration, 1);\n                  allChampions[index] = { ...champion, health: newHealth, mana: newCurrentMana, projectiles: newProjectiles };\n                } \n              }\n            } else {\n              var newProjectiles = champion.projectiles;\n              const newProjectileIterations = projectile.iterations - 1;\n              newProjectiles[projectileIteration] = { ...projectile, iterations: newProjectileIterations }\n              allChampions[index] = { ...champion, projectiles: newProjectiles };\n            }\n            projectileIteration += 1;\n          }\n        }\n\n        if (allChampions[index].alive) {\n          const isUserChampion = champion.team === 'user';\n          const closestEnemy = isUserChampion ? findClosestEnemy(champion, enemyChampions) : findClosestEnemy(champion, userChampions);\n    \n          if (closestEnemy) {\n            const shortestPath = findShortestPath(allChampions, champion, closestEnemy, champion.attackRange);\n            // console.log('shortest path', shortestPath);\n    \n            if (shortestPath && shortestPath.length > 1) {\n              const targetHexagon = shortestPath[1];\n              const targetPixelLeft = convertToPixels(targetHexagon[0], 'left', targetHexagon[1] % 2 === 1) - 25;\n              const targetPixelTop = convertToPixels(targetHexagon[1], 'top', targetHexagon[1] % 2 === 1) - 25;\n    \n              if (champion.iterationsRemaining.move === 0) {\n                const newIterationsRemaining = { ...champion.iterationsRemaining, move: champion.movementSpeed };\n                allChampions[index] = {\n                  ...champion,\n                  hexagonPosition: { left: targetHexagon[0], top: targetHexagon[1] },\n                  currentPosition: { left: targetPixelLeft, top: targetPixelTop },\n                  iterationsRemaining: newIterationsRemaining, \n                };\n              } else {\n                const newIterationsRemaining = { ...champion.iterationsRemaining, move: champion.iterationsRemaining.move - 1 };\n                allChampions[index] = {\n                  ...champion,\n                  iterationsRemaining: newIterationsRemaining, \n                };\n              }\n    \n              // console.log('updated champion', allChampions[index]);\n            } else {\n              if (champion.totalMana === null | champion.mana < champion.totalMana) {\n                if (champion.iterationsRemaining.attack === 0) {\n                  const postMitigationAttackDamage = (1 - (closestEnemy.armor / (100 + closestEnemy.armor))) * champion.attackDamage;\n                  const manaIncrement = Math.min(42.5, (0.01 * champion.attackDamage) + (0.07 * postMitigationAttackDamage))\n                  var newCurrentMana = Math.min(closestEnemy.totalMana, closestEnemy.mana + manaIncrement)\n                  const newProjectile = { damage: postMitigationAttackDamage, mana: newCurrentMana, iterations: champion.attackProjectileSpeed }\n                  const newProjectileList = [...closestEnemy.projectiles, newProjectile];\n                  allChampions[closestEnemy.index] = { ...closestEnemy, projectiles: newProjectileList };\n\n                  newCurrentMana = Math.min(champion.totalMana, champion.mana + 10);\n                  const newIterationsRemaining = { ...champion.iterationsRemaining, attack: champion.attackSpeed };\n                  allChampions[index] = { ...champion, mana: newCurrentMana, iterationsRemaining: newIterationsRemaining };\n                } else {\n                  const newIterationsRemaining = { ...champion.iterationsRemaining, attack: champion.iterationsRemaining.attack - 1 };\n                  allChampions[index] = {\n                    ...champion,\n                    iterationsRemaining: newIterationsRemaining, \n                  };\n                }\n              } else if (champion.mana >= champion.totalMana) {\n                if (champion.iterationsRemaining.ability === 0) {\n                  const postMitigationAbilityDamage = (1 - (closestEnemy.magicResist / (100 + closestEnemy.magicResist))) * champion.abilityPower;\n                  const manaIncrement = Math.min(42.5, (0.01 * champion.attackDamage) + (0.07 * postMitigationAbilityDamage))\n                  const newCurrentMana = Math.min(closestEnemy.totalMana, closestEnemy.mana + manaIncrement)\n                  const newProjectile = { damage: postMitigationAbilityDamage, mana: newCurrentMana, iterations: champion.abilityProjectileSpeed }\n                  const newProjectileList = [...closestEnemy.projectiles, newProjectile];\n                  allChampions[closestEnemy.index] = { ...closestEnemy, projectiles: newProjectileList };\n\n                  const newIterationsRemaining = { ...champion.iterationsRemaining, ability: champion.abilityCastTime };\n                  allChampions[index] = { ...champion, mana: 0, iterationsRemaining: newIterationsRemaining };\n                } else {  \n                  const newIterationsRemaining = { ...champion.iterationsRemaining, ability: champion.iterationsRemaining.ability - 1 };\n                  allChampions[index] = {\n                    ...champion,\n                    iterationsRemaining: newIterationsRemaining, \n                  };\n                }\n              }\n            }\n          }\n        }\n      };\n  \n      const updateChampionsSequentially = async (startTime) => {\n        for (let index = 0; index < allChampions.length; index++) {\n          await updateChampionAtIndex(index);\n        }\n        // console.log('after champions', allChampions);\n\n        const aliveChampions = allChampions.filter(x => x.alive); \n\n        const updatedUserChampions = [];\n        const updatedEnemyChampions = [];\n        var iteration = 0;\n\n        aliveChampions.forEach(champion => {\n          if (champion.team === 'user') {\n            champion = {\n              ...champion, index: iteration\n            };\n            updatedUserChampions.push(champion);\n          } else {\n            champion = {\n              ...champion, index: iteration\n            };\n            updatedEnemyChampions.push(champion);\n          }\n          iteration += 1;\n        });\n        \n        const endTime = new Date();\n        const timeDifference = endTime - startTime;\n        const waitTime = ITERATION_CYCLE - timeDifference;\n        if (waitTime >= 0) {\n          await new Promise(resolve => setTimeout(resolve, waitTime));    \n          // console.log(`${globalIteration} Complete w/ ${waitTime + timeDifference} ms.`);\n        } else {\n          console.log('ERROR! ITERATION CYCLE TIME NOT LONG ENOUGH!');\n        }\n\n        setUserChampions(updatedUserChampions);\n        setEnemyChampions(updatedEnemyChampions);\n\n        if (updatedUserChampions.length === 0) {\n          endCombat();\n        } else if (updatedEnemyChampions.length === 0) {\n          endCombat();\n        }\n      };\n      \n      const startTime = new Date();\n      updateChampionsSequentially(startTime);\n      globalIteration += 1;\n    }\n  }, [userChampions, isCombatActive, enemyChampions]);\n\n  const areChampionsOverlapping = (champion1, champion2) => {\n    const dx = champion1.currentPosition.left - champion2.currentPosition.left;\n    const dy = champion1.currentPosition.top - champion2.currentPosition.top;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < CIRCLE_DIAMETER; \n  };\n\n  const handleCircleDragStart = (event, player, index) => {\n    if (player === 'enemy') {\n      event.preventDefault(); // prevent dragging for enemy circles\n      return;\n    }\n\n    event.dataTransfer.setData('text/plain', 'champion'); \n    setDragging(true);\n    setDraggedPlayer(player);\n    setDragStartIndex(index);\n  };\n\n  const handleCircleDragEnd = () => {\n    setDragging(false);\n    setDraggedPlayer(null);\n    setDragStartIndex(null);\n  };\n\n  const handleDragOver = (event) => {\n    event.dataTransfer.effectAllowed = 'none';\n    event.preventDefault();\n  };\n\n  const convertToPixels = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return 32.7 + ((coordinate + 1) * 2.95) + (coordinate * 62.4) + 62.4 / 2;\n      }\n      return ((coordinate + 1) * 2.95) + (coordinate * 62.4) + 62.4 / 2;\n    }\n    if (leftOrTop === 'top') {\n      return (coordinate * 20.3) + (coordinate * 36) + 36;\n    }\n  }\n\n  const convertToHexagons = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return Math.floor((coordinate - 32.7 - 2.95 - 31.2) / (2.95 + 62.4));\n      }\n      return Math.floor((coordinate - 2.95 - 31.2) / (2.95 + 62.4));\n    }\n    if (leftOrTop === 'top') {\n      return Math.floor((coordinate - 36) / (20.3 + 36));\n    }\n  }\n\n  const handleDrop = (event, hexagonCoordinates, player) => {\n    event.preventDefault();\n\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive !== 0) {\n      event.preventDefault();\n      return;\n    }\n    if (player === 'user' && dragStartIndex !== null) {\n      const hexagonCenterX = convertToPixels(hexagonCoordinates.left, 'left', hexagonCoordinates.top % 2 === 1);\n      const hexagonCenterY = convertToPixels(hexagonCoordinates.top, 'top', hexagonCoordinates.top % 2 === 1);\n\n      const targetHexagon = {\n        currentPosition: {\n          left: hexagonCenterX - (CIRCLE_DIAMETER / 2),\n          top: hexagonCenterY - (CIRCLE_DIAMETER / 2)\n        }\n      };\n\n      const overlappingIndex = userChampions.findIndex(\n        (champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetHexagon)\n      );\n\n      if (overlappingIndex !== -1) {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex], \n            hexagonPosition: { left: prevUserChampions[dragStartIndex].hexagonPosition.left, top: prevUserChampions[dragStartIndex].hexagonPosition.top },\n            currentPosition: { left: prevUserChampions[dragStartIndex].currentPosition.left, top: prevUserChampions[dragStartIndex].currentPosition.top }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: hexagonCoordinates.left, top: hexagonCoordinates.top },\n            currentPosition: { left: targetHexagon.currentPosition.left, top: targetHexagon.currentPosition.top }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: hexagonCoordinates.left, top: hexagonCoordinates.top },\n            currentPosition: { left: targetHexagon.currentPosition.left, top: targetHexagon.currentPosition.top },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n\n  const handleCircleDrop = (event, circleCoordinates, index) => {\n    event.preventDefault();\n\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive !== 0) {\n      event.preventDefault();\n      return;\n    }\n    if (circleCoordinates.top >= 230 && dragStartIndex !== null) {\n      const targetChampion = {\n        currentPosition: {\n          left: circleCoordinates.left,\n          top: circleCoordinates.top\n        }\n      };\n\n      const overlappingIndex = userChampions.findIndex(\n        (champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetChampion)\n      );\n\n      if (overlappingIndex !== -1) {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex], \n            hexagonPosition: { left: prevUserChampions[dragStartIndex].hexagonPosition.left, top: prevUserChampions[dragStartIndex].hexagonPosition.top },\n            currentPosition: { left: prevUserChampions[dragStartIndex].currentPosition.left, top: prevUserChampions[dragStartIndex].currentPosition.top }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: prevUserChampions[index].hexagonPosition.left, top: prevUserChampions[index].hexagonPosition.top },\n            currentPosition: { left: targetChampion.currentPosition.left, top: targetChampion.currentPosition.top }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: prevUserChampions[index].hexagonPosition.left, top: prevUserChampions[index].hexagonPosition.top },\n            currentPosition: { left: targetChampion.currentPosition.left, top: targetChampion.currentPosition.top },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n\n  return (\n      <div>\n        <div className='hex-row'>\n          {enemyChampions.map((champion, index) => (\n            <div\n              key={index}\n              className={`circle-overlay ${isDragging && draggedPlayer === 'enemy' ? 'dragging' : ''}`}\n              style={{ left: champion.currentPosition.left + 'px', top: champion.currentPosition.top + 'px' }}\n              draggable\n              onDragStart={(e) => handleCircleDragStart(e, 'enemy', index)}\n              onDragEnd={handleCircleDragEnd}\n              onDragOver={(e) => handleDragOver(e)}\n              onDrop={(e) => handleCircleDrop(e, { left: champion.currentPosition.left, top: champion.currentPosition.top }, index)}\n            >\n              <Champion\n                key={index}\n                team={'enemy'}\n                index={champion.index}\n                hexagonPosition={champion.hexagonPosition}\n                currentPosition={champion.currentPosition}\n                image={champion.image}\n                type={champion.type}\n                starLevel={champion.starLevel}\n                headliner={champion.headliner}\n                items={champion.items}\n                alive={champion.alive}\n                attackRange={champion.attackRange}\n                health={champion.health}\n                attackDamage={champion.attackDamage}\n                totalMana={champion.totalMana}\n                mana={champion.mana}\n                abilityPower={champion.abilityPower}\n                armor={champion.armor}\n                magicResist={champion.magicResist}\n                castingAttack={champion.castingAttack}\n                castingAbility={champion.castingAbility}\n                projectiles={champion.projectiles}\n                abilityCastTime={champion.abilityCastTime}\n                movementSpeed={champion.movementSpeed}\n                iterationsRemaining={champion.iterationsRemaining}\n                attackProjectileSpeed={champion.attackProjectileSpeed}\n                abilityProjectileSpeed={champion.abilityProjectileSpeed}\n              ></Champion>\n            </div>\n          ))}\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 0, even: 0 }}/>\n        </div>\n        <div className='hex-row even'>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 1, even: 32.7 }}/>\n        </div>\n        <div className='hex-row'> \n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 2, even: 0 }}/>\n        </div>\n        <div className='hex-row even'>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 3, even: 32.7 }}/>\n        </div>\n        <div className='hex-row'>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 0, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 1, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 2, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 3, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 4, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 5, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 6, top: 4, even: 0 }}/>\n        </div>\n        <div className='hex-row even'>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 0, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 1, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 2, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 3, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 4, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 5, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 6, top: 5, even: 32.7 }}/>\n        </div>\n        <div className='hex-row'>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 0, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 1, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 2, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 3, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 4, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 5, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 6, top: 6, even: 0 }}/>\n        </div>\n        <div className='hex-row even'>\n          {userChampions.map((champion, index) => (\n            <div\n              key={index}\n              className={`circle-overlay ${isDragging && draggedPlayer === 'user' ? 'dragging' : ''}`}\n              style={{ left: champion.currentPosition.left + 'px', top: champion.currentPosition.top + 'px' }}\n              draggable\n              onDragStart={(e) => handleCircleDragStart(e, 'user', index)}\n              onDragEnd={handleCircleDragEnd}\n              onDragOver={(e) => handleDragOver(e)}\n              onDrop={(e) => handleCircleDrop(e, { left: champion.currentPosition.left, top: champion.currentPosition.top }, index)}\n            >\n              <Champion\n                key={index}\n                team={'user'}\n                index={champion.index}\n                hexagonPosition={champion.hexagonPosition}\n                currentPosition={champion.currentPosition}\n                image={champion.image}\n                type={champion.type}\n                starLevel={champion.starLevel}\n                headliner={champion.headliner}\n                items={champion.items}\n                alive={champion.alive}\n                attackRange={champion.attackRange}\n                health={champion.health}\n                attackDamage={champion.attackDamage}\n                totalMana={champion.totalMana}\n                mana={champion.mana}\n                abilityPower={champion.abilityPower}\n                armor={champion.armor}\n                magicResist={champion.magicResist}\n                castingAttack={champion.castingAttack}\n                castingAbility={champion.castingAbility}\n                projectiles={champion.projectiles}\n                abilityCastTime={champion.abilityCastTime}\n                movementSpeed={champion.movementSpeed}\n                iterationsRemaining={champion.iterationsRemaining}\n                attackProjectileSpeed={champion.attackProjectileSpeed}\n                abilityProjectileSpeed={champion.abilityProjectileSpeed}\n              ></Champion>\n            </div>\n          ))}\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 0, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 1, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 2, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 3, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 4, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 5, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 6, top: 7, even: 32.7 }}/>\n        </div>\n        <button onClick={startCombat}>Start Combat</button>\n      </div>\n  );\n}\n\nexport default Board;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,eAAe,GAAG,EAAE;AAC1B,MAAMC,eAAe,GAAG,EAAE;AAC1B,IAAIC,eAAe,GAAG,CAAC;AAEvB,MAAMC,gBAAgB,GAAG;EACvB,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}