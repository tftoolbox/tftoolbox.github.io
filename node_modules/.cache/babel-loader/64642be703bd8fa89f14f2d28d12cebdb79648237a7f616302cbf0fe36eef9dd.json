{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Board.css';import Hexagon from'./Hexagon';import Champion from'./Champion';import DualButton from'./DualButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CIRCLE_DIAMETER=50;const ITERATION_CYCLE=50;var globalIteration=0;const adjacentHexagons={0:{0:[[0,1],[1,0]],1:[[0,0],[1,0],[1,1],[1,2],[0,2]],2:[[0,1],[1,2],[0,3]],3:[[0,2],[1,2],[1,3],[1,4],[0,4]],4:[[0,3],[1,4],[0,5]],5:[[0,4],[1,4],[1,5],[1,6],[0,6]],6:[[0,5],[1,6],[0,7]],7:[[0,6],[1,6],[1,7]]},1:{0:[[0,0],[0,1],[1,1],[2,0]],1:[[1,0],[0,1],[1,2],[2,2],[2,1],[2,0]],2:[[0,1],[0,2],[0,3],[1,3],[2,2],[1,1]],3:[[1,2],[0,3],[1,4],[2,4],[2,3],[2,2]],4:[[0,3],[0,4],[0,5],[1,5],[2,4],[1,3]],5:[[1,4],[0,5],[1,6],[2,6],[2,5],[2,4]],6:[[0,5],[0,6],[0,7],[1,7],[2,6],[1,5]],7:[[1,6],[0,7],[2,6],[2,7]]},2:{0:[[1,0],[1,1],[2,1],[3,0]],1:[[2,0],[1,1],[2,2],[3,2],[3,1],[3,0]],2:[[1,1],[1,2],[1,3],[2,3],[3,2],[2,1]],3:[[2,2],[1,3],[2,4],[3,4],[3,3],[3,2]],4:[[1,3],[1,4],[1,5],[2,5],[3,4],[2,3]],5:[[2,4],[1,5],[2,6],[3,6],[3,5],[3,4]],6:[[1,5],[1,6],[1,7],[2,7],[3,6],[2,5]],7:[[2,6],[1,7],[3,6],[3,7]]},3:{0:[[2,0],[2,1],[3,1],[4,0]],1:[[3,0],[2,1],[3,2],[4,2],[4,1],[4,0]],2:[[2,1],[2,2],[2,3],[3,3],[4,2],[3,1]],3:[[3,2],[2,3],[3,4],[4,4],[4,3],[4,2]],4:[[2,3],[2,4],[2,5],[3,5],[4,4],[3,3]],5:[[3,4],[2,5],[3,6],[4,6],[4,5],[4,4]],6:[[2,5],[2,6],[2,7],[3,7],[4,6],[3,5]],7:[[3,6],[2,7],[4,6],[4,7]]},4:{0:[[3,0],[3,1],[4,1],[5,0]],1:[[4,0],[3,1],[4,2],[5,2],[5,1],[5,0]],2:[[3,1],[3,2],[3,3],[4,3],[5,2],[4,1]],3:[[4,2],[3,3],[4,4],[5,4],[5,3],[5,2]],4:[[3,3],[3,4],[3,5],[4,5],[5,4],[4,3]],5:[[4,4],[3,5],[4,6],[5,6],[5,5],[5,4]],6:[[3,5],[3,6],[3,7],[4,7],[5,6],[4,5]],7:[[4,6],[3,7],[5,6],[5,7]]},5:{0:[[4,0],[4,1],[5,1],[6,0]],1:[[5,0],[4,1],[5,2],[6,2],[6,1],[6,0]],2:[[4,1],[4,2],[4,3],[5,3],[6,2],[5,1]],3:[[5,2],[4,3],[5,4],[6,4],[6,3],[6,2]],4:[[4,3],[4,4],[4,5],[5,5],[6,4],[5,3]],5:[[5,4],[4,5],[5,6],[6,6],[6,5],[6,4]],6:[[4,5],[4,6],[4,7],[5,7],[6,6],[5,5]],7:[[5,6],[4,7],[6,6],[6,7]]},6:{0:[[5,0],[5,1],[6,1]],1:[[6,0],[5,1],[6,2]],2:[[6,1],[5,1],[5,2],[5,3],[6,3]],3:[[6,2],[5,3],[6,4]],4:[[6,3],[5,3],[5,4],[5,5],[6,5]],5:[[6,4],[5,5],[6,6]],6:[[6,5],[5,5],[5,6],[5,7],[6,7]],7:[[6,6],[5,7]]}};function getNeighbors(champion){const left=champion.hexagonPosition.left;const top=champion.hexagonPosition.top;if(adjacentHexagons[left]&&adjacentHexagons[left][top]){return adjacentHexagons[left][top];}return[];}function isAdjacent(champion1,champion2){const hex1=[champion1.hexagonPosition.left,champion1.hexagonPosition.top];const hex2=[champion2.hexagonPosition.left,champion2.hexagonPosition.top];const neighbors=getNeighbors({hexagonPosition:{left:hex1[0],top:hex1[1]}});return neighbors.some(neighbor=>neighbor[0]===hex2[0]&&neighbor[1]===hex2[1]);}function findShortestPath(champions,start,end,attackRange){const visited=new Set();const queue=[[start]];while(queue.length>0){const path=queue.shift();const currentHexagon=path[path.length-1];if(currentHexagon[0]!==undefined&&currentHexagon[0]!==null){// if (isAdjacent({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } }, end)) {\n//   return path;\n// }\nif(!visited.has(currentHexagon.toString())){visited.add(currentHexagon.toString());const neighbors=getNeighbors({hexagonPosition:{left:currentHexagon[0],top:currentHexagon[1]}});for(const neighbor of neighbors){const neighborStr=neighbor.toString();const isChampionOccupied=champions.some(c=>c.hexagonPosition.left===neighbor[0]&&c.hexagonPosition.top===neighbor[1]);if(!visited.has(neighborStr)&&!isChampionOccupied){// Check attack range\nif(attackRange===1){if(isAdjacent({hexagonPosition:{left:currentHexagon[0],top:currentHexagon[1]}},end)){return path;}}if(attackRange===2){if(isAdjacent({hexagonPosition:{left:neighbor[0],top:neighbor[1]}},end)){return path;}}else if(attackRange===3){const neighborNeighbors=getNeighbors({hexagonPosition:{left:neighbor[0],top:neighbor[1]}});if(neighborNeighbors.some(n=>isAdjacent({hexagonPosition:{left:n[0],top:n[1]}},end))){return path;}}else if(attackRange===4){const neighborNeighbors=getNeighbors({hexagonPosition:{left:neighbor[0],top:neighbor[1]}});const neighborNeighborNeighbors=[];for(const n of neighborNeighbors){neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition:{left:n[0],top:n[1]}}));}if(neighborNeighborNeighbors.some(n=>isAdjacent({hexagonPosition:{left:n[0],top:n[1]}},end))){return path;}}else if(attackRange===5){const neighborNeighbors=getNeighbors({hexagonPosition:{left:neighbor[0],top:neighbor[1]}});const neighborNeighborNeighbors=[];for(const n of neighborNeighbors){neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition:{left:n[0],top:n[1]}}));}const neighborNeighborNeighborNeighbors=[];for(const n of neighborNeighborNeighbors){neighborNeighborNeighborNeighbors.push(...getNeighbors({hexagonPosition:{left:n[0],top:n[1]}}));}if(neighborNeighborNeighborNeighbors.some(n=>isAdjacent({hexagonPosition:{left:n[0],top:n[1]}},end))){return path;}}const newPath=[...path,neighbor];queue.push(newPath);}}}}else{// if (isAdjacent(currentHexagon, end)) {\n//   return path;\n// }\nif(!visited.has(currentHexagon.toString())){visited.add(currentHexagon.toString());const neighbors=getNeighbors(currentHexagon);for(const neighbor of neighbors){const neighborStr=neighbor.toString();const isChampionOccupied=champions.some(c=>c.hexagonPosition.left===neighbor[0]&&c.hexagonPosition.top===neighbor[1]);if(!visited.has(neighborStr)&&!isChampionOccupied){// Check attack range\nif(attackRange===1){if(isAdjacent(currentHexagon,end)){return path;}}if(attackRange===2){if(isAdjacent({hexagonPosition:{left:neighbor[0],top:neighbor[1]}},end)){return path;}}else if(attackRange===3){const neighborNeighbors=getNeighbors({hexagonPosition:{left:neighbor[0],top:neighbor[1]}});if(neighborNeighbors.some(n=>isAdjacent({hexagonPosition:{left:n[0],top:n[1]}},end))){return path;}}else if(attackRange===4){const neighborNeighbors=getNeighbors({hexagonPosition:{left:neighbor[0],top:neighbor[1]}});const neighborNeighborNeighbors=[];for(const n of neighborNeighbors){neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition:{left:n[0],top:n[1]}}));}if(neighborNeighborNeighbors.some(n=>isAdjacent({hexagonPosition:{left:n[0],top:n[1]}},end))){return path;}}else if(attackRange===5){const neighborNeighbors=getNeighbors({hexagonPosition:{left:neighbor[0],top:neighbor[1]}});const neighborNeighborNeighbors=[];for(const n of neighborNeighbors){neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition:{left:n[0],top:n[1]}}));}const neighborNeighborNeighborNeighbors=[];for(const n of neighborNeighborNeighbors){neighborNeighborNeighborNeighbors.push(...getNeighbors({hexagonPosition:{left:n[0],top:n[1]}}));}if(neighborNeighborNeighborNeighbors.some(n=>isAdjacent({hexagonPosition:{left:n[0],top:n[1]}},end))){return path;}}const newPath=[...path,neighbor];queue.push(newPath);}}}}}return null;}function findClosestEnemy(userChampion,enemyChampions){let closestEnemy=null;let minDistance=Infinity;for(const enemyChampion of enemyChampions){const distance=findShortestPath(enemyChampions,{hexagonPosition:{left:userChampion.hexagonPosition.left,top:userChampion.hexagonPosition.top}},{hexagonPosition:{left:enemyChampion.hexagonPosition.left,top:enemyChampion.hexagonPosition.top}},userChampion.attackRange);if(distance&&distance.length<minDistance){minDistance=distance.length;closestEnemy=enemyChampion;}}return closestEnemy;}function Board(_ref){let{enemyChampionsList,userChampionsList}=_ref;const[isDragging,setDragging]=useState(false);const[enemyChampions,setEnemyChampions]=useState(enemyChampionsList);const[userChampions,setUserChampions]=useState(userChampionsList);const[draggedPlayer,setDraggedPlayer]=useState(null);const[dragStartIndex,setDragStartIndex]=useState(null);const[isCombatActive,setCombatActive]=useState(0);// const [combatIteration, setCombatIteration] = useState(0); // will implement later for overtime\nconst startCombat=()=>{setCombatActive(1);};const endCombat=()=>{setCombatActive(2);// console.log(\"combat ended\");\n};useEffect(()=>{if(isCombatActive===1){const allChampions=userChampions.concat(enemyChampions);// console.log('before champions', allChampions);\nconst updateChampionAtIndex=async index=>{const tempChampion=allChampions[index];var allChampionsProjectileIteration=0;const allProjectiles=tempChampion.projectiles;if(allProjectiles!==undefined&allProjectiles!==null&allProjectiles!==0){for(const projectile of allProjectiles){if(projectile.iterations===0){if(allChampions[index].health-projectile.damage<=0){const newProjectiles=allChampions[index].projectiles.filter((_,index)=>index!==allChampionsProjectileIteration);allChampions[index]={...allChampions[index],alive:false,projectiles:newProjectiles};console.log(\"\".concat(tempChampion.type,\" of \").concat(tempChampion.team,\" took \").concat(projectile.damage,\" damage and died.\"));break;}else{const newHealth=allChampions[index].health-projectile.damage;// if (projectile.effect !== null & projectile.effect.length !== 0) {\n//   for (const effect in projectile.effect) {\n//     if (effect.type === 'shred') {\n//     }\n//   }\n// }\nconsole.log(\"\".concat(tempChampion.type,\" of \").concat(tempChampion.team,\" took \").concat(projectile.damage,\" damage.\"));if(tempChampion.mana===null){const newProjectiles=allChampions[index].projectiles.filter((_,index)=>index!==allChampionsProjectileIteration);allChampions[index]={...allChampions[index],health:newHealth,projectiles:newProjectiles};}else{const newCurrentMana=Math.min(allChampions[index].totalMana,allChampions[index].mana+projectile.mana);const newProjectiles=allChampions[index].projectiles.filter((_,index)=>index!==allChampionsProjectileIteration);allChampions[index]={...allChampions[index],health:newHealth,mana:newCurrentMana,projectiles:newProjectiles};}}}else{var newProjectiles=allChampions[index].projectiles;const newProjectileIterations=projectile.iterations-1;newProjectiles[allChampionsProjectileIteration]={...projectile,iterations:newProjectileIterations};allChampions[index]={...allChampions[index],projectiles:newProjectiles};allChampionsProjectileIteration+=1;}}}const champion=allChampions[index];if(allChampions[index].alive){const isUserChampion=champion.team==='user';const closestEnemy=isUserChampion?findClosestEnemy(champion,enemyChampions):findClosestEnemy(champion,userChampions);if(closestEnemy){const shortestPath=findShortestPath(allChampions,champion,closestEnemy,champion.attackRange);// console.log('shortest path', shortestPath);\nif(shortestPath&&shortestPath.length>1){const targetHexagon=shortestPath[1];const targetPixelLeft=convertToPixels(targetHexagon[0],'left',targetHexagon[1]%2===1)-25;const targetPixelTop=convertToPixels(targetHexagon[1],'top',targetHexagon[1]%2===1)-25;if(champion.iterationsRemaining.move===0){const newIterationsRemaining={...champion.iterationsRemaining,move:champion.movementSpeed};allChampions[index]={...champion,hexagonPosition:{left:targetHexagon[0],top:targetHexagon[1]},currentPosition:{left:targetPixelLeft,top:targetPixelTop},iterationsRemaining:newIterationsRemaining};console.log(\"\".concat(champion.type,\" of \").concat(champion.team,\" moved.\"));}else{const newIterationsRemaining={...champion.iterationsRemaining,move:champion.iterationsRemaining.move-1};allChampions[index]={...champion,iterationsRemaining:newIterationsRemaining};}// console.log('updated champion', allChampions[index]);\n}else{if(champion.totalMana===null|champion.mana<champion.totalMana){if(champion.iterationsRemaining.attack===0){const postMitigationAttackDamage=(1-closestEnemy.armor/(100+closestEnemy.armor))*champion.attackDamage;const manaIncrement=Math.min(42.5,0.01*champion.attackDamage+0.07*postMitigationAttackDamage);var newCurrentMana=Math.min(closestEnemy.totalMana,closestEnemy.mana+manaIncrement);const newProjectile={damage:postMitigationAttackDamage,mana:newCurrentMana,iterations:champion.attackProjectileSpeed,effect:[]};const newProjectileList=[...closestEnemy.projectiles,newProjectile];allChampions[closestEnemy.index]={...closestEnemy,projectiles:newProjectileList};newCurrentMana=Math.min(champion.totalMana,champion.mana+10);const newIterationsRemaining={...champion.iterationsRemaining,attack:champion.attackSpeed};allChampions[index]={...champion,mana:newCurrentMana,iterationsRemaining:newIterationsRemaining};console.log(\"\".concat(champion.type,\" of \").concat(champion.team,\" fired an attack to \").concat(closestEnemy.type,\".\"));}else{const newIterationsRemaining={...champion.iterationsRemaining,attack:champion.iterationsRemaining.attack-1};allChampions[index]={...champion,iterationsRemaining:newIterationsRemaining};}}else if(champion.mana>=champion.totalMana){if(champion.iterationsRemaining.ability===0){const postMitigationAbilityDamage=(1-closestEnemy.magicResist/(100+closestEnemy.magicResist))*champion.abilityPower;const manaIncrement=Math.min(42.5,0.01*champion.attackDamage+0.07*postMitigationAbilityDamage);const newCurrentMana=Math.min(closestEnemy.totalMana,closestEnemy.mana+manaIncrement);const newProjectile={damage:postMitigationAbilityDamage,mana:newCurrentMana,iterations:champion.abilityProjectileSpeed,effect:[{type:'shred',iterations:60,strength:0.3}]};const newProjectileList=[...closestEnemy.projectiles,newProjectile];allChampions[closestEnemy.index]={...closestEnemy,projectiles:newProjectileList};const newIterationsRemaining={...champion.iterationsRemaining,ability:champion.abilityCastTime};allChampions[index]={...champion,mana:0,iterationsRemaining:newIterationsRemaining};console.log(\"\".concat(champion.type,\" of \").concat(champion.team,\" fired an ability to \").concat(closestEnemy.type,\".\"));}else{const newIterationsRemaining={...champion.iterationsRemaining,ability:champion.iterationsRemaining.ability-1};allChampions[index]={...champion,iterationsRemaining:newIterationsRemaining};}}}}}};const updateChampionsSequentially=async startTime=>{for(let index=0;index<allChampions.length;index++){await updateChampionAtIndex(index);}// console.log('after champions', allChampions);\nconst aliveChampions=allChampions.filter(x=>x.alive);const updatedUserChampions=[];const updatedEnemyChampions=[];var iteration=0;aliveChampions.forEach(champion=>{if(champion.team==='user'){champion={...champion,index:iteration};updatedUserChampions.push(champion);}else{champion={...champion,index:iteration};updatedEnemyChampions.push(champion);}iteration+=1;});const endTime=new Date();const timeDifference=endTime-startTime;const waitTime=ITERATION_CYCLE-timeDifference;if(waitTime>=0){await new Promise(resolve=>setTimeout(resolve,waitTime));console.log(\"\".concat(globalIteration,\" Complete w/ \").concat(waitTime+timeDifference,\" ms.\"));}else{console.log('ERROR! ITERATION CYCLE TIME NOT LONG ENOUGH!');}setUserChampions(updatedUserChampions);setEnemyChampions(updatedEnemyChampions);if(updatedUserChampions.length===0){endCombat();}else if(updatedEnemyChampions.length===0){endCombat();}};const startTime=new Date();updateChampionsSequentially(startTime);globalIteration+=1;}},[userChampions,isCombatActive,enemyChampions]);const areChampionsOverlapping=(champion1,champion2)=>{const dx=champion1.currentPosition.left-champion2.currentPosition.left;const dy=champion1.currentPosition.top-champion2.currentPosition.top;const distance=Math.sqrt(dx*dx+dy*dy);return distance<CIRCLE_DIAMETER;};const handleCircleDragStart=(event,player,index)=>{if(player==='enemy'){event.preventDefault();// prevent dragging for enemy circles\nreturn;}event.dataTransfer.setData('text/plain','champion');setDragging(true);setDraggedPlayer(player);setDragStartIndex(index);};const handleCircleDragEnd=()=>{setDragging(false);setDraggedPlayer(null);setDragStartIndex(null);};const handleDragOver=event=>{event.dataTransfer.effectAllowed='none';event.preventDefault();};const convertToPixels=(coordinate,leftOrTop,even)=>{if(leftOrTop==='left'){if(even){return 360+32.7+(coordinate+1)*2.95+coordinate*62.4+62.4/2;}return 360+(coordinate+1)*2.95+coordinate*62.4+62.4/2;}if(leftOrTop==='top'){return coordinate*20.3+coordinate*36+36;}};const convertToHexagons=(coordinate,leftOrTop,even)=>{if(leftOrTop==='left'){if(even){return Math.floor((coordinate-32.7-360-2.95-31.2)/(2.95+62.4));}return Math.floor((coordinate-2.95-31.2-360)/(2.95+62.4));}if(leftOrTop==='top'){return Math.floor((coordinate-36)/(20.3+36));}};const handleDrop=(event,hexagonCoordinates,player)=>{event.preventDefault();if(draggedPlayer==='enemy'){return;}if(isCombatActive!==0){event.preventDefault();return;}if(player==='user'&&dragStartIndex!==null){const hexagonCenterX=convertToPixels(hexagonCoordinates.left,'left',hexagonCoordinates.top%2===1);const hexagonCenterY=convertToPixels(hexagonCoordinates.top,'top',hexagonCoordinates.top%2===1);const targetHexagon={currentPosition:{left:hexagonCenterX-CIRCLE_DIAMETER/2,top:hexagonCenterY-CIRCLE_DIAMETER/2}};const overlappingIndex=userChampions.findIndex((champion,index)=>index!==dragStartIndex&&areChampionsOverlapping(champion,targetHexagon));if(overlappingIndex!==-1){setUserChampions(prevUserChampions=>{const updatedUserChampions=[...prevUserChampions];updatedUserChampions[overlappingIndex]={...prevUserChampions[overlappingIndex],hexagonPosition:{left:prevUserChampions[dragStartIndex].hexagonPosition.left,top:prevUserChampions[dragStartIndex].hexagonPosition.top},currentPosition:{left:prevUserChampions[dragStartIndex].currentPosition.left,top:prevUserChampions[dragStartIndex].currentPosition.top}};updatedUserChampions[dragStartIndex]={...prevUserChampions[dragStartIndex],hexagonPosition:{left:hexagonCoordinates.left,top:hexagonCoordinates.top},currentPosition:{left:targetHexagon.currentPosition.left,top:targetHexagon.currentPosition.top}};return updatedUserChampions;});}else{setUserChampions(prevUserChampions=>{const updatedUserChampions=[...prevUserChampions];updatedUserChampions[dragStartIndex]={...prevUserChampions[dragStartIndex],hexagonPosition:{left:hexagonCoordinates.left,top:hexagonCoordinates.top},currentPosition:{left:targetHexagon.currentPosition.left,top:targetHexagon.currentPosition.top},image:updatedUserChampions[dragStartIndex].image};return updatedUserChampions;});}}};const handleCircleDrop=(event,circleCoordinates,index)=>{event.preventDefault();if(draggedPlayer==='enemy'){return;}if(isCombatActive!==0){event.preventDefault();return;}if(circleCoordinates.top>=230&&dragStartIndex!==null){const targetChampion={currentPosition:{left:circleCoordinates.left,top:circleCoordinates.top}};const overlappingIndex=userChampions.findIndex((champion,index)=>index!==dragStartIndex&&areChampionsOverlapping(champion,targetChampion));if(overlappingIndex!==-1){setUserChampions(prevUserChampions=>{const updatedUserChampions=[...prevUserChampions];updatedUserChampions[overlappingIndex]={...prevUserChampions[overlappingIndex],hexagonPosition:{left:prevUserChampions[dragStartIndex].hexagonPosition.left,top:prevUserChampions[dragStartIndex].hexagonPosition.top},currentPosition:{left:prevUserChampions[dragStartIndex].currentPosition.left,top:prevUserChampions[dragStartIndex].currentPosition.top}};updatedUserChampions[dragStartIndex]={...prevUserChampions[dragStartIndex],hexagonPosition:{left:prevUserChampions[index].hexagonPosition.left,top:prevUserChampions[index].hexagonPosition.top},currentPosition:{left:targetChampion.currentPosition.left,top:targetChampion.currentPosition.top}};return updatedUserChampions;});}else{setUserChampions(prevUserChampions=>{const updatedUserChampions=[...prevUserChampions];updatedUserChampions[dragStartIndex]={...prevUserChampions[dragStartIndex],hexagonPosition:{left:prevUserChampions[index].hexagonPosition.left,top:prevUserChampions[index].hexagonPosition.top},currentPosition:{left:targetChampion.currentPosition.left,top:targetChampion.currentPosition.top},image:updatedUserChampions[dragStartIndex].image};return updatedUserChampions;});}}};return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',height:'100vh',width:'100%',backgroundColor:'#13293D',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',width:'100%',height:'80%'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"section left-section\",children:/*#__PURE__*/_jsx(\"button\",{onClick:startCombat,children:\"Start Combat\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"section center-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hex-row\",children:[enemyChampions.map((champion,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"circle-overlay \".concat(isDragging&&draggedPlayer==='enemy'?'dragging':''),style:{left:champion.currentPosition.left+'px',top:champion.currentPosition.top+'px'},draggable:true,onDragStart:e=>handleCircleDragStart(e,'enemy',index),onDragEnd:handleCircleDragEnd,onDragOver:e=>handleDragOver(e),onDrop:e=>handleCircleDrop(e,{left:champion.currentPosition.left,top:champion.currentPosition.top},index),children:/*#__PURE__*/_jsx(Champion,{team:'enemy',index:champion.index,hexagonPosition:champion.hexagonPosition,currentPosition:champion.currentPosition,image:champion.image,type:champion.type,starLevel:champion.starLevel,headliner:champion.headliner,items:champion.items,alive:champion.alive,attackRange:champion.attackRange,health:champion.health,attackDamage:champion.attackDamage,totalMana:champion.totalMana,mana:champion.mana,abilityPower:champion.abilityPower,armor:champion.armor,magicResist:champion.magicResist,castingAttack:champion.castingAttack,castingAbility:champion.castingAbility,projectiles:champion.projectiles,abilityCastTime:champion.abilityCastTime,movementSpeed:champion.movementSpeed,iterationsRemaining:champion.iterationsRemaining,attackProjectileSpeed:champion.attackProjectileSpeed,abilityProjectileSpeed:champion.abilityProjectileSpeed},index)},index)),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:0,top:0,even:0},'enemy'),hexagonCoordinates:{left:0,top:0,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:1,top:0,even:0},'enemy'),hexagonCoordinates:{left:1,top:0,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:2,top:0,even:0},'enemy'),hexagonCoordinates:{left:2,top:0,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:3,top:0,even:0},'enemy'),hexagonCoordinates:{left:3,top:0,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:4,top:0,even:0},'enemy'),hexagonCoordinates:{left:4,top:0,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:5,top:0,even:0},'enemy'),hexagonCoordinates:{left:5,top:0,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:6,top:0,even:0},'enemy'),hexagonCoordinates:{left:6,top:0,even:0}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hex-row even\",children:[/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:0,top:1,even:32.7},'enemy'),hexagonCoordinates:{left:0,top:1,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:1,top:1,even:32.7},'enemy'),hexagonCoordinates:{left:1,top:1,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:2,top:1,even:32.7},'enemy'),hexagonCoordinates:{left:2,top:1,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:3,top:1,even:32.7},'enemy'),hexagonCoordinates:{left:3,top:1,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:4,top:1,even:32.7},'enemy'),hexagonCoordinates:{left:4,top:1,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:5,top:1,even:32.7},'enemy'),hexagonCoordinates:{left:5,top:1,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:6,top:1,even:32.7},'enemy'),hexagonCoordinates:{left:6,top:1,even:32.7}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hex-row\",children:[/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:0,top:2,even:0},'enemy'),hexagonCoordinates:{left:0,top:2,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:1,top:2,even:0},'enemy'),hexagonCoordinates:{left:1,top:2,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:2,top:2,even:0},'enemy'),hexagonCoordinates:{left:2,top:2,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:3,top:2,even:0},'enemy'),hexagonCoordinates:{left:3,top:2,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:4,top:2,even:0},'enemy'),hexagonCoordinates:{left:4,top:2,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:5,top:2,even:0},'enemy'),hexagonCoordinates:{left:5,top:2,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:6,top:2,even:0},'enemy'),hexagonCoordinates:{left:6,top:2,even:0}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hex-row even\",children:[/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:0,top:3,even:32.7},'enemy'),hexagonCoordinates:{left:0,top:3,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:1,top:3,even:32.7},'enemy'),hexagonCoordinates:{left:1,top:3,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:2,top:3,even:32.7},'enemy'),hexagonCoordinates:{left:2,top:3,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:3,top:3,even:32.7},'enemy'),hexagonCoordinates:{left:3,top:3,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:4,top:3,even:32.7},'enemy'),hexagonCoordinates:{left:4,top:3,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:5,top:3,even:32.7},'enemy'),hexagonCoordinates:{left:5,top:3,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"enemy\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:6,top:3,even:32.7},'enemy'),hexagonCoordinates:{left:6,top:3,even:32.7}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hex-row\",children:[/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:0,top:4,even:0},'user'),hexagonCoordinates:{left:0,top:4,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:1,top:4,even:0},'user'),hexagonCoordinates:{left:1,top:4,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:2,top:4,even:0},'user'),hexagonCoordinates:{left:2,top:4,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:3,top:4,even:0},'user'),hexagonCoordinates:{left:3,top:4,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:4,top:4,even:0},'user'),hexagonCoordinates:{left:4,top:4,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:5,top:4,even:0},'user'),hexagonCoordinates:{left:5,top:4,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:6,top:4,even:0},'user'),hexagonCoordinates:{left:6,top:4,even:0}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hex-row even\",children:[/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:0,top:5,even:32.7},'user'),hexagonCoordinates:{left:0,top:5,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:1,top:5,even:32.7},'user'),hexagonCoordinates:{left:1,top:5,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:2,top:5,even:32.7},'user'),hexagonCoordinates:{left:2,top:5,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:3,top:5,even:32.7},'user'),hexagonCoordinates:{left:3,top:5,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:4,top:5,even:32.7},'user'),hexagonCoordinates:{left:4,top:5,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:5,top:5,even:32.7},'user'),hexagonCoordinates:{left:5,top:5,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:6,top:5,even:32.7},'user'),hexagonCoordinates:{left:6,top:5,even:32.7}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hex-row\",children:[/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:0,top:6,even:0},'user'),hexagonCoordinates:{left:0,top:6,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:1,top:6,even:0},'user'),hexagonCoordinates:{left:1,top:6,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:2,top:6,even:0},'user'),hexagonCoordinates:{left:2,top:6,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:3,top:6,even:0},'user'),hexagonCoordinates:{left:3,top:6,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:4,top:6,even:0},'user'),hexagonCoordinates:{left:4,top:6,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:5,top:6,even:0},'user'),hexagonCoordinates:{left:5,top:6,even:0}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:6,top:6,even:0},'user'),hexagonCoordinates:{left:6,top:6,even:0}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hex-row even\",children:[userChampions.map((champion,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"circle-overlay \".concat(isDragging&&draggedPlayer==='user'?'dragging':''),style:{left:champion.currentPosition.left+'px',top:champion.currentPosition.top+'px'},draggable:true,onDragStart:e=>handleCircleDragStart(e,'user',index),onDragEnd:handleCircleDragEnd,onDragOver:e=>handleDragOver(e),onDrop:e=>handleCircleDrop(e,{left:champion.currentPosition.left,top:champion.currentPosition.top},index),children:/*#__PURE__*/_jsx(Champion,{team:'user',index:champion.index,hexagonPosition:champion.hexagonPosition,currentPosition:champion.currentPosition,image:champion.image,type:champion.type,starLevel:champion.starLevel,headliner:champion.headliner,items:champion.items,alive:champion.alive,attackRange:champion.attackRange,health:champion.health,attackDamage:champion.attackDamage,totalMana:champion.totalMana,mana:champion.mana,abilityPower:champion.abilityPower,armor:champion.armor,magicResist:champion.magicResist,castingAttack:champion.castingAttack,castingAbility:champion.castingAbility,projectiles:champion.projectiles,abilityCastTime:champion.abilityCastTime,movementSpeed:champion.movementSpeed,iterationsRemaining:champion.iterationsRemaining,attackProjectileSpeed:champion.attackProjectileSpeed,abilityProjectileSpeed:champion.abilityProjectileSpeed},index)},index)),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:0,top:7,even:32.7},'user'),hexagonCoordinates:{left:0,top:7,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:1,top:7,even:32.7},'user'),hexagonCoordinates:{left:1,top:7,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:2,top:7,even:32.7},'user'),hexagonCoordinates:{left:2,top:7,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:3,top:7,even:32.7},'user'),hexagonCoordinates:{left:3,top:7,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:4,top:7,even:32.7},'user'),hexagonCoordinates:{left:4,top:7,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:5,top:7,even:32.7},'user'),hexagonCoordinates:{left:5,top:7,even:32.7}}),/*#__PURE__*/_jsx(Hexagon,{player:\"user\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,{left:6,top:7,even:32.7},'user'),hexagonCoordinates:{left:6,top:7,even:32.7}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section right-section\",children:[/*#__PURE__*/_jsx(DualButton,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"trait-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"trait-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"single-trait\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hexagon-trait\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"start\",style:{borderBottom:'13.5px solid #BD9A38'}}),/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#BD9A38',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(\"img\",{alt:\"breakout\",src:\"https://rerollcdn.com/icons/breakout.png\",style:{width:'35px',height:'35px'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"end\",style:{borderTop:'13.5px solid #BD9A38'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hexagon-trait\",style:{marginTop:'13.5px',marginLeft:'0px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#BD9A38',width:'31.2px',justifyContent:'center',alignItems:'center'},children:\"1\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"single-trait\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hexagon-trait\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"start\",style:{borderBottom:'13.5px solid #7D8F92'}}),/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#7D8F92',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(\"img\",{alt:\"breakout\",src:\"https://rerollcdn.com/icons/pentakill.png\",style:{width:'35px',height:'35px'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"end\",style:{borderTop:'13.5px solid #7D8F92'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hexagon-trait\",style:{marginTop:'13.5px',marginLeft:'0px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#7D8F92',width:'31.2px',justifyContent:'center',alignItems:'center'},children:\"5\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"trait-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"single-trait\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hexagon-trait\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"start\",style:{borderBottom:'13.5px solid #7D8F92'}}),/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#7D8F92',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(\"img\",{alt:\"breakout\",src:\"https://rerollcdn.com/icons/superfan.png\",style:{width:'35px',height:'35px'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"end\",style:{borderTop:'13.5px solid #7D8F92'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hexagon-trait\",style:{marginTop:'13.5px',marginLeft:'0px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#7D8F92',width:'31.2px',justifyContent:'center',alignItems:'center'},children:\"4\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"single-trait\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hexagon-trait\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"start\",style:{borderBottom:'13.5px solid #A0715E'}}),/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#A0715E',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(\"img\",{alt:\"breakout\",src:\"https://rerollcdn.com/icons/kda.png\",style:{width:'35px',height:'35px'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"end\",style:{borderTop:'13.5px solid #A0715E'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hexagon-trait\",style:{marginTop:'13.5px',marginLeft:'0px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#A0715E',width:'31.2px',justifyContent:'center',alignItems:'center'},children:\"3\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"trait-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"single-trait\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hexagon-trait\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"start\",style:{borderBottom:'13.5px solid #A0715E'}}),/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#A0715E',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(\"img\",{alt:\"breakout\",src:\"https://rerollcdn.com/icons/executioner.png\",style:{width:'35px',height:'35px'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"end\",style:{borderTop:'13.5px solid #A0715E'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hexagon-trait\",style:{marginTop:'13.5px',marginLeft:'0px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#A0715E',width:'31.2px',justifyContent:'center',alignItems:'center'},children:\"2\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"single-trait\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hexagon-trait\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"start\",style:{borderBottom:'13.5px solid #A0715E'}}),/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#A0715E',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(\"img\",{alt:\"breakout\",src:\"https://rerollcdn.com/icons/guardian.png\",style:{width:'35px',height:'35px'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"end\",style:{borderTop:'13.5px solid #A0715E'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hexagon-trait\",style:{marginTop:'13.5px',marginLeft:'0px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#A0715E',width:'31.2px',justifyContent:'center',alignItems:'center'},children:\"2\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"trait-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"single-trait\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hexagon-trait\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"start\",style:{borderBottom:'13.5px solid #A0715E'}}),/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#A0715E',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsx(\"img\",{alt:\"breakout\",src:\"https://rerollcdn.com/icons/sentinel.png\",style:{width:'35px',height:'35px'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"end\",style:{borderTop:'13.5px solid #A0715E'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hexagon-trait\",style:{marginTop:'13.5px',marginLeft:'0px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'#A0715E',width:'31.2px',justifyContent:'center',alignItems:'center'},children:\"2\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"single-trait\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hexagon-trait\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"start\",style:{borderBottom:'13.5px solid transparent'}}),/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'transparent',justifyContent:'center',alignItems:'center'}}),/*#__PURE__*/_jsx(\"div\",{className:\"end\",style:{borderTop:'13.5px solid transparent'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"hexagon-trait\",style:{marginTop:'13.5px',marginLeft:'0px'},children:/*#__PURE__*/_jsx(\"div\",{className:\"center\",style:{display:'flex',background:'transparent',width:'31.2px',justifyContent:'center',alignItems:'center'}})})]})]})]})]})]})});}export default Board;","map":{"version":3,"names":["React","useState","useEffect","Hexagon","Champion","DualButton","jsx","_jsx","jsxs","_jsxs","CIRCLE_DIAMETER","ITERATION_CYCLE","globalIteration","adjacentHexagons","getNeighbors","champion","left","hexagonPosition","top","isAdjacent","champion1","champion2","hex1","hex2","neighbors","some","neighbor","findShortestPath","champions","start","end","attackRange","visited","Set","queue","length","path","shift","currentHexagon","undefined","has","toString","add","neighborStr","isChampionOccupied","c","neighborNeighbors","n","neighborNeighborNeighbors","push","neighborNeighborNeighborNeighbors","newPath","findClosestEnemy","userChampion","enemyChampions","closestEnemy","minDistance","Infinity","enemyChampion","distance","Board","_ref","enemyChampionsList","userChampionsList","isDragging","setDragging","setEnemyChampions","userChampions","setUserChampions","draggedPlayer","setDraggedPlayer","dragStartIndex","setDragStartIndex","isCombatActive","setCombatActive","startCombat","endCombat","allChampions","concat","updateChampionAtIndex","index","tempChampion","allChampionsProjectileIteration","allProjectiles","projectiles","projectile","iterations","health","damage","newProjectiles","filter","_","alive","console","log","type","team","newHealth","mana","newCurrentMana","Math","min","totalMana","newProjectileIterations","isUserChampion","shortestPath","targetHexagon","targetPixelLeft","convertToPixels","targetPixelTop","iterationsRemaining","move","newIterationsRemaining","movementSpeed","currentPosition","attack","postMitigationAttackDamage","armor","attackDamage","manaIncrement","newProjectile","attackProjectileSpeed","effect","newProjectileList","attackSpeed","ability","postMitigationAbilityDamage","magicResist","abilityPower","abilityProjectileSpeed","strength","abilityCastTime","updateChampionsSequentially","startTime","aliveChampions","x","updatedUserChampions","updatedEnemyChampions","iteration","forEach","endTime","Date","timeDifference","waitTime","Promise","resolve","setTimeout","areChampionsOverlapping","dx","dy","sqrt","handleCircleDragStart","event","player","preventDefault","dataTransfer","setData","handleCircleDragEnd","handleDragOver","effectAllowed","coordinate","leftOrTop","even","convertToHexagons","floor","handleDrop","hexagonCoordinates","hexagonCenterX","hexagonCenterY","overlappingIndex","findIndex","prevUserChampions","image","handleCircleDrop","circleCoordinates","targetChampion","style","display","flexDirection","height","width","backgroundColor","alignItems","justifyContent","children","className","onClick","map","draggable","onDragStart","e","onDragEnd","onDragOver","onDrop","starLevel","headliner","items","castingAttack","castingAbility","borderBottom","background","alt","src","borderTop","marginTop","marginLeft"],"sources":["/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Board.css';\nimport Hexagon from './Hexagon';\nimport Champion from './Champion';\nimport DualButton from './DualButton';\n\nconst CIRCLE_DIAMETER = 50;\nconst ITERATION_CYCLE = 50;\nvar globalIteration = 0;\n\nconst adjacentHexagons = {\n  0: { \n    0: [[0, 1], [1, 0]],\n    1: [[0, 0], [1, 0], [1, 1], [1, 2], [0, 2]],\n    2: [[0, 1], [1, 2], [0, 3]],\n    3: [[0, 2], [1, 2], [1, 3], [1, 4], [0, 4]],\n    4: [[0, 3], [1, 4], [0, 5]],\n    5: [[0, 4], [1, 4], [1, 5], [1, 6], [0, 6]],\n    6: [[0, 5], [1, 6], [0, 7]],\n    7: [[0, 6], [1, 6], [1, 7]],\n  },\n  1: { \n    0: [[0, 0], [0, 1], [1, 1], [2, 0]],\n    1: [[1, 0], [0, 1], [1, 2], [2, 2], [2, 1], [2, 0]],\n    2: [[0, 1], [0, 2], [0, 3], [1, 3], [2, 2], [1, 1]],\n    3: [[1, 2], [0, 3], [1, 4], [2, 4], [2, 3], [2, 2]],\n    4: [[0, 3], [0, 4], [0, 5], [1, 5], [2, 4], [1, 3]],\n    5: [[1, 4], [0, 5], [1, 6], [2, 6], [2, 5], [2, 4]],\n    6: [[0, 5], [0, 6], [0, 7], [1, 7], [2, 6], [1, 5]],\n    7: [[1, 6], [0, 7], [2, 6], [2, 7]],\n  },\n  2: { \n    0: [[1, 0], [1, 1], [2, 1], [3, 0]],\n    1: [[2, 0], [1, 1], [2, 2], [3, 2], [3, 1], [3, 0]],\n    2: [[1, 1], [1, 2], [1, 3], [2, 3], [3, 2], [2, 1]],\n    3: [[2, 2], [1, 3], [2, 4], [3, 4], [3, 3], [3, 2]],\n    4: [[1, 3], [1, 4], [1, 5], [2, 5], [3, 4], [2, 3]],\n    5: [[2, 4], [1, 5], [2, 6], [3, 6], [3, 5], [3, 4]],\n    6: [[1, 5], [1, 6], [1, 7], [2, 7], [3, 6], [2, 5]],\n    7: [[2, 6], [1, 7], [3, 6], [3, 7]],\n  },\n  3: { \n    0: [[2, 0], [2, 1], [3, 1], [4, 0]],\n    1: [[3, 0], [2, 1], [3, 2], [4, 2], [4, 1], [4, 0]],\n    2: [[2, 1], [2, 2], [2, 3], [3, 3], [4, 2], [3, 1]],\n    3: [[3, 2], [2, 3], [3, 4], [4, 4], [4, 3], [4, 2]],\n    4: [[2, 3], [2, 4], [2, 5], [3, 5], [4, 4], [3, 3]],\n    5: [[3, 4], [2, 5], [3, 6], [4, 6], [4, 5], [4, 4]],\n    6: [[2, 5], [2, 6], [2, 7], [3, 7], [4, 6], [3, 5]],\n    7: [[3, 6], [2, 7], [4, 6], [4, 7]],\n  },\n  4: { \n    0: [[3, 0], [3, 1], [4, 1], [5, 0]],\n    1: [[4, 0], [3, 1], [4, 2], [5, 2], [5, 1], [5, 0]],\n    2: [[3, 1], [3, 2], [3, 3], [4, 3], [5, 2], [4, 1]],\n    3: [[4, 2], [3, 3], [4, 4], [5, 4], [5, 3], [5, 2]],\n    4: [[3, 3], [3, 4], [3, 5], [4, 5], [5, 4], [4, 3]],\n    5: [[4, 4], [3, 5], [4, 6], [5, 6], [5, 5], [5, 4]],\n    6: [[3, 5], [3, 6], [3, 7], [4, 7], [5, 6], [4, 5]],\n    7: [[4, 6], [3, 7], [5, 6], [5, 7]],\n  },\n  5: { \n    0: [[4, 0], [4, 1], [5, 1], [6, 0]],\n    1: [[5, 0], [4, 1], [5, 2], [6, 2], [6, 1], [6, 0]],\n    2: [[4, 1], [4, 2], [4, 3], [5, 3], [6, 2], [5, 1]],\n    3: [[5, 2], [4, 3], [5, 4], [6, 4], [6, 3], [6, 2]],\n    4: [[4, 3], [4, 4], [4, 5], [5, 5], [6, 4], [5, 3]],\n    5: [[5, 4], [4, 5], [5, 6], [6, 6], [6, 5], [6, 4]],\n    6: [[4, 5], [4, 6], [4, 7], [5, 7], [6, 6], [5, 5]],\n    7: [[5, 6], [4, 7], [6, 6], [6, 7]],\n  },\n  6: { \n    0: [[5, 0], [5, 1], [6, 1]],\n    1: [[6, 0], [5, 1], [6, 2]],\n    2: [[6, 1], [5, 1], [5, 2], [5, 3], [6, 3]],\n    3: [[6, 2], [5, 3], [6, 4]],\n    4: [[6, 3], [5, 3], [5, 4], [5, 5], [6, 5]],\n    5: [[6, 4], [5, 5], [6, 6]],\n    6: [[6, 5], [5, 5], [5, 6], [5, 7], [6, 7]],\n    7: [[6, 6], [5, 7]],\n  },\n}\n\nfunction getNeighbors(champion) {\n  const left = champion.hexagonPosition.left;\n  const top = champion.hexagonPosition.top;\n  if (adjacentHexagons[left] && adjacentHexagons[left][top]) {\n    return adjacentHexagons[left][top];\n  }\n\n  return [];\n}\n\nfunction isAdjacent(champion1, champion2) {\n  const hex1 = [champion1.hexagonPosition.left, champion1.hexagonPosition.top];\n  const hex2 = [champion2.hexagonPosition.left, champion2.hexagonPosition.top];\n  const neighbors = getNeighbors({ hexagonPosition: { left: hex1[0], top: hex1[1] } });\n  \n  return neighbors.some(neighbor => neighbor[0] === hex2[0] && neighbor[1] === hex2[1]);\n}\n\nfunction findShortestPath(champions, start, end, attackRange) {\n  const visited = new Set();\n  const queue = [[start]];\n  \n  while (queue.length > 0) {\n    const path = queue.shift();\n    const currentHexagon = path[path.length - 1];\n\n    if (currentHexagon[0] !== undefined && currentHexagon[0] !== null) {\n      // if (isAdjacent({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } }, end)) {\n      //   return path;\n      // }\n\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n  \n        const neighbors = getNeighbors({hexagonPosition: {left: currentHexagon[0], top: currentHexagon[1]}});\n        \n        for (const neighbor of neighbors) {\n  \n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n  \n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n          \n            // Check attack range\n            if (attackRange === 1) {\n              if (isAdjacent({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } }, end)) {\n                return path;\n              }\n            }\n            if (attackRange === 2) {\n              if (isAdjacent({hexagonPosition: {left: neighbor[0], top: neighbor[1]}}, end)) {\n                return path;\n              }\n            } else if (attackRange === 3) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              if (neighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path; \n              }\n            } else if (attackRange === 4) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}})); \n              }\n              if (neighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            } else if (attackRange === 5) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              const neighborNeighborNeighborNeighbors = [];\n              for (const n of neighborNeighborNeighbors) {\n                neighborNeighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              if (neighborNeighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            }\n  \n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    } else {\n      // if (isAdjacent(currentHexagon, end)) {\n      //   return path;\n      // }\n\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n  \n        const neighbors = getNeighbors(currentHexagon);\n        \n        for (const neighbor of neighbors) {\n  \n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n  \n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n          \n            // Check attack range\n            if (attackRange === 1) {\n              if (isAdjacent(currentHexagon, end)) {\n                return path;\n              }\n            }\n            if (attackRange === 2) {\n              if (isAdjacent({hexagonPosition: {left: neighbor[0], top: neighbor[1]}}, end)) {\n                return path;\n              }\n            } else if (attackRange === 3) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              if (neighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path; \n              }\n            } else if (attackRange === 4) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}})); \n              }\n              if (neighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            } else if (attackRange === 5) {\n              const neighborNeighbors = getNeighbors({hexagonPosition: {left: neighbor[0], top: neighbor[1]}});\n              const neighborNeighborNeighbors = [];\n              for (const n of neighborNeighbors) {\n                neighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              const neighborNeighborNeighborNeighbors = [];\n              for (const n of neighborNeighborNeighbors) {\n                neighborNeighborNeighborNeighbors.push(...getNeighbors({hexagonPosition: {left: n[0], top: n[1]}}));\n              }\n              if (neighborNeighborNeighborNeighbors.some(n => isAdjacent({hexagonPosition: {left: n[0], top: n[1]}}, end))) {\n                return path;\n              }\n            }\n  \n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n\nfunction findClosestEnemy(userChampion, enemyChampions) {\n  let closestEnemy = null;\n  let minDistance = Infinity;\n\n  for (const enemyChampion of enemyChampions) {\n    const distance = findShortestPath(\n      enemyChampions,\n      { hexagonPosition: { left: userChampion.hexagonPosition.left, top: userChampion.hexagonPosition.top } },\n      { hexagonPosition: { left: enemyChampion.hexagonPosition.left, top: enemyChampion.hexagonPosition.top } },\n      userChampion.attackRange\n    );\n    if (distance && distance.length < minDistance) {\n      minDistance = distance.length;\n      closestEnemy = enemyChampion;\n    }\n  }\n\n  return closestEnemy;\n}\n\nfunction Board({ enemyChampionsList, userChampionsList }) {\n  const [isDragging, setDragging] = useState(false);\n  const [enemyChampions, setEnemyChampions] = useState(enemyChampionsList);\n  const [userChampions, setUserChampions] = useState(userChampionsList);\n  const [draggedPlayer, setDraggedPlayer] = useState(null);\n  const [dragStartIndex, setDragStartIndex] = useState(null);\n  const [isCombatActive, setCombatActive] = useState(0);\n  // const [combatIteration, setCombatIteration] = useState(0); // will implement later for overtime\n\n  const startCombat = () => {\n    setCombatActive(1);\n  }\n\n  const endCombat = () => {\n    setCombatActive(2);\n    // console.log(\"combat ended\");\n  }\n\n  useEffect(() => {\n    if (isCombatActive === 1) {\n      const allChampions = userChampions.concat(enemyChampions);\n      // console.log('before champions', allChampions);\n  \n      const updateChampionAtIndex = async (index) => {\n        const tempChampion = allChampions[index];\n        \n        var allChampionsProjectileIteration = 0;\n        const allProjectiles = tempChampion.projectiles;\n        if (allProjectiles !== undefined & allProjectiles !== null & allProjectiles !== 0) {\n          for (const projectile of allProjectiles) {\n            if (projectile.iterations === 0) {\n              if ((allChampions[index].health - projectile.damage) <= 0) {\n                const newProjectiles = allChampions[index].projectiles.filter((_, index) => index !== allChampionsProjectileIteration);\n                allChampions[index] = { ...allChampions[index], alive: false, projectiles: newProjectiles };\n                console.log(`${tempChampion.type} of ${tempChampion.team} took ${projectile.damage} damage and died.`);\n                break;\n              } else {\n                const newHealth = allChampions[index].health - projectile.damage;\n                // if (projectile.effect !== null & projectile.effect.length !== 0) {\n                //   for (const effect in projectile.effect) {\n                //     if (effect.type === 'shred') {\n                      \n                //     }\n                //   }\n                // }\n                console.log(`${tempChampion.type} of ${tempChampion.team} took ${projectile.damage} damage.`);\n                if (tempChampion.mana === null) {\n                  const newProjectiles = allChampions[index].projectiles.filter((_, index) => index !== allChampionsProjectileIteration);\n                  allChampions[index] = { ...allChampions[index], health: newHealth, projectiles: newProjectiles };\n                } else {\n                  const newCurrentMana = Math.min(allChampions[index].totalMana, allChampions[index].mana + projectile.mana);\n                  const newProjectiles = allChampions[index].projectiles.filter((_, index) => index !== allChampionsProjectileIteration);\n                  allChampions[index] = { ...allChampions[index], health: newHealth, mana: newCurrentMana, projectiles: newProjectiles };\n                } \n              }\n            } else {\n              var newProjectiles = allChampions[index].projectiles;\n              const newProjectileIterations = projectile.iterations - 1;\n              newProjectiles[allChampionsProjectileIteration] = { ...projectile, iterations: newProjectileIterations }\n              allChampions[index] = { ...allChampions[index], projectiles: newProjectiles };\n              allChampionsProjectileIteration += 1;\n            }\n          }\n        }\n        const champion = allChampions[index];\n\n        if (allChampions[index].alive) {\n          const isUserChampion = champion.team === 'user';\n          const closestEnemy = isUserChampion ? findClosestEnemy(champion, enemyChampions) : findClosestEnemy(champion, userChampions);\n    \n          if (closestEnemy) {\n            const shortestPath = findShortestPath(allChampions, champion, closestEnemy, champion.attackRange);\n            // console.log('shortest path', shortestPath);\n    \n            if (shortestPath && shortestPath.length > 1) {\n              const targetHexagon = shortestPath[1];\n              const targetPixelLeft = convertToPixels(targetHexagon[0], 'left', targetHexagon[1] % 2 === 1) - 25;\n              const targetPixelTop = convertToPixels(targetHexagon[1], 'top', targetHexagon[1] % 2 === 1) - 25;\n    \n              if (champion.iterationsRemaining.move === 0) {\n                const newIterationsRemaining = { ...champion.iterationsRemaining, move: champion.movementSpeed };\n                allChampions[index] = {\n                  ...champion,\n                  hexagonPosition: { left: targetHexagon[0], top: targetHexagon[1] },\n                  currentPosition: { left: targetPixelLeft, top: targetPixelTop },\n                  iterationsRemaining: newIterationsRemaining, \n                };\n                console.log(`${champion.type} of ${champion.team} moved.`);\n              } else {\n                const newIterationsRemaining = { ...champion.iterationsRemaining, move: champion.iterationsRemaining.move - 1 };\n                allChampions[index] = {\n                  ...champion,\n                  iterationsRemaining: newIterationsRemaining, \n                };\n              }\n    \n              // console.log('updated champion', allChampions[index]);\n            } else {\n              if (champion.totalMana === null | champion.mana < champion.totalMana) {\n                if (champion.iterationsRemaining.attack === 0) {\n                  const postMitigationAttackDamage = (1 - (closestEnemy.armor / (100 + closestEnemy.armor))) * champion.attackDamage;\n                  const manaIncrement = Math.min(42.5, (0.01 * champion.attackDamage) + (0.07 * postMitigationAttackDamage))\n                  var newCurrentMana = Math.min(closestEnemy.totalMana, closestEnemy.mana + manaIncrement)\n                  const newProjectile = { damage: postMitigationAttackDamage, mana: newCurrentMana, iterations: champion.attackProjectileSpeed, effect: [] }\n                  const newProjectileList = [...closestEnemy.projectiles, newProjectile];\n                  allChampions[closestEnemy.index] = { ...closestEnemy, projectiles: newProjectileList };\n\n                  newCurrentMana = Math.min(champion.totalMana, champion.mana + 10);\n                  const newIterationsRemaining = { ...champion.iterationsRemaining, attack: champion.attackSpeed };\n                  allChampions[index] = { ...champion, mana: newCurrentMana, iterationsRemaining: newIterationsRemaining };\n                  console.log(`${champion.type} of ${champion.team} fired an attack to ${closestEnemy.type}.`);\n                } else {\n                  const newIterationsRemaining = { ...champion.iterationsRemaining, attack: champion.iterationsRemaining.attack - 1 };\n                  allChampions[index] = {\n                    ...champion,\n                    iterationsRemaining: newIterationsRemaining, \n                  };\n                }\n              } else if (champion.mana >= champion.totalMana) {\n                if (champion.iterationsRemaining.ability === 0) {\n                  const postMitigationAbilityDamage = (1 - (closestEnemy.magicResist / (100 + closestEnemy.magicResist))) * champion.abilityPower;\n                  const manaIncrement = Math.min(42.5, (0.01 * champion.attackDamage) + (0.07 * postMitigationAbilityDamage))\n                  const newCurrentMana = Math.min(closestEnemy.totalMana, closestEnemy.mana + manaIncrement)\n                  const newProjectile = { damage: postMitigationAbilityDamage, mana: newCurrentMana, iterations: champion.abilityProjectileSpeed, effect: [{ type: 'shred', iterations: 60, strength: 0.3 }] }\n                  const newProjectileList = [...closestEnemy.projectiles, newProjectile];\n                  allChampions[closestEnemy.index] = { ...closestEnemy, projectiles: newProjectileList };\n\n                  const newIterationsRemaining = { ...champion.iterationsRemaining, ability: champion.abilityCastTime };\n                  allChampions[index] = { ...champion, mana: 0, iterationsRemaining: newIterationsRemaining };\n                  console.log(`${champion.type} of ${champion.team} fired an ability to ${closestEnemy.type}.`);\n                } else {  \n                  const newIterationsRemaining = { ...champion.iterationsRemaining, ability: champion.iterationsRemaining.ability - 1 };\n                  allChampions[index] = {\n                    ...champion,\n                    iterationsRemaining: newIterationsRemaining, \n                  };\n                }\n              }\n            }\n          }\n        }\n      };\n  \n      const updateChampionsSequentially = async (startTime) => {\n        for (let index = 0; index < allChampions.length; index++) {\n          await updateChampionAtIndex(index);\n        }\n        // console.log('after champions', allChampions);\n\n        const aliveChampions = allChampions.filter(x => x.alive); \n\n        const updatedUserChampions = [];\n        const updatedEnemyChampions = [];\n        var iteration = 0;\n\n        aliveChampions.forEach(champion => {\n          if (champion.team === 'user') {\n            champion = {\n              ...champion, index: iteration\n            };\n            updatedUserChampions.push(champion);\n          } else {\n            champion = {\n              ...champion, index: iteration\n            };\n            updatedEnemyChampions.push(champion);\n          }\n          iteration += 1;\n        });\n        \n        const endTime = new Date();\n        const timeDifference = endTime - startTime;\n        const waitTime = ITERATION_CYCLE - timeDifference;\n        if (waitTime >= 0) {\n          await new Promise(resolve => setTimeout(resolve, waitTime));    \n          console.log(`${globalIteration} Complete w/ ${waitTime + timeDifference} ms.`);\n        } else {\n          console.log('ERROR! ITERATION CYCLE TIME NOT LONG ENOUGH!');\n        }\n\n        setUserChampions(updatedUserChampions);\n        setEnemyChampions(updatedEnemyChampions);\n\n        if (updatedUserChampions.length === 0) {\n          endCombat();\n        } else if (updatedEnemyChampions.length === 0) {\n          endCombat();\n        }\n      };\n      \n      const startTime = new Date();\n      updateChampionsSequentially(startTime);\n      globalIteration += 1;\n    }\n  }, [userChampions, isCombatActive, enemyChampions]);\n\n  const areChampionsOverlapping = (champion1, champion2) => {\n    const dx = champion1.currentPosition.left - champion2.currentPosition.left;\n    const dy = champion1.currentPosition.top - champion2.currentPosition.top;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < CIRCLE_DIAMETER; \n  };\n\n  const handleCircleDragStart = (event, player, index) => {\n    if (player === 'enemy') {\n      event.preventDefault(); // prevent dragging for enemy circles\n      return;\n    }\n\n    event.dataTransfer.setData('text/plain', 'champion'); \n    setDragging(true);\n    setDraggedPlayer(player);\n    setDragStartIndex(index);\n  };\n\n  const handleCircleDragEnd = () => {\n    setDragging(false);\n    setDraggedPlayer(null);\n    setDragStartIndex(null);\n  };\n\n  const handleDragOver = (event) => {\n    event.dataTransfer.effectAllowed = 'none';\n    event.preventDefault();\n  };\n\n  const convertToPixels = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return 360 + 32.7 + ((coordinate + 1) * 2.95) + (coordinate * 62.4) + 62.4 / 2;\n      }\n      return 360 + ((coordinate + 1) * 2.95) + (coordinate * 62.4) + 62.4 / 2;\n    }\n    if (leftOrTop === 'top') {\n      return (coordinate * 20.3) + (coordinate * 36) + 36;\n    }\n  }\n\n  const convertToHexagons = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return Math.floor((coordinate - 32.7 - 360 - 2.95 - 31.2) / (2.95 + 62.4));\n      }\n      return Math.floor((coordinate - 2.95 - 31.2 - 360) / (2.95 + 62.4));\n    }\n    if (leftOrTop === 'top') {\n      return Math.floor((coordinate - 36) / (20.3 + 36));\n    }\n  }\n\n  const handleDrop = (event, hexagonCoordinates, player) => {\n    event.preventDefault();\n\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive !== 0) {\n      event.preventDefault();\n      return;\n    }\n    if (player === 'user' && dragStartIndex !== null) {\n      const hexagonCenterX = convertToPixels(hexagonCoordinates.left, 'left', hexagonCoordinates.top % 2 === 1);\n      const hexagonCenterY = convertToPixels(hexagonCoordinates.top, 'top', hexagonCoordinates.top % 2 === 1);\n\n      const targetHexagon = {\n        currentPosition: {\n          left: hexagonCenterX - (CIRCLE_DIAMETER / 2),\n          top: hexagonCenterY - (CIRCLE_DIAMETER / 2)\n        }\n      };\n\n      const overlappingIndex = userChampions.findIndex(\n        (champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetHexagon)\n      );\n\n      if (overlappingIndex !== -1) {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex], \n            hexagonPosition: { left: prevUserChampions[dragStartIndex].hexagonPosition.left, top: prevUserChampions[dragStartIndex].hexagonPosition.top },\n            currentPosition: { left: prevUserChampions[dragStartIndex].currentPosition.left, top: prevUserChampions[dragStartIndex].currentPosition.top }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: hexagonCoordinates.left, top: hexagonCoordinates.top },\n            currentPosition: { left: targetHexagon.currentPosition.left, top: targetHexagon.currentPosition.top }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: hexagonCoordinates.left, top: hexagonCoordinates.top },\n            currentPosition: { left: targetHexagon.currentPosition.left, top: targetHexagon.currentPosition.top },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n\n  const handleCircleDrop = (event, circleCoordinates, index) => {\n    event.preventDefault();\n\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive !== 0) {\n      event.preventDefault();\n      return;\n    }\n    if (circleCoordinates.top >= 230 && dragStartIndex !== null) {\n      const targetChampion = {\n        currentPosition: {\n          left: circleCoordinates.left,\n          top: circleCoordinates.top\n        }\n      };\n\n      const overlappingIndex = userChampions.findIndex(\n        (champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetChampion)\n      );\n\n      if (overlappingIndex !== -1) {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex], \n            hexagonPosition: { left: prevUserChampions[dragStartIndex].hexagonPosition.left, top: prevUserChampions[dragStartIndex].hexagonPosition.top },\n            currentPosition: { left: prevUserChampions[dragStartIndex].currentPosition.left, top: prevUserChampions[dragStartIndex].currentPosition.top }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: prevUserChampions[index].hexagonPosition.left, top: prevUserChampions[index].hexagonPosition.top },\n            currentPosition: { left: targetChampion.currentPosition.left, top: targetChampion.currentPosition.top }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: prevUserChampions[index].hexagonPosition.left, top: prevUserChampions[index].hexagonPosition.top },\n            currentPosition: { left: targetChampion.currentPosition.left, top: targetChampion.currentPosition.top },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', height: '100vh', width: '100%', backgroundColor: '#13293D', alignItems: 'center', justifyContent: 'center' }}>\n      <div style={{ display: 'flex', flexDirection: 'row', width: '100%', height: '80%' }}>\n        <div className='section left-section'>\n          <button onClick={startCombat}>Start Combat</button>\n        </div>\n        <div className='section center-section'>\n          <div className='hex-row'>\n            {enemyChampions.map((champion, index) => (\n              <div\n                key={index}\n                className={`circle-overlay ${isDragging && draggedPlayer === 'enemy' ? 'dragging' : ''}`}\n                style={{ left: champion.currentPosition.left + 'px', top: champion.currentPosition.top + 'px' }}\n                draggable\n                onDragStart={(e) => handleCircleDragStart(e, 'enemy', index)}\n                onDragEnd={handleCircleDragEnd}\n                onDragOver={(e) => handleDragOver(e)}\n                onDrop={(e) => handleCircleDrop(e, { left: champion.currentPosition.left, top: champion.currentPosition.top }, index)}\n              >\n                <Champion\n                  key={index}\n                  team={'enemy'}\n                  index={champion.index}\n                  hexagonPosition={champion.hexagonPosition}\n                  currentPosition={champion.currentPosition}\n                  image={champion.image}\n                  type={champion.type}\n                  starLevel={champion.starLevel}\n                  headliner={champion.headliner}\n                  items={champion.items}\n                  alive={champion.alive}\n                  attackRange={champion.attackRange}\n                  health={champion.health}\n                  attackDamage={champion.attackDamage}\n                  totalMana={champion.totalMana}\n                  mana={champion.mana}\n                  abilityPower={champion.abilityPower}\n                  armor={champion.armor}\n                  magicResist={champion.magicResist}\n                  castingAttack={champion.castingAttack}\n                  castingAbility={champion.castingAbility}\n                  projectiles={champion.projectiles}\n                  abilityCastTime={champion.abilityCastTime}\n                  movementSpeed={champion.movementSpeed}\n                  iterationsRemaining={champion.iterationsRemaining}\n                  attackProjectileSpeed={champion.attackProjectileSpeed}\n                  abilityProjectileSpeed={champion.abilityProjectileSpeed}\n                ></Champion>\n              </div>\n            ))}\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 0, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 0, even: 0 }}/>\n          </div>\n          <div className='hex-row even'>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 1, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 1, even: 32.7 }}/>\n          </div>\n          <div className='hex-row'> \n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 2, even: 0 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 2, even: 0 }}/>\n          </div>\n          <div className='hex-row even'>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 3, even: 32.7 }}/>\n            <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 3, even: 32.7 }}/>\n          </div>\n          <div className='hex-row'>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 0, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 1, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 2, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 3, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 4, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 5, top: 4, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 6, top: 4, even: 0 }}/>\n          </div>\n          <div className='hex-row even'>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 0, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 1, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 2, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 3, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 4, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 5, top: 5, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 6, top: 5, even: 32.7 }}/>\n          </div>\n          <div className='hex-row'>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 0, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 1, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 2, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 3, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 4, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 5, top: 6, even: 0 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 6, top: 6, even: 0 }}/>\n          </div>\n          <div className='hex-row even'>\n            {userChampions.map((champion, index) => (\n              <div\n                key={index}\n                className={`circle-overlay ${isDragging && draggedPlayer === 'user' ? 'dragging' : ''}`}\n                style={{ left: champion.currentPosition.left + 'px', top: champion.currentPosition.top + 'px' }}\n                draggable\n                onDragStart={(e) => handleCircleDragStart(e, 'user', index)}\n                onDragEnd={handleCircleDragEnd}\n                onDragOver={(e) => handleDragOver(e)}\n                onDrop={(e) => handleCircleDrop(e, { left: champion.currentPosition.left, top: champion.currentPosition.top }, index)}\n              >\n                <Champion\n                  key={index}\n                  team={'user'}\n                  index={champion.index}\n                  hexagonPosition={champion.hexagonPosition}\n                  currentPosition={champion.currentPosition}\n                  image={champion.image}\n                  type={champion.type}\n                  starLevel={champion.starLevel}\n                  headliner={champion.headliner}\n                  items={champion.items}\n                  alive={champion.alive}\n                  attackRange={champion.attackRange}\n                  health={champion.health}\n                  attackDamage={champion.attackDamage}\n                  totalMana={champion.totalMana}\n                  mana={champion.mana}\n                  abilityPower={champion.abilityPower}\n                  armor={champion.armor}\n                  magicResist={champion.magicResist}\n                  castingAttack={champion.castingAttack}\n                  castingAbility={champion.castingAbility}\n                  projectiles={champion.projectiles}\n                  abilityCastTime={champion.abilityCastTime}\n                  movementSpeed={champion.movementSpeed}\n                  iterationsRemaining={champion.iterationsRemaining}\n                  attackProjectileSpeed={champion.attackProjectileSpeed}\n                  abilityProjectileSpeed={champion.abilityProjectileSpeed}\n                ></Champion>\n              </div>\n            ))}\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 0, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 1, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 2, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 3, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 4, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 5, top: 7, even: 32.7 }}/>\n            <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 6, top: 7, even: 32.7 }}/>\n          </div>\n        </div>\n        <div className='section right-section'>\n          <DualButton />\n          <div className='trait-section'>\n            <div className='trait-row'>\n              <div className='single-trait'>\n                <div className='hexagon-trait'>\n                  <div className=\"start\" style={{ borderBottom: '13.5px solid #BD9A38' }}></div>\n                  <div className=\"center\" style={{ display: 'flex', background: '#BD9A38', justifyContent: 'center', alignItems: 'center' }}>\n                    <img alt='breakout' src='https://rerollcdn.com/icons/breakout.png' style={{ width: '35px', height: '35px'}}></img>\n                  </div>\n                  <div className=\"end\" style={{ borderTop: '13.5px solid #BD9A38' }}></div>\n                </div>\n                <div className='hexagon-trait' style={{ marginTop: '13.5px', marginLeft: '0px' }}>\n                  <div className=\"center\" style={{ display: 'flex', background: '#BD9A38', width: '31.2px', justifyContent: 'center', alignItems: 'center' }}>1</div>\n                </div>\n              </div>\n              <div className='single-trait'>\n                <div className='hexagon-trait'>\n                  <div className=\"start\" style={{ borderBottom: '13.5px solid #7D8F92' }}></div>\n                  <div className=\"center\" style={{ display: 'flex', background: '#7D8F92', justifyContent: 'center', alignItems: 'center' }}>\n                    <img alt='breakout' src='https://rerollcdn.com/icons/pentakill.png' style={{ width: '35px', height: '35px'}}></img>\n                  </div>\n                  <div className=\"end\" style={{ borderTop: '13.5px solid #7D8F92' }}></div>\n                </div>\n                <div className='hexagon-trait' style={{ marginTop: '13.5px', marginLeft: '0px' }}>\n                  <div className=\"center\" style={{ display: 'flex', background: '#7D8F92', width: '31.2px', justifyContent: 'center', alignItems: 'center' }}>5</div>\n                </div>\n              </div>\n            </div>\n            <div className='trait-row'>\n              <div className='single-trait'>\n                <div className='hexagon-trait'>\n                  <div className=\"start\" style={{ borderBottom: '13.5px solid #7D8F92' }}></div>\n                  <div className=\"center\" style={{ display: 'flex', background: '#7D8F92', justifyContent: 'center', alignItems: 'center' }}>\n                    <img alt='breakout' src='https://rerollcdn.com/icons/superfan.png' style={{ width: '35px', height: '35px'}}></img>\n                  </div>\n                  <div className=\"end\" style={{ borderTop: '13.5px solid #7D8F92' }}></div>\n                </div>\n                <div className='hexagon-trait' style={{ marginTop: '13.5px', marginLeft: '0px' }}>\n                  <div className=\"center\" style={{ display: 'flex', background: '#7D8F92', width: '31.2px', justifyContent: 'center', alignItems: 'center' }}>4</div>\n                </div>\n              </div>\n              <div className='single-trait'>\n                <div className='hexagon-trait'>\n                  <div className=\"start\" style={{ borderBottom: '13.5px solid #A0715E' }}></div>\n                  <div className=\"center\" style={{ display: 'flex', background: '#A0715E', justifyContent: 'center', alignItems: 'center' }}>\n                    <img alt='breakout' src='https://rerollcdn.com/icons/kda.png' style={{ width: '35px', height: '35px'}}></img>\n                  </div>\n                  <div className=\"end\" style={{ borderTop: '13.5px solid #A0715E' }}></div>\n                </div>\n                <div className='hexagon-trait' style={{ marginTop: '13.5px', marginLeft: '0px' }}>\n                  <div className=\"center\" style={{ display: 'flex', background: '#A0715E', width: '31.2px', justifyContent: 'center', alignItems: 'center' }}>3</div>\n                </div>\n              </div>\n            </div>\n            <div className='trait-row'>\n              <div className='single-trait'>\n                <div className='hexagon-trait'>\n                  <div className=\"start\" style={{ borderBottom: '13.5px solid #A0715E' }}></div>\n                  <div className=\"center\" style={{ display: 'flex', background: '#A0715E', justifyContent: 'center', alignItems: 'center' }}>\n                    <img alt='breakout' src='https://rerollcdn.com/icons/executioner.png' style={{ width: '35px', height: '35px'}}></img>\n                  </div>\n                  <div className=\"end\" style={{ borderTop: '13.5px solid #A0715E' }}></div>\n                </div>\n                <div className='hexagon-trait' style={{ marginTop: '13.5px', marginLeft: '0px' }}>\n                  <div className=\"center\" style={{ display: 'flex', background: '#A0715E', width: '31.2px', justifyContent: 'center', alignItems: 'center' }}>2</div>\n                </div>\n              </div>\n              <div className='single-trait'>\n                <div className='hexagon-trait'>\n                  <div className=\"start\" style={{ borderBottom: '13.5px solid #A0715E' }}></div>\n                  <div className=\"center\" style={{ display: 'flex', background: '#A0715E', justifyContent: 'center', alignItems: 'center' }}>\n                    <img alt='breakout' src='https://rerollcdn.com/icons/guardian.png' style={{ width: '35px', height: '35px'}}></img>\n                  </div>\n                  <div className=\"end\" style={{ borderTop: '13.5px solid #A0715E' }}></div>\n                </div>\n                <div className='hexagon-trait' style={{ marginTop: '13.5px', marginLeft: '0px' }}>\n                  <div className=\"center\" style={{ display: 'flex', background: '#A0715E', width: '31.2px', justifyContent: 'center', alignItems: 'center' }}>2</div>\n                </div>\n              </div>\n            </div>\n            <div className='trait-row'>\n              <div className='single-trait'>\n                <div className='hexagon-trait'>\n                  <div className=\"start\" style={{ borderBottom: '13.5px solid #A0715E' }}></div>\n                  <div className=\"center\" style={{ display: 'flex', background: '#A0715E', justifyContent: 'center', alignItems: 'center' }}>\n                    <img alt='breakout' src='https://rerollcdn.com/icons/sentinel.png' style={{ width: '35px', height: '35px'}}></img>\n                  </div>\n                  <div className=\"end\" style={{ borderTop: '13.5px solid #A0715E' }}></div>\n                </div>\n                <div className='hexagon-trait' style={{ marginTop: '13.5px', marginLeft: '0px' }}>\n                  <div className=\"center\" style={{ display: 'flex', background: '#A0715E', width: '31.2px', justifyContent: 'center', alignItems: 'center' }}>2</div>\n                </div>\n              </div>\n              <div className='single-trait'>\n                <div className='hexagon-trait'>\n                  <div className=\"start\" style={{ borderBottom: '13.5px solid transparent' }}></div>\n                  <div className=\"center\" style={{ display: 'flex', background: 'transparent', justifyContent: 'center', alignItems: 'center' }}></div>\n                  <div className=\"end\" style={{ borderTop: '13.5px solid transparent' }}></div>\n                </div>\n                <div className='hexagon-trait' style={{ marginTop: '13.5px', marginLeft: '0px' }}>\n                  <div className=\"center\" style={{ display: 'flex', background: 'transparent', width: '31.2px', justifyContent: 'center', alignItems: 'center' }}></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,aAAa,CACpB,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,UAAU,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,eAAe,CAAG,EAAE,CAC1B,KAAM,CAAAC,eAAe,CAAG,EAAE,CAC1B,GAAI,CAAAC,eAAe,CAAG,CAAC,CAEvB,KAAM,CAAAC,gBAAgB,CAAG,CACvB,CAAC,CAAE,CACD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnnC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CACpC,CAAC,CACD,CAAC,CAAE,CACD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CACpC,CAAC,CACD,CAAC,CAAE,CACD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CACpC,CAAC,CACD,CAAC,CAAE,CACD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CACpC,CAAC,CACD,CAAC,CAAE,CACD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CACpC,CAAC,CACD,CAAC,CAAE,CACD,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC3B,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC3B,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC3C,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC3B,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}