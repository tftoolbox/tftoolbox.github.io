{"ast":null,"code":"var _jsxFileName = \"/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Board.css';\nimport Hexagon from './Hexagon';\nimport Champion from './Champion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CIRCLE_DIAMETER = 50;\nconst adjacentHexagons = {\n  0: {\n    0: [[0, 1], [1, 0]],\n    1: [[0, 0], [1, 0], [1, 1], [1, 2], [0, 2]],\n    2: [[0, 1], [1, 2], [0, 3]],\n    3: [[0, 2], [1, 2], [1, 3], [1, 4], [0, 4]],\n    4: [[0, 3], [1, 4], [0, 5]],\n    5: [[0, 4], [1, 4], [1, 5], [1, 6], [0, 6]],\n    6: [[0, 5], [1, 6], [0, 7]],\n    7: [[0, 6], [1, 6], [1, 7]]\n  },\n  1: {\n    0: [[0, 0], [0, 1], [1, 1], [2, 0]],\n    1: [[1, 0], [0, 1], [1, 2], [2, 2], [2, 1], [2, 0]],\n    2: [[0, 1], [0, 2], [0, 3], [1, 3], [2, 2], [1, 1]],\n    3: [[1, 2], [0, 3], [1, 4], [2, 4], [2, 3], [2, 2]],\n    4: [[0, 3], [0, 4], [0, 5], [1, 5], [2, 4], [1, 3]],\n    5: [[1, 4], [0, 5], [1, 6], [2, 6], [2, 5], [2, 4]],\n    6: [[0, 5], [0, 6], [0, 7], [1, 7], [2, 6], [1, 5]],\n    7: [[1, 6], [0, 7], [2, 6], [2, 7]]\n  },\n  2: {\n    0: [[1, 0], [1, 1], [2, 1], [3, 0]],\n    1: [[2, 0], [1, 1], [2, 2], [3, 2], [3, 1], [3, 0]],\n    2: [[1, 1], [1, 2], [1, 3], [2, 3], [3, 2], [2, 1]],\n    3: [[2, 2], [1, 3], [2, 4], [3, 4], [3, 3], [3, 2]],\n    4: [[1, 3], [1, 4], [1, 5], [2, 5], [3, 4], [2, 3]],\n    5: [[2, 4], [1, 5], [2, 6], [3, 6], [3, 5], [3, 4]],\n    6: [[1, 5], [1, 6], [1, 7], [2, 7], [3, 6], [2, 5]],\n    7: [[2, 6], [1, 7], [3, 6], [3, 7]]\n  },\n  3: {\n    0: [[2, 0], [2, 1], [3, 1], [4, 0]],\n    1: [[3, 0], [2, 1], [3, 2], [4, 2], [4, 1], [4, 0]],\n    2: [[2, 1], [2, 2], [2, 3], [3, 3], [4, 2], [3, 1]],\n    3: [[3, 2], [2, 3], [3, 4], [4, 4], [4, 3], [4, 2]],\n    4: [[2, 3], [2, 4], [2, 5], [3, 5], [4, 4], [3, 3]],\n    5: [[3, 4], [2, 5], [3, 6], [4, 6], [4, 5], [4, 4]],\n    6: [[2, 5], [2, 6], [2, 7], [3, 7], [4, 6], [3, 5]],\n    7: [[3, 6], [2, 7], [4, 6], [4, 7]]\n  },\n  4: {\n    0: [[3, 0], [3, 1], [4, 1], [5, 0]],\n    1: [[4, 0], [3, 1], [4, 2], [5, 2], [5, 1], [5, 0]],\n    2: [[3, 1], [3, 2], [3, 3], [4, 3], [5, 2], [4, 1]],\n    3: [[4, 2], [3, 3], [4, 4], [5, 4], [5, 3], [5, 2]],\n    4: [[3, 3], [3, 4], [3, 5], [4, 5], [5, 4], [4, 3]],\n    5: [[4, 4], [3, 5], [4, 6], [5, 6], [5, 5], [5, 4]],\n    6: [[3, 5], [3, 6], [3, 7], [4, 7], [5, 6], [4, 5]],\n    7: [[4, 6], [3, 7], [5, 6], [5, 7]]\n  },\n  5: {\n    0: [[4, 0], [4, 1], [5, 1], [6, 0]],\n    1: [[5, 0], [4, 1], [5, 2], [6, 2], [6, 1], [6, 0]],\n    2: [[4, 1], [4, 2], [4, 3], [5, 3], [6, 2], [5, 1]],\n    3: [[5, 2], [4, 3], [5, 4], [6, 4], [6, 3], [6, 2]],\n    4: [[4, 3], [4, 4], [4, 5], [5, 5], [6, 4], [5, 3]],\n    5: [[5, 4], [4, 5], [5, 6], [6, 6], [6, 5], [6, 4]],\n    6: [[4, 5], [4, 6], [4, 7], [5, 7], [6, 6], [5, 5]],\n    7: [[5, 6], [4, 7], [6, 6], [6, 7]]\n  },\n  6: {\n    0: [[5, 0], [5, 1], [6, 1]],\n    1: [[6, 0], [5, 1], [6, 2]],\n    2: [[6, 1], [5, 1], [5, 2], [5, 3], [6, 3]],\n    3: [[6, 2], [5, 3], [6, 4]],\n    4: [[6, 3], [5, 3], [5, 4], [5, 5], [6, 5]],\n    5: [[6, 4], [5, 5], [6, 6]],\n    6: [[6, 5], [5, 5], [5, 6], [5, 7], [6, 7]],\n    7: [[6, 6], [5, 7]]\n  }\n};\nfunction getNeighbors(champion) {\n  const left = champion.hexagonPosition.left;\n  const top = champion.hexagonPosition.top;\n  if (adjacentHexagons[left] && adjacentHexagons[left][top]) {\n    return adjacentHexagons[left][top];\n  }\n  return [];\n}\nfunction isAdjacent(champion1, champion2) {\n  const hex1 = [champion1.hexagonPosition.left, champion1.hexagonPosition.top];\n  const hex2 = [champion2.hexagonPosition.left, champion2.hexagonPosition.top];\n  const neighbors = getNeighbors({\n    hexagonPosition: {\n      left: hex1[0],\n      top: hex1[1]\n    }\n  });\n  return neighbors.some(neighbor => neighbor[0] === hex2[0] && neighbor[1] === hex2[1]);\n}\nfunction findShortestPath(champions, start, end) {\n  const visited = new Set();\n  const queue = [[start]];\n  while (queue.length > 0) {\n    const path = queue.shift();\n    const currentHexagon = path[path.length - 1];\n    if (currentHexagon[0] !== undefined && currentHexagon[0] !== null) {\n      if (isAdjacent({\n        hexagonPosition: {\n          left: currentHexagon[0],\n          top: currentHexagon[1]\n        }\n      }, end)) {\n        return path;\n      }\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n        const neighbors = getNeighbors({\n          hexagonPosition: {\n            left: currentHexagon[0],\n            top: currentHexagon[1]\n          }\n        });\n        for (const neighbor of neighbors) {\n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    } else {\n      if (isAdjacent(currentHexagon, end)) {\n        return path;\n      }\n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n        const neighbors = getNeighbors(currentHexagon);\n        for (const neighbor of neighbors) {\n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\nfunction findClosestEnemy(userChampion, enemyChampions) {\n  let closestEnemy = null;\n  let minDistance = Infinity;\n  for (const enemyChampion of enemyChampions) {\n    const distance = findShortestPath(enemyChampions, {\n      hexagonPosition: {\n        left: userChampion.hexagonPosition.left,\n        top: userChampion.hexagonPosition.top\n      }\n    }, {\n      hexagonPosition: {\n        left: enemyChampion.hexagonPosition.left,\n        top: enemyChampion.hexagonPosition.top\n      }\n    });\n    if (distance && distance.length < minDistance) {\n      minDistance = distance.length;\n      closestEnemy = enemyChampion;\n    }\n  }\n  return closestEnemy;\n}\nfunction Board({\n  enemyChampionsList,\n  userChampionsList\n}) {\n  _s();\n  const [isDragging, setDragging] = useState(false);\n  const [enemyChampions, setEnemyChampions] = useState(enemyChampionsList);\n  const [userChampions, setUserChampions] = useState(userChampionsList);\n  const [draggedPlayer, setDraggedPlayer] = useState(null);\n  const [dragStartIndex, setDragStartIndex] = useState(null);\n  const [isCombatActive, setCombatActive] = useState(false);\n  const startCombat = () => {\n    setCombatActive(true);\n  };\n  useEffect(() => {\n    if (isCombatActive) {\n      const updatedUserChampions = userChampions.map(userChampion => {\n        const closestEnemy = findClosestEnemy(userChampion, enemyChampions);\n        if (closestEnemy) {\n          const shortestPath = findShortestPath(userChampions, userChampion, closestEnemy);\n          // Animate the movement along the path (you may need to implement animation logic)\n          // For simplicity, we will update the position directly without animation\n          if (shortestPath && shortestPath.length > 1) {\n            console.log(\"shortest path\", shortestPath);\n            const targetHexagon = shortestPath[1]; // The next hexagon in the path\n            const targetPixelLeft = convertToPixels(targetHexagon[0], 'left', targetHexagon[1] % 2 === 1) - 25;\n            const targetPixelTop = convertToPixels(targetHexagon[1], 'top', targetHexagon[1] % 2 === 1) - 25;\n            console.log(\"pixel left\", targetPixelLeft);\n            console.log(\"pixel top\", targetPixelTop);\n            return {\n              ...userChampion,\n              hexagonPosition: {\n                left: targetHexagon[0],\n                top: targetHexagon[1]\n              },\n              currentPosition: {\n                left: targetPixelLeft,\n                top: targetPixelTop\n              }\n            };\n          }\n        }\n        return userChampion;\n      });\n      const updatedEnemyChampions = enemyChampions.map(enemyChampion => {\n        const closestEnemy = findClosestEnemy(enemyChampion, userChampions);\n        if (closestEnemy) {\n          const shortestPath = findShortestPath(enemyChampions, enemyChampion, closestEnemy);\n          // Animate the movement along the path (you may need to implement animation logic)\n          // For simplicity, we will update the position directly without animation\n          if (shortestPath && shortestPath.length > 1) {\n            console.log(\"shortest path\", shortestPath);\n            const targetHexagon = shortestPath[1]; // The next hexagon in the path\n            const targetPixelLeft = convertToPixels(targetHexagon[0], 'left', targetHexagon[1] % 2 === 1) - 25;\n            const targetPixelTop = convertToPixels(targetHexagon[1], 'top', targetHexagon[1] % 2 === 1) - 25;\n            console.log(\"pixel left\", targetPixelLeft);\n            console.log(\"pixel top\", targetPixelTop);\n            return {\n              ...enemyChampion,\n              hexagonPosition: {\n                left: targetHexagon[0],\n                top: targetHexagon[1]\n              },\n              currentPosition: {\n                left: targetPixelLeft,\n                top: targetPixelTop\n              }\n            };\n          }\n        }\n        return enemyChampion;\n      });\n      setUserChampions(updatedUserChampions);\n      setEnemyChampions(updatedEnemyChampions);\n    }\n  }, [userChampions, isCombatActive, enemyChampions]);\n  const areChampionsOverlapping = (champion1, champion2) => {\n    const dx = champion1.currentPosition.left - champion2.currentPosition.left;\n    const dy = champion1.currentPosition.top - champion2.currentPosition.top;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < CIRCLE_DIAMETER;\n  };\n  const handleCircleDragStart = (event, player, index) => {\n    if (player === 'enemy') {\n      event.preventDefault(); // prevent dragging for enemy circles\n      return;\n    }\n    event.dataTransfer.setData('text/plain', 'champion');\n    setDragging(true);\n    setDraggedPlayer(player);\n    setDragStartIndex(index);\n  };\n  const handleCircleDragEnd = () => {\n    setDragging(false);\n    setDraggedPlayer(null);\n    setDragStartIndex(null);\n  };\n  const handleDragOver = event => {\n    event.dataTransfer.effectAllowed = 'none';\n    event.preventDefault();\n  };\n  const convertToPixels = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return 32.7 + (coordinate + 1) * 2.95 + coordinate * 62.4 + 62.4 / 2;\n      }\n      return (coordinate + 1) * 2.95 + coordinate * 62.4 + 62.4 / 2;\n    }\n    if (leftOrTop === 'top') {\n      return coordinate * 20.3 + coordinate * 36 + 36;\n    }\n  };\n  const convertToHexagons = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return Math.floor((coordinate - 32.7 - 2.95 - 31.2) / (2.95 + 62.4));\n      }\n      return Math.floor((coordinate - 2.95 - 31.2) / (2.95 + 62.4));\n    }\n    if (leftOrTop === 'top') {\n      return Math.floor((coordinate - 36) / (20.3 + 36));\n    }\n  };\n  const handleDrop = (event, hexagonCoordinates, player) => {\n    event.preventDefault();\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive) {\n      event.preventDefault();\n      return;\n    }\n    if (player === 'user' && dragStartIndex !== null) {\n      const hexagonCenterX = convertToPixels(hexagonCoordinates.left, 'left', hexagonCoordinates.top % 2 === 1);\n      const hexagonCenterY = convertToPixels(hexagonCoordinates.top, 'top', hexagonCoordinates.top % 2 === 1);\n      const targetHexagon = {\n        currentPosition: {\n          left: hexagonCenterX - CIRCLE_DIAMETER / 2,\n          top: hexagonCenterY - CIRCLE_DIAMETER / 2\n        }\n      };\n      const overlappingIndex = userChampions.findIndex((champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetHexagon));\n      if (overlappingIndex !== -1) {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex],\n            hexagonPosition: {\n              left: prevUserChampions[dragStartIndex].hexagonPosition.left,\n              top: prevUserChampions[dragStartIndex].hexagonPosition.top\n            },\n            currentPosition: {\n              left: prevUserChampions[dragStartIndex].currentPosition.left,\n              top: prevUserChampions[dragStartIndex].currentPosition.top\n            }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: hexagonCoordinates.left,\n              top: hexagonCoordinates.top\n            },\n            currentPosition: {\n              left: targetHexagon.currentPosition.left,\n              top: targetHexagon.currentPosition.top\n            }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: hexagonCoordinates.left,\n              top: hexagonCoordinates.top\n            },\n            currentPosition: {\n              left: targetHexagon.currentPosition.left,\n              top: targetHexagon.currentPosition.top\n            },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n  const handleCircleDrop = (event, circleCoordinates, index) => {\n    event.preventDefault();\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive) {\n      event.preventDefault();\n      return;\n    }\n    if (circleCoordinates.top >= 230 && dragStartIndex !== null) {\n      const targetChampion = {\n        currentPosition: {\n          left: circleCoordinates.left,\n          top: circleCoordinates.top\n        }\n      };\n      const overlappingIndex = userChampions.findIndex((champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetChampion));\n      if (overlappingIndex !== -1) {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex],\n            hexagonPosition: {\n              left: prevUserChampions[dragStartIndex].hexagonPosition.left,\n              top: prevUserChampions[dragStartIndex].hexagonPosition.top\n            },\n            currentPosition: {\n              left: prevUserChampions[dragStartIndex].currentPosition.left,\n              top: prevUserChampions[dragStartIndex].currentPosition.top\n            }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: prevUserChampions[index].hexagonPosition.left,\n              top: prevUserChampions[index].hexagonPosition.top\n            },\n            currentPosition: {\n              left: targetChampion.currentPosition.left,\n              top: targetChampion.currentPosition.top\n            }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions(prevUserChampions => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: {\n              left: prevUserChampions[index].hexagonPosition.left,\n              top: prevUserChampions[index].hexagonPosition.top\n            },\n            currentPosition: {\n              left: targetChampion.currentPosition.left,\n              top: targetChampion.currentPosition.top\n            },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row\",\n      children: [enemyChampions.map((champion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `circle-overlay ${isDragging && draggedPlayer === 'enemy' ? 'dragging' : ''}`,\n        style: {\n          left: champion.currentPosition.left + 'px',\n          top: champion.currentPosition.top + 'px'\n        },\n        draggable: true,\n        onDragStart: e => handleCircleDragStart(e, 'enemy', index),\n        onDragEnd: handleCircleDragEnd,\n        onDragOver: e => handleDragOver(e),\n        onDrop: e => handleCircleDrop(e, {\n          left: champion.currentPosition.left,\n          top: champion.currentPosition.top\n        }, index),\n        children: /*#__PURE__*/_jsxDEV(Champion, {\n          team: 'enemy',\n          hexagonPosition: champion.hexagonPosition,\n          currentPosition: champion.currentPosition,\n          image: champion.image,\n          type: champion.type,\n          starLevel: champion.starLevel,\n          headliner: champion.headliner,\n          items: champion.items\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 0,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 0,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row even\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 1,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 1,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 2,\n          even: 0\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 2,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row even\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"enemy\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 3,\n          even: 32.7\n        }, 'enemy'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 3,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 4,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 4,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row even\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 5,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 5,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 6,\n          even: 0\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 6,\n          even: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hex-row even\",\n      children: [userChampions.map((champion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `circle-overlay ${isDragging && draggedPlayer === 'user' ? 'dragging' : ''}`,\n        style: {\n          left: champion.currentPosition.left + 'px',\n          top: champion.currentPosition.top + 'px'\n        },\n        draggable: true,\n        onDragStart: e => handleCircleDragStart(e, 'user', index),\n        onDragEnd: handleCircleDragEnd,\n        onDragOver: e => handleDragOver(e),\n        onDrop: e => handleCircleDrop(e, {\n          left: champion.currentPosition.left,\n          top: champion.currentPosition.top\n        }, index),\n        children: /*#__PURE__*/_jsxDEV(Champion, {\n          team: 'user',\n          hexagonPosition: champion.hexagonPosition,\n          currentPosition: champion.currentPosition,\n          image: champion.image,\n          type: champion.type,\n          starLevel: champion.starLevel,\n          headliner: champion.headliner,\n          items: champion.items\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 0,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 0,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 1,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 1,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 2,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 2,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 3,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 3,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 4,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 4,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 5,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 5,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Hexagon, {\n        player: \"user\",\n        onDragOver: handleDragOver,\n        onDrop: e => handleDrop(e, {\n          left: 6,\n          top: 7,\n          even: 32.7\n        }, 'user'),\n        hexagonCoordinates: {\n          left: 6,\n          top: 7,\n          even: 32.7\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCombat,\n      children: \"Start Combat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 7\n  }, this);\n}\n_s(Board, \"KJPb4BCUIGfMipxAsfXmvxWQkRg=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Hexagon","Champion","jsxDEV","_jsxDEV","CIRCLE_DIAMETER","adjacentHexagons","getNeighbors","champion","left","hexagonPosition","top","isAdjacent","champion1","champion2","hex1","hex2","neighbors","some","neighbor","findShortestPath","champions","start","end","visited","Set","queue","length","path","shift","currentHexagon","undefined","has","toString","add","neighborStr","isChampionOccupied","c","newPath","push","findClosestEnemy","userChampion","enemyChampions","closestEnemy","minDistance","Infinity","enemyChampion","distance","Board","enemyChampionsList","userChampionsList","_s","isDragging","setDragging","setEnemyChampions","userChampions","setUserChampions","draggedPlayer","setDraggedPlayer","dragStartIndex","setDragStartIndex","isCombatActive","setCombatActive","startCombat","updatedUserChampions","map","shortestPath","console","log","targetHexagon","targetPixelLeft","convertToPixels","targetPixelTop","currentPosition","updatedEnemyChampions","areChampionsOverlapping","dx","dy","Math","sqrt","handleCircleDragStart","event","player","index","preventDefault","dataTransfer","setData","handleCircleDragEnd","handleDragOver","effectAllowed","coordinate","leftOrTop","even","convertToHexagons","floor","handleDrop","hexagonCoordinates","hexagonCenterX","hexagonCenterY","overlappingIndex","findIndex","prevUserChampions","image","handleCircleDrop","circleCoordinates","targetChampion","children","className","style","draggable","onDragStart","e","onDragEnd","onDragOver","onDrop","team","type","starLevel","headliner","items","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Board.css';\nimport Hexagon from './Hexagon';\nimport Champion from './Champion';\n\nconst CIRCLE_DIAMETER = 50;\n\nconst adjacentHexagons = {\n  0: { \n    0: [[0, 1], [1, 0]],\n    1: [[0, 0], [1, 0], [1, 1], [1, 2], [0, 2]],\n    2: [[0, 1], [1, 2], [0, 3]],\n    3: [[0, 2], [1, 2], [1, 3], [1, 4], [0, 4]],\n    4: [[0, 3], [1, 4], [0, 5]],\n    5: [[0, 4], [1, 4], [1, 5], [1, 6], [0, 6]],\n    6: [[0, 5], [1, 6], [0, 7]],\n    7: [[0, 6], [1, 6], [1, 7]],\n  },\n  1: { \n    0: [[0, 0], [0, 1], [1, 1], [2, 0]],\n    1: [[1, 0], [0, 1], [1, 2], [2, 2], [2, 1], [2, 0]],\n    2: [[0, 1], [0, 2], [0, 3], [1, 3], [2, 2], [1, 1]],\n    3: [[1, 2], [0, 3], [1, 4], [2, 4], [2, 3], [2, 2]],\n    4: [[0, 3], [0, 4], [0, 5], [1, 5], [2, 4], [1, 3]],\n    5: [[1, 4], [0, 5], [1, 6], [2, 6], [2, 5], [2, 4]],\n    6: [[0, 5], [0, 6], [0, 7], [1, 7], [2, 6], [1, 5]],\n    7: [[1, 6], [0, 7], [2, 6], [2, 7]],\n  },\n  2: { \n    0: [[1, 0], [1, 1], [2, 1], [3, 0]],\n    1: [[2, 0], [1, 1], [2, 2], [3, 2], [3, 1], [3, 0]],\n    2: [[1, 1], [1, 2], [1, 3], [2, 3], [3, 2], [2, 1]],\n    3: [[2, 2], [1, 3], [2, 4], [3, 4], [3, 3], [3, 2]],\n    4: [[1, 3], [1, 4], [1, 5], [2, 5], [3, 4], [2, 3]],\n    5: [[2, 4], [1, 5], [2, 6], [3, 6], [3, 5], [3, 4]],\n    6: [[1, 5], [1, 6], [1, 7], [2, 7], [3, 6], [2, 5]],\n    7: [[2, 6], [1, 7], [3, 6], [3, 7]],\n  },\n  3: { \n    0: [[2, 0], [2, 1], [3, 1], [4, 0]],\n    1: [[3, 0], [2, 1], [3, 2], [4, 2], [4, 1], [4, 0]],\n    2: [[2, 1], [2, 2], [2, 3], [3, 3], [4, 2], [3, 1]],\n    3: [[3, 2], [2, 3], [3, 4], [4, 4], [4, 3], [4, 2]],\n    4: [[2, 3], [2, 4], [2, 5], [3, 5], [4, 4], [3, 3]],\n    5: [[3, 4], [2, 5], [3, 6], [4, 6], [4, 5], [4, 4]],\n    6: [[2, 5], [2, 6], [2, 7], [3, 7], [4, 6], [3, 5]],\n    7: [[3, 6], [2, 7], [4, 6], [4, 7]],\n  },\n  4: { \n    0: [[3, 0], [3, 1], [4, 1], [5, 0]],\n    1: [[4, 0], [3, 1], [4, 2], [5, 2], [5, 1], [5, 0]],\n    2: [[3, 1], [3, 2], [3, 3], [4, 3], [5, 2], [4, 1]],\n    3: [[4, 2], [3, 3], [4, 4], [5, 4], [5, 3], [5, 2]],\n    4: [[3, 3], [3, 4], [3, 5], [4, 5], [5, 4], [4, 3]],\n    5: [[4, 4], [3, 5], [4, 6], [5, 6], [5, 5], [5, 4]],\n    6: [[3, 5], [3, 6], [3, 7], [4, 7], [5, 6], [4, 5]],\n    7: [[4, 6], [3, 7], [5, 6], [5, 7]],\n  },\n  5: { \n    0: [[4, 0], [4, 1], [5, 1], [6, 0]],\n    1: [[5, 0], [4, 1], [5, 2], [6, 2], [6, 1], [6, 0]],\n    2: [[4, 1], [4, 2], [4, 3], [5, 3], [6, 2], [5, 1]],\n    3: [[5, 2], [4, 3], [5, 4], [6, 4], [6, 3], [6, 2]],\n    4: [[4, 3], [4, 4], [4, 5], [5, 5], [6, 4], [5, 3]],\n    5: [[5, 4], [4, 5], [5, 6], [6, 6], [6, 5], [6, 4]],\n    6: [[4, 5], [4, 6], [4, 7], [5, 7], [6, 6], [5, 5]],\n    7: [[5, 6], [4, 7], [6, 6], [6, 7]],\n  },\n  6: { \n    0: [[5, 0], [5, 1], [6, 1]],\n    1: [[6, 0], [5, 1], [6, 2]],\n    2: [[6, 1], [5, 1], [5, 2], [5, 3], [6, 3]],\n    3: [[6, 2], [5, 3], [6, 4]],\n    4: [[6, 3], [5, 3], [5, 4], [5, 5], [6, 5]],\n    5: [[6, 4], [5, 5], [6, 6]],\n    6: [[6, 5], [5, 5], [5, 6], [5, 7], [6, 7]],\n    7: [[6, 6], [5, 7]],\n  },\n}\n\nfunction getNeighbors(champion) {\n  const left = champion.hexagonPosition.left;\n  const top = champion.hexagonPosition.top;\n  if (adjacentHexagons[left] && adjacentHexagons[left][top]) {\n    return adjacentHexagons[left][top];\n  }\n\n  return [];\n}\n\nfunction isAdjacent(champion1, champion2) {\n  const hex1 = [champion1.hexagonPosition.left, champion1.hexagonPosition.top];\n  const hex2 = [champion2.hexagonPosition.left, champion2.hexagonPosition.top];\n  const neighbors = getNeighbors({ hexagonPosition: { left: hex1[0], top: hex1[1] } });\n  \n  return neighbors.some(neighbor => neighbor[0] === hex2[0] && neighbor[1] === hex2[1]);\n}\n\nfunction findShortestPath(champions, start, end) {\n  const visited = new Set();\n  const queue = [[start]];\n  \n  while (queue.length > 0) {\n    const path = queue.shift();\n    const currentHexagon = path[path.length - 1];\n\n    if (currentHexagon[0] !== undefined && currentHexagon[0] !== null) {\n\n      if (isAdjacent({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } }, end)) {\n        return path;\n      }\n  \n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n\n  \n        const neighbors = getNeighbors({ hexagonPosition: { left: currentHexagon[0], top: currentHexagon[1] } });\n        \n        for (const neighbor of neighbors) {\n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n  \n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    } else {\n      if (isAdjacent(currentHexagon, end)) {\n        return path;\n      }\n  \n      if (!visited.has(currentHexagon.toString())) {\n        visited.add(currentHexagon.toString());\n  \n        const neighbors = getNeighbors(currentHexagon);\n        \n        for (const neighbor of neighbors) {\n          const neighborStr = neighbor.toString();\n          const isChampionOccupied = champions.some(c => c.hexagonPosition.left === neighbor[0] && c.hexagonPosition.top === neighbor[1]);\n  \n          if (!visited.has(neighborStr) && !isChampionOccupied) {\n            const newPath = [...path, neighbor];\n            queue.push(newPath);\n          }\n        }\n      }\n    }\n  }\n  return null;\n}\n\nfunction findClosestEnemy(userChampion, enemyChampions) {\n  let closestEnemy = null;\n  let minDistance = Infinity;\n\n  for (const enemyChampion of enemyChampions) {\n    const distance = findShortestPath(\n      enemyChampions,\n      { hexagonPosition: { left: userChampion.hexagonPosition.left, top: userChampion.hexagonPosition.top } },\n      { hexagonPosition: { left: enemyChampion.hexagonPosition.left, top: enemyChampion.hexagonPosition.top } }\n    );\n    if (distance && distance.length < minDistance) {\n      minDistance = distance.length;\n      closestEnemy = enemyChampion;\n    }\n  }\n\n  return closestEnemy;\n}\n\nfunction Board({ enemyChampionsList, userChampionsList }) {\n  const [isDragging, setDragging] = useState(false);\n  const [enemyChampions, setEnemyChampions] = useState(enemyChampionsList);\n  const [userChampions, setUserChampions] = useState(userChampionsList);\n  const [draggedPlayer, setDraggedPlayer] = useState(null);\n  const [dragStartIndex, setDragStartIndex] = useState(null);\n  const [isCombatActive, setCombatActive] = useState(false);\n\n  const startCombat = () => {\n    setCombatActive(true);\n  }\n\n  useEffect(() => {\n    if (isCombatActive) {\n      const updatedUserChampions = userChampions.map(userChampion => {\n        const closestEnemy = findClosestEnemy(userChampion, enemyChampions);\n        if (closestEnemy) {\n          const shortestPath = findShortestPath(userChampions, userChampion, closestEnemy);\n          // Animate the movement along the path (you may need to implement animation logic)\n          // For simplicity, we will update the position directly without animation\n          if (shortestPath && shortestPath.length > 1) {\n            console.log(\"shortest path\", shortestPath);\n            const targetHexagon = shortestPath[1]; // The next hexagon in the path\n            const targetPixelLeft = convertToPixels(targetHexagon[0], 'left', targetHexagon[1] % 2 === 1) - 25;\n            const targetPixelTop = convertToPixels(targetHexagon[1], 'top', targetHexagon[1] % 2 === 1) - 25;\n            console.log(\"pixel left\", targetPixelLeft);\n            console.log(\"pixel top\", targetPixelTop);\n            return {\n              ...userChampion,\n              hexagonPosition: { left: targetHexagon[0], top: targetHexagon[1] },\n              currentPosition: { left: targetPixelLeft, top: targetPixelTop },\n            };\n          }\n        }\n        return userChampion;\n      });\n      const updatedEnemyChampions = enemyChampions.map(enemyChampion => {\n        const closestEnemy = findClosestEnemy(enemyChampion, userChampions);\n        if (closestEnemy) {\n          const shortestPath = findShortestPath(enemyChampions, enemyChampion, closestEnemy);\n          // Animate the movement along the path (you may need to implement animation logic)\n          // For simplicity, we will update the position directly without animation\n          if (shortestPath && shortestPath.length > 1) {\n            console.log(\"shortest path\", shortestPath);\n            const targetHexagon = shortestPath[1]; // The next hexagon in the path\n            const targetPixelLeft = convertToPixels(targetHexagon[0], 'left', targetHexagon[1] % 2 === 1) - 25;\n            const targetPixelTop = convertToPixels(targetHexagon[1], 'top', targetHexagon[1] % 2 === 1) - 25;\n            console.log(\"pixel left\", targetPixelLeft);\n            console.log(\"pixel top\", targetPixelTop);\n            return {\n              ...enemyChampion,\n              hexagonPosition: { left: targetHexagon[0], top: targetHexagon[1] },\n              currentPosition: { left: targetPixelLeft, top: targetPixelTop },\n            };\n          }\n        }\n        return enemyChampion;\n      });\n\n      setUserChampions(updatedUserChampions);\n      setEnemyChampions(updatedEnemyChampions);\n    }\n  }, [userChampions, isCombatActive, enemyChampions]);\n\n  const areChampionsOverlapping = (champion1, champion2) => {\n    const dx = champion1.currentPosition.left - champion2.currentPosition.left;\n    const dy = champion1.currentPosition.top - champion2.currentPosition.top;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance < CIRCLE_DIAMETER; \n  };\n\n  const handleCircleDragStart = (event, player, index) => {\n    if (player === 'enemy') {\n      event.preventDefault(); // prevent dragging for enemy circles\n      return;\n    }\n\n    event.dataTransfer.setData('text/plain', 'champion'); \n    setDragging(true);\n    setDraggedPlayer(player);\n    setDragStartIndex(index);\n  };\n\n  const handleCircleDragEnd = () => {\n    setDragging(false);\n    setDraggedPlayer(null);\n    setDragStartIndex(null);\n  };\n\n  const handleDragOver = (event) => {\n    event.dataTransfer.effectAllowed = 'none';\n    event.preventDefault();\n  };\n\n  const convertToPixels = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return 32.7 + ((coordinate + 1) * 2.95) + (coordinate * 62.4) + 62.4 / 2;\n      }\n      return ((coordinate + 1) * 2.95) + (coordinate * 62.4) + 62.4 / 2;\n    }\n    if (leftOrTop === 'top') {\n      return (coordinate * 20.3) + (coordinate * 36) + 36;\n    }\n  }\n\n  const convertToHexagons = (coordinate, leftOrTop, even) => {\n    if (leftOrTop === 'left') {\n      if (even) {\n        return Math.floor((coordinate - 32.7 - 2.95 - 31.2) / (2.95 + 62.4));\n      }\n      return Math.floor((coordinate - 2.95 - 31.2) / (2.95 + 62.4));\n    }\n    if (leftOrTop === 'top') {\n      return Math.floor((coordinate - 36) / (20.3 + 36));\n    }\n  }\n\n  const handleDrop = (event, hexagonCoordinates, player) => {\n    event.preventDefault();\n\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive) {\n      event.preventDefault();\n      return;\n    }\n    if (player === 'user' && dragStartIndex !== null) {\n      const hexagonCenterX = convertToPixels(hexagonCoordinates.left, 'left', hexagonCoordinates.top % 2 === 1);\n      const hexagonCenterY = convertToPixels(hexagonCoordinates.top, 'top', hexagonCoordinates.top % 2 === 1);\n\n      const targetHexagon = {\n        currentPosition: {\n          left: hexagonCenterX - (CIRCLE_DIAMETER / 2),\n          top: hexagonCenterY - (CIRCLE_DIAMETER / 2)\n        }\n      };\n\n      const overlappingIndex = userChampions.findIndex(\n        (champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetHexagon)\n      );\n\n      if (overlappingIndex !== -1) {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex], \n            hexagonPosition: { left: prevUserChampions[dragStartIndex].hexagonPosition.left, top: prevUserChampions[dragStartIndex].hexagonPosition.top },\n            currentPosition: { left: prevUserChampions[dragStartIndex].currentPosition.left, top: prevUserChampions[dragStartIndex].currentPosition.top }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: hexagonCoordinates.left, top: hexagonCoordinates.top },\n            currentPosition: { left: targetHexagon.currentPosition.left, top: targetHexagon.currentPosition.top }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: hexagonCoordinates.left, top: hexagonCoordinates.top },\n            currentPosition: { left: targetHexagon.currentPosition.left, top: targetHexagon.currentPosition.top },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n\n  const handleCircleDrop = (event, circleCoordinates, index) => {\n    event.preventDefault();\n\n    if (draggedPlayer === 'enemy') {\n      return;\n    }\n    if (isCombatActive) {\n      event.preventDefault();\n      return;\n    }\n    if (circleCoordinates.top >= 230 && dragStartIndex !== null) {\n      const targetChampion = {\n        currentPosition: {\n          left: circleCoordinates.left,\n          top: circleCoordinates.top\n        }\n      };\n\n      const overlappingIndex = userChampions.findIndex(\n        (champion, index) => index !== dragStartIndex && areChampionsOverlapping(champion, targetChampion)\n      );\n\n      if (overlappingIndex !== -1) {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[overlappingIndex] = {\n            ...prevUserChampions[overlappingIndex], \n            hexagonPosition: { left: prevUserChampions[dragStartIndex].hexagonPosition.left, top: prevUserChampions[dragStartIndex].hexagonPosition.top },\n            currentPosition: { left: prevUserChampions[dragStartIndex].currentPosition.left, top: prevUserChampions[dragStartIndex].currentPosition.top }\n          };\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: prevUserChampions[index].hexagonPosition.left, top: prevUserChampions[index].hexagonPosition.top },\n            currentPosition: { left: targetChampion.currentPosition.left, top: targetChampion.currentPosition.top }\n          };\n          return updatedUserChampions;\n        });\n      } else {\n        setUserChampions((prevUserChampions) => {\n          const updatedUserChampions = [...prevUserChampions];\n          updatedUserChampions[dragStartIndex] = {\n            ...prevUserChampions[dragStartIndex],\n            hexagonPosition: { left: prevUserChampions[index].hexagonPosition.left, top: prevUserChampions[index].hexagonPosition.top },\n            currentPosition: { left: targetChampion.currentPosition.left, top: targetChampion.currentPosition.top },\n            image: updatedUserChampions[dragStartIndex].image\n          };\n          return updatedUserChampions;\n        });\n      }\n    }\n  };\n\n  return (\n      <div>\n        <div className='hex-row'>\n          {enemyChampions.map((champion, index) => (\n            <div\n              key={index}\n              className={`circle-overlay ${isDragging && draggedPlayer === 'enemy' ? 'dragging' : ''}`}\n              style={{ left: champion.currentPosition.left + 'px', top: champion.currentPosition.top + 'px' }}\n              draggable\n              onDragStart={(e) => handleCircleDragStart(e, 'enemy', index)}\n              onDragEnd={handleCircleDragEnd}\n              onDragOver={(e) => handleDragOver(e)}\n              onDrop={(e) => handleCircleDrop(e, { left: champion.currentPosition.left, top: champion.currentPosition.top }, index)}\n            >\n              <Champion\n                key={index}\n                team={'enemy'}\n                hexagonPosition={champion.hexagonPosition}\n                currentPosition={champion.currentPosition}\n                image={champion.image}\n                type={champion.type}\n                starLevel={champion.starLevel}\n                headliner={champion.headliner}\n                items={champion.items}\n              ></Champion>\n            </div>\n          ))}\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 0, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 0, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 0, even: 0 }}/>\n        </div>\n        <div className='hex-row even'>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 1, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 1, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 1, even: 32.7 }}/>\n        </div>\n        <div className='hex-row'> \n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 2, even: 0 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 2, even: 0 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 2, even: 0 }}/>\n        </div>\n        <div className='hex-row even'>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 0, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 1, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 2, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 3, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 4, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 5, top: 3, even: 32.7 }}/>\n          <Hexagon player='enemy' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 3, even: 32.7 }, 'enemy')} hexagonCoordinates={{ left: 6, top: 3, even: 32.7 }}/>\n        </div>\n        <div className='hex-row'>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 0, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 1, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 2, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 3, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 4, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 5, top: 4, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 4, even: 0 }, 'user')} hexagonCoordinates={{ left: 6, top: 4, even: 0 }}/>\n        </div>\n        <div className='hex-row even'>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 0, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 1, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 2, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 3, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 4, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 5, top: 5, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 5, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 6, top: 5, even: 32.7 }}/>\n        </div>\n        <div className='hex-row'>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 0, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 1, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 2, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 3, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 4, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 5, top: 6, even: 0 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 6, even: 0 }, 'user')} hexagonCoordinates={{ left: 6, top: 6, even: 0 }}/>\n        </div>\n        <div className='hex-row even'>\n          {userChampions.map((champion, index) => (\n            <div\n              key={index}\n              className={`circle-overlay ${isDragging && draggedPlayer === 'user' ? 'dragging' : ''}`}\n              style={{ left: champion.currentPosition.left + 'px', top: champion.currentPosition.top + 'px' }}\n              draggable\n              onDragStart={(e) => handleCircleDragStart(e, 'user', index)}\n              onDragEnd={handleCircleDragEnd}\n              onDragOver={(e) => handleDragOver(e)}\n              onDrop={(e) => handleCircleDrop(e, { left: champion.currentPosition.left, top: champion.currentPosition.top }, index)}\n            >\n              <Champion\n                key={index}\n                team={'user'}\n                hexagonPosition={champion.hexagonPosition}\n                currentPosition={champion.currentPosition}\n                image={champion.image}\n                type={champion.type}\n                starLevel={champion.starLevel}\n                headliner={champion.headliner}\n                items={champion.items}\n              ></Champion>\n            </div>\n          ))}\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 0, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 0, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 1, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 1, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 2, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 2, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 3, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 3, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 4, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 4, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 5, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 5, top: 7, even: 32.7 }}/>\n          <Hexagon player='user' onDragOver={handleDragOver} onDrop={(e) => handleDrop(e, { left: 6, top: 7, even: 32.7 }, 'user')} hexagonCoordinates={{ left: 6, top: 7, even: 32.7 }}/>\n        </div>\n        <button onClick={startCombat}>Start Combat</button>\n      </div>\n  );\n}\n\nexport default Board;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,eAAe,GAAG,EAAE;AAE1B,MAAMC,gBAAgB,GAAG;EACvB,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACpC,CAAC;EACD,CAAC,EAAE;IACD,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}