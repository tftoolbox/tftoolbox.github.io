{"ast":null,"code":"var _jsxFileName = \"/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Champion.js\";\nimport React from 'react';\nimport './Champion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Champion({\n  key,\n  team,\n  index,\n  hexagonPosition,\n  currentPosition,\n  image,\n  type,\n  starLevel,\n  headliner,\n  items,\n  alive,\n  attackRange,\n  health,\n  originalHealth,\n  attackDamage,\n  totalMana,\n  mana,\n  abilityPower,\n  armor,\n  magicResist\n}) {\n  // const healthTextStyle = {\n  //   color: team === 'enemy' ? 'red' : 'lightgreen',\n  //   fontSize: '12px', \n  // };\n\n  // const manaTextStyle = {\n  //   color: 'lightblue',\n  //   fontSize: '12px',\n  // };\n\n  const starStyle = {\n    color: 'yellow',\n    fontSize: '16px'\n  };\n  const renderStars = () => {\n    const stars = [];\n    for (let i = 0; i < starLevel; i++) {\n      stars.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        style: starStyle,\n        children: \"\\u2605\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }, this));\n    }\n    return stars;\n  };\n\n  // const roundedHealth = Math.ceil(health);\n  // const roundedMana = Math.ceil(mana);\n\n  const borderColor = team === 'user' ? 'blue' : 'red';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"champion\",\n    style: {\n      left: 0 + 'px',\n      top: 0 + 'px',\n      backgroundImage: `url(${image})`,\n      backgroundSize: 'cover',\n      border: `2px solid ${borderColor}`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: '-2.5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1',\n            backgroundColor: 'rgba(0,0,0,0.5)',\n            height: '7.5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: 'green',\n              height: '100%',\n              width: `calc(${health / originalHealth * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), totalMana > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '1',\n            backgroundColor: 'rgba(0,0,0,0.5)',\n            height: '7.5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#3E92CC',\n              height: '100%',\n              width: `${mana / totalMana * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star-overlay\",\n      children: renderStars()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = Champion;\nexport default Champion;\nvar _c;\n$RefreshReg$(_c, \"Champion\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Champion","key","team","index","hexagonPosition","currentPosition","image","type","starLevel","headliner","items","alive","attackRange","health","originalHealth","attackDamage","totalMana","mana","abilityPower","armor","magicResist","starStyle","color","fontSize","renderStars","stars","i","push","style","children","fileName","_jsxFileName","lineNumber","columnNumber","borderColor","className","left","top","backgroundImage","backgroundSize","border","display","alignItems","marginTop","flex","backgroundColor","height","width","_c","$RefreshReg$"],"sources":["/Users/michaelkim/Documents/GitHub/tft-toolbox/src/Champion.js"],"sourcesContent":["import React from 'react';\nimport './Champion.css'; \n\nfunction Champion({ key, team, index, hexagonPosition, currentPosition, image, type, starLevel, headliner, items, alive, attackRange, health, originalHealth,attackDamage, totalMana, mana, abilityPower, armor, magicResist }) {\n  // const healthTextStyle = {\n  //   color: team === 'enemy' ? 'red' : 'lightgreen',\n  //   fontSize: '12px', \n  // };\n\n  // const manaTextStyle = {\n  //   color: 'lightblue',\n  //   fontSize: '12px',\n  // };\n\n  const starStyle = {\n    color: 'yellow',\n    fontSize: '16px',  \n  };\n\n  const renderStars = () => {\n    const stars = [];\n    for (let i = 0; i < starLevel; i++) {\n      stars.push(<span key={i} style={starStyle}>â˜…</span>);\n    }\n    return stars;\n  };\n\n  // const roundedHealth = Math.ceil(health);\n  // const roundedMana = Math.ceil(mana);\n\n  const borderColor = team === 'user' ? 'blue' : 'red';\n\n  return (\n    <div\n      className={\"champion\"}\n      style={{ \n        left: 0 + 'px', \n        top: 0 + 'px', \n        backgroundImage: `url(${image})`,\n        backgroundSize: 'cover', \n        border: `2px solid ${borderColor}`\n      }}\n    >\n      <div style={{  }}>\n        <div style={{ display: 'flex', alignItems: 'center', marginTop: '-2.5px' }}>\n          <div style={{ flex: '1', backgroundColor: 'rgba(0,0,0,0.5)', height: '7.5px' }}>\n            <div style={{ backgroundColor: 'green', height: '100%', width: `calc(${(health / originalHealth) * 100}%` }}></div>\n          </div>\n        </div>\n        {totalMana > 0 && (\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <div style={{ flex: '1', backgroundColor: 'rgba(0,0,0,0.5)', height: '7.5px' }}>\n              <div style={{ backgroundColor: '#3E92CC', height: '100%', width: `${(mana / totalMana) * 100}%` }}></div>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"star-overlay\">\n        {renderStars()}\n      </div>\n    </div>\n  );\n}\n\nexport default Champion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}